{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new Promise(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return Promise.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * Base class that keeps track of parent and child nodes\n */\n\n\nvar Root = function () {\n  function Root(root, props) {\n    _classCallCheck(this, Root);\n\n    this.parent = null;\n    this.children = [];\n    this.root = root;\n    this.props = props;\n  }\n\n  _createClass(Root, [{\n    key: \"appendChild\",\n    value: function appendChild(child) {\n      child.parent = this;\n      this.children.push(child);\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(child) {\n      var index = this.children.indexOf(child);\n      child.parent = null;\n      this.children.splice(index, 1);\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var i;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                i = 0;\n\n              case 1:\n                if (!(i < this.children.length)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 4;\n                return this.children[i].render();\n\n              case 4:\n                i += 1;\n                _context.next = 1;\n                break;\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function renderChildren() {\n        return _ref.apply(this, arguments);\n      }\n\n      return renderChildren;\n    }()\n  }]);\n\n  return Root;\n}();\n\nexports.default = Root;","map":null,"metadata":{},"sourceType":"script"}