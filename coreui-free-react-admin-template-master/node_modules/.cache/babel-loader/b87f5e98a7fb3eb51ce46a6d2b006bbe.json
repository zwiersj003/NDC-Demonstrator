{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _componentValidators = require('../validators/componentValidators');\n\nvar _styles = require('../styles/styles');\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new Promise(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return Promise.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * This component wraps all the children (string, components) and renders them.\n * It only takes two props, 'align' for alignment of the document and 'info' for adding\n * document information like name of the author and description of the document. \n */\n\n\nvar Document = function () {\n  function Document(root, props) {\n    _classCallCheck(this, Document);\n\n    this.children = [];\n    this.root = root;\n    this.props = props; // Create a new paragraph\n\n    this.adder = this.root.doc.createP(); // Align the children which are of type string\n\n    this.adder.options.align = this.props.align; // Add document information\n\n    Object.assign(this.root.doc.options, this.props.info ? this.props.info : {}); // Validate the component props\n\n    (0, _componentValidators.validateDocProps)(this.props);\n  } // Store all the children here\n\n\n  _createClass(Document, [{\n    key: 'appendChild',\n    value: function appendChild(child) {\n      this.children.push(child);\n    }\n  }, {\n    key: 'removeChild',\n    value: function removeChild(child) {\n      var index = this.children.indexOf(child);\n      this.children.splice(index, 1);\n    }\n  }, {\n    key: 'renderChildren',\n    value: function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var i;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                i = 0;\n\n              case 1:\n                if (!(i < this.children.length)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                if (!(typeof this.children[i] === 'string')) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 5;\n                return this.adder.addText(this.children[i], this.props.style ? (0, _styles.applyStyles)(this.props.style) : {});\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                if (!(_typeof(this.children[i]) === 'object')) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 10;\n                return this.children[i].render(this.props.align, this.props.style ? this.props.style : {});\n\n              case 10:\n                i += 1;\n                _context.next = 1;\n                break;\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function renderChildren() {\n        return _ref.apply(this, arguments);\n      }\n\n      return renderChildren;\n    }()\n  }, {\n    key: 'render',\n    value: function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.renderChildren();\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function render() {\n        return _ref2.apply(this, arguments);\n      }\n\n      return render;\n    }()\n  }]);\n\n  return Document;\n}();\n\nexports.default = Document;","map":null,"metadata":{},"sourceType":"script"}