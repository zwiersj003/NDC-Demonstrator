{"ast":null,"code":"//\n// officegen: basic Microsoft Office common code\n//\n// Please refer to README.md for this module's documentations.\n//\n// NOTE:\n// - Before changing this code please refer to the hacking the code section on README.md.\n//\n// Copyright (c) 2013 Ziv Barber;\n//\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// 'Software'), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/**\r\n * Basicgen common utilities used by any document type related to Microsoft Office.\r\n */\nvar baseobj = require(\"./basicgen.js\");\n\nif (!String.prototype.encodeHTML) {\n  String.prototype.encodeHTML = function () {\n    return this.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n  };\n}\n/**\r\n * This method extending the given officegen object with the common code needed by any MS-Office based document. \r\n * Use this module for every type of MS-Office document.\r\n *\r\n * @example <caption>Using this module for implementing a new MS-Office based document type:</caption>\r\n * var baseobj = require ( \"officegen\" );\r\n * var msdoc = require ( \"./lib/msofficegen.js\" );\r\n *\r\n * function makeMyDoc ( officegenObj, typeCodeName, options, officegenObjPlugins, typeInfo ) {\r\n * \tmsdoc.makemsdoc ( officegenObj, typeCodeName, options, officegenObjPlugins, typeInfo );\r\n * \tofficegenObjPlugins.plugs.type.msoffice.makeOfficeGenerator ( 'word', 'document', {} );\r\n *\r\n * \tofficegenObj.on ( 'clearData', function () {\r\n * \t});\r\n * }\r\n * @param {object} genobj The object to extend.\r\n * @param {object} new_type The type of object to create.\r\n * @param {object} options The object's options.\r\n * @param {object} gen_private Access to the internals of this object.\r\n * @param {object} type_info Additional information about this type.\r\n * @summary Extend officegen object with MS-Office support.\r\n * @constructor\r\n * @name makemsdoc\r\n */\n\n\nfunction makemsdoc(genobj, new_type, options, gen_private, type_info) {\n  /**\r\n   * Generate string of the current date and time.\r\n   *\r\n   * This method generating a string with the current date and time in Office XML format.\r\n   *\r\n   * @return String of the current date and time in Office XML format.\r\n   */\n  function getCurDateTimeForOffice() {\n    var date = new Date();\n    var year = date.getFullYear();\n    var month = date.getMonth() + 1;\n    var day = date.getDate();\n    var hour = date.getHours();\n    var min = date.getMinutes();\n    var sec = date.getSeconds();\n    month = (month < 10 ? \"0\" : \"\") + month;\n    day = (day < 10 ? \"0\" : \"\") + day;\n    hour = (hour < 10 ? \"0\" : \"\") + hour;\n    min = (min < 10 ? \"0\" : \"\") + min;\n    sec = (sec < 10 ? \"0\" : \"\") + sec;\n    return year + \"-\" + month + \"-\" + day + \"T\" + hour + \":\" + min + \":\" + sec + 'Z';\n  }\n  /**\r\n   * Compact the given array.\r\n   *\r\n   * This function compacting the given array.\r\n   *\r\n   * @param {object} arr The array to compact.\r\n   */\n\n\n  function compactArray(arr) {\n    var len = arr.length,\n        i,\n        outArray;\n\n    for (i = 0; i < len; i++) {\n      if (arr[i]) {\n        arr.push(arr[i]);\n      } // Endif.\n\n    } // End of for loop.\n\n\n    arr.splice(0, len); // Cut the array and leave only the non-empty values.\n  }\n  /**\r\n   * Create the main files list resource.\r\n   *\r\n   * @param {object} data Ignored by this callback function.\r\n   * @return Text string.\r\n   */\n\n\n  function cbMakeMainFilesList(data) {\n    var outString = gen_private.plugs.type.msoffice.cbMakeMsOfficeBasicXml(data);\n    outString += '<Types xmlns=\"http://schemas.openxmlformats.org/package/2006/content-types\">';\n\n    for (var i = 0, total_size = gen_private.type.msoffice.files_list.length; i < total_size; i++) {\n      if (typeof gen_private.type.msoffice.files_list[i] != 'undefined') {\n        if (gen_private.type.msoffice.files_list[i].ext) {\n          // Fixed by @author:vtloc @date:2014Jan09\n          // Reason: if we write out duplicate extension, office will raise error\n          //\n          if (outString.indexOf('<Default Extension=\"' + gen_private.type.msoffice.files_list[i].ext) == -1) {\n            // check to make sure we don't write duplicate extension tag\n            outString += '<Default Extension=\"' + gen_private.type.msoffice.files_list[i].ext + '\" ContentType=\"' + gen_private.type.msoffice.files_list[i].type + '\"/>';\n          }\n        } else {\n          outString += '<Override PartName=\"' + gen_private.type.msoffice.files_list[i].name + '\" ContentType=\"' + gen_private.type.msoffice.files_list[i].type + '\"/>';\n        } // Endif.\n\n      } // Endif.\n\n    } // End of for loop.\n\n\n    outString += '</Types>\\n';\n    return outString;\n  }\n  /**\r\n   * ???.\r\n   *\r\n   * @param {object} data Ignored by this callback function.\r\n   * @return Text string.\r\n   */\n\n\n  function cbMakeTheme(data) {\n    if (genobj.theme) {\n      // console.log ( genobj.theme );\n      return genobj.theme;\n    } // Endif.\n\n\n    return gen_private.plugs.type.msoffice.cbMakeMsOfficeBasicXml(data) + '<a:theme xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" name=\"Office Theme\"><a:themeElements><a:clrScheme name=\"Office\"><a:dk1><a:sysClr val=\"windowText\" lastClr=\"000000\"/></a:dk1><a:lt1><a:sysClr val=\"window\" lastClr=\"FFFFFF\"/></a:lt1><a:dk2><a:srgbClr val=\"1F497D\"/></a:dk2><a:lt2><a:srgbClr val=\"EEECE1\"/></a:lt2><a:accent1><a:srgbClr val=\"4F81BD\"/></a:accent1><a:accent2><a:srgbClr val=\"C0504D\"/></a:accent2><a:accent3><a:srgbClr val=\"9BBB59\"/></a:accent3><a:accent4><a:srgbClr val=\"8064A2\"/></a:accent4><a:accent5><a:srgbClr val=\"4BACC6\"/></a:accent5><a:accent6><a:srgbClr val=\"F79646\"/></a:accent6><a:hlink><a:srgbClr val=\"0000FF\"/></a:hlink><a:folHlink><a:srgbClr val=\"800080\"/></a:folHlink></a:clrScheme><a:fontScheme name=\"Office\"><a:majorFont><a:latin typeface=\"Calibri\"/><a:ea typeface=\"\"/><a:cs typeface=\"\"/><a:font script=\"Jpan\" typeface=\"MS P????\"/><a:font script=\"Hang\" typeface=\"?? ??\"/><a:font script=\"Hans\" typeface=\"??\"/><a:font script=\"Hant\" typeface=\"????\"/><a:font script=\"Arab\" typeface=\"Times New Roman\"/><a:font script=\"Hebr\" typeface=\"Times New Roman\"/><a:font script=\"Thai\" typeface=\"Angsana New\"/><a:font script=\"Ethi\" typeface=\"Nyala\"/><a:font script=\"Beng\" typeface=\"Vrinda\"/><a:font script=\"Gujr\" typeface=\"Shruti\"/><a:font script=\"Khmr\" typeface=\"MoolBoran\"/><a:font script=\"Knda\" typeface=\"Tunga\"/><a:font script=\"Guru\" typeface=\"Raavi\"/><a:font script=\"Cans\" typeface=\"Euphemia\"/><a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/><a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/><a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/><a:font script=\"Thaa\" typeface=\"MV Boli\"/><a:font script=\"Deva\" typeface=\"Mangal\"/><a:font script=\"Telu\" typeface=\"Gautami\"/><a:font script=\"Taml\" typeface=\"Latha\"/><a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/><a:font script=\"Orya\" typeface=\"Kalinga\"/><a:font script=\"Mlym\" typeface=\"Kartika\"/><a:font script=\"Laoo\" typeface=\"DokChampa\"/><a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/><a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/><a:font script=\"Viet\" typeface=\"Times New Roman\"/><a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/></a:majorFont><a:minorFont><a:latin typeface=\"Calibri\"/><a:ea typeface=\"\"/><a:cs typeface=\"\"/><a:font script=\"Jpan\" typeface=\"MS P????\"/><a:font script=\"Hang\" typeface=\"?? ??\"/><a:font script=\"Hans\" typeface=\"??\"/><a:font script=\"Hant\" typeface=\"????\"/><a:font script=\"Arab\" typeface=\"Arial\"/><a:font script=\"Hebr\" typeface=\"Arial\"/><a:font script=\"Thai\" typeface=\"Cordia New\"/><a:font script=\"Ethi\" typeface=\"Nyala\"/><a:font script=\"Beng\" typeface=\"Vrinda\"/><a:font script=\"Gujr\" typeface=\"Shruti\"/><a:font script=\"Khmr\" typeface=\"DaunPenh\"/><a:font script=\"Knda\" typeface=\"Tunga\"/><a:font script=\"Guru\" typeface=\"Raavi\"/><a:font script=\"Cans\" typeface=\"Euphemia\"/><a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/><a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/><a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/><a:font script=\"Thaa\" typeface=\"MV Boli\"/><a:font script=\"Deva\" typeface=\"Mangal\"/><a:font script=\"Telu\" typeface=\"Gautami\"/><a:font script=\"Taml\" typeface=\"Latha\"/><a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/><a:font script=\"Orya\" typeface=\"Kalinga\"/><a:font script=\"Mlym\" typeface=\"Kartika\"/><a:font script=\"Laoo\" typeface=\"DokChampa\"/><a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/><a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/><a:font script=\"Viet\" typeface=\"Arial\"/><a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/></a:minorFont></a:fontScheme><a:fmtScheme name=\"Office\"><a:fillStyleLst><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:gradFill rotWithShape=\"1\"><a:gsLst><a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs><a:gs pos=\"35000\"><a:schemeClr val=\"phClr\"><a:tint val=\"37000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs><a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"15000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs></a:gsLst><a:lin ang=\"16200000\" scaled=\"1\"/></a:gradFill><a:gradFill rotWithShape=\"1\"><a:gsLst><a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:shade val=\"51000\"/><a:satMod val=\"130000\"/></a:schemeClr></a:gs><a:gs pos=\"80000\"><a:schemeClr val=\"phClr\"><a:shade val=\"93000\"/><a:satMod val=\"130000\"/></a:schemeClr></a:gs><a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"94000\"/><a:satMod val=\"135000\"/></a:schemeClr></a:gs></a:gsLst><a:lin ang=\"16200000\" scaled=\"0\"/></a:gradFill></a:fillStyleLst><a:lnStyleLst><a:ln w=\"9525\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"><a:shade val=\"95000\"/><a:satMod val=\"105000\"/></a:schemeClr></a:solidFill><a:prstDash val=\"solid\"/></a:ln><a:ln w=\"25400\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln><a:ln w=\"38100\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln></a:lnStyleLst><a:effectStyleLst><a:effectStyle><a:effectLst><a:outerShdw blurRad=\"40000\" dist=\"20000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"38000\"/></a:srgbClr></a:outerShdw></a:effectLst></a:effectStyle><a:effectStyle><a:effectLst><a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw></a:effectLst></a:effectStyle><a:effectStyle><a:effectLst><a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw></a:effectLst><a:scene3d><a:camera prst=\"orthographicFront\"><a:rot lat=\"0\" lon=\"0\" rev=\"0\"/></a:camera><a:lightRig rig=\"threePt\" dir=\"t\"><a:rot lat=\"0\" lon=\"0\" rev=\"1200000\"/></a:lightRig></a:scene3d><a:sp3d><a:bevelT w=\"63500\" h=\"25400\"/></a:sp3d></a:effectStyle></a:effectStyleLst><a:bgFillStyleLst><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:gradFill rotWithShape=\"1\"><a:gsLst><a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"40000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs><a:gs pos=\"40000\"><a:schemeClr val=\"phClr\"><a:tint val=\"45000\"/><a:shade val=\"99000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs><a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"20000\"/><a:satMod val=\"255000\"/></a:schemeClr></a:gs></a:gsLst><a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"-80000\" r=\"50000\" b=\"180000\"/></a:path></a:gradFill><a:gradFill rotWithShape=\"1\"><a:gsLst><a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"80000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs><a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"30000\"/><a:satMod val=\"200000\"/></a:schemeClr></a:gs></a:gsLst><a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"50000\" r=\"50000\" b=\"50000\"/></a:path></a:gradFill></a:bgFillStyleLst></a:fmtScheme></a:themeElements><a:objectDefaults/><a:extraClrSchemeLst/></a:theme>';\n  }\n  /**\r\n   * ???.\r\n   *\r\n   * @param {object} data Ignored by this callback function.\r\n   * @return Text string.\r\n   */\n\n\n  function cbMakeCore(data) {\n    var curDateTime = getCurDateTimeForOffice();\n    var userName = genobj.options.author || genobj.options.creator || 'officegen';\n    var extraFields = ''; // Work on all the properties:\n\n    for (var infoRec in genobj.info) {\n      if (genobj.info[infoRec] && genobj.info[infoRec].element && genobj.info[infoRec].data) {\n        extraFields += '<' + genobj.info[infoRec].element + '>' + genobj.info[infoRec].data.encodeHTML() + '</' + genobj.info[infoRec].element + '>';\n      } // Endif.\n\n    } // End of for loop.\n\n\n    return gen_private.plugs.type.msoffice.cbMakeMsOfficeBasicXml(data) + '<cp:coreProperties xmlns:cp=\"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns:dcmitype=\"http://purl.org/dc/dcmitype/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">' + extraFields + '<dc:creator>' + userName + '</dc:creator><cp:lastModifiedBy>' + userName + '</cp:lastModifiedBy><cp:revision>1</cp:revision><dcterms:created xsi:type=\"dcterms:W3CDTF\">' + curDateTime + '</dcterms:created><dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + curDateTime + '</dcterms:modified></cp:coreProperties>';\n  }\n  /**\r\n   * Remove selected records from the given array.\r\n   *\r\n   * This method destroys records inside the given array of the given type.\r\n   *\r\n   * @param {object} arr The array to work on it.\r\n   * @param {object} type_to_clear The type of records to clear.\r\n   */\n\n\n  function clearSmartArrayFromType(arr, type_to_clear) {\n    var is_need_compact = false;\n\n    for (var i = 0, total_size = arr.length; i < total_size; i++) {\n      if (typeof arr[i] != 'undefined') {\n        if (arr[i].clear && arr[i].clear == type_to_clear) {\n          delete arr[i];\n          is_need_compact = true;\n        } // Endif.\n\n      } // Endif.\n\n    } // End of for loop.\n\n\n    if (is_need_compact) {\n      compactArray(arr);\n    } // Endif.\n\n  }\n  /**\r\n   * Clean after finishing to generate the document.\r\n   *\r\n   * This method destroying any additional resources added by the 'beforeGen' effect to the generator.\r\n   *\r\n   * @param {object} err Generation error message (if there were any).\r\n   * @param {object} written Number of bytes been created.\r\n   */\n\n\n  function cbOfficeClearAfterGenerate(err, written) {\n    clearSmartArrayFromType(gen_private.type.msoffice.rels_main, 'generate');\n    clearSmartArrayFromType(gen_private.type.msoffice.rels_app, 'generate');\n    clearSmartArrayFromType(gen_private.type.msoffice.files_list, 'generate');\n\n    if (genobj.generate_data) {\n      genobj.generate_data = null;\n      delete genobj.generate_data;\n    } // Endif.\n\n  }\n  /**\r\n   * Clear all the information of the current document.\r\n   */\n\n\n  function cbOfficeClearDocData() {\n    clearSmartArrayFromType(gen_private.type.msoffice.rels_main, 'data');\n    clearSmartArrayFromType(gen_private.type.msoffice.rels_app, 'data');\n    clearSmartArrayFromType(gen_private.type.msoffice.files_list, 'data');\n\n    for (var infoItem in genobj.info) {\n      genobj.info[infoItem].data = genobj.info[infoItem].def_data;\n    } // Endif.\n\n\n    gen_private.type.msoffice.src_files_list = []; // Ask the document implementation to clear it's data:\n\n    genobj.emit('clearDocType', privateData);\n  } // Basic API for plugins:\n\n\n  gen_private.plugs.type.msoffice = {};\n  /**\r\n   * Configure a new Office property type.\r\n   *\r\n   * This method register a new type of property that the user can configure. This property must be \r\n   * a valid MS-Office property as you can configure on the \"files/properties\" menu option on MS-Office.\r\n   *\r\n   * @param {object} element_name The name of the XML element of this type.\r\n   * @param {object} def_data Default value of this type.\r\n   * @param {object} prop_name The name of the options property to configure this type.\r\n   * @param {object} user_access_func_name The name of the function to create to configure this type.\r\n   */\n\n  gen_private.plugs.type.msoffice.addInfoType = function (element_name, def_data, prop_name, user_access_func_name) {\n    genobj.info[element_name] = {};\n    genobj.info[element_name].element = element_name;\n    genobj.info[element_name].data = def_data;\n    genobj.info[element_name].def_data = def_data; // The user of officegen can configure this property using the options object:\n\n    if (genobj.options[prop_name]) {\n      genobj.info[element_name].data = genobj.options[prop_name];\n    } // Endif.\n\n\n    genobj[user_access_func_name] = function (new_data) {\n      genobj.info[element_name].data = new_data;\n    };\n  };\n  /**\r\n   * Get the string that opening every Office XML type.\r\n   *\r\n   * Every Microsoft Office XML resource will have this header at the begining of the file.\r\n   *\r\n   * @param {object} data Ignored by this callback function.\r\n   * @return Text string.\r\n   */\n\n\n  gen_private.plugs.type.msoffice.cbMakeMsOfficeBasicXml = function (data) {\n    return '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\n';\n  };\n  /**\r\n   * Generate rel based XML file.\r\n   *\r\n   * @param {object} data Array filled with all the rels links.\r\n   * @return Text string.\r\n   */\n\n\n  gen_private.plugs.type.msoffice.cbMakeRels = function (data) {\n    var outString = gen_private.plugs.type.msoffice.cbMakeMsOfficeBasicXml(data);\n    outString += '<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">'; // Add all the rels records inside the data array:\n\n    var realRel = 1;\n\n    for (var i = 0, total_size = data.length; i < total_size; i++) {\n      if (typeof data[i] != 'undefined') {\n        outString += '<Relationship Id=\"rId' + realRel + '\" Type=\"' + data[i].type + '\" Target=\"' + data[i].target + '\"';\n\n        if (data[i].targetMode) {\n          outString += ' TargetMode=\"' + data[i].targetMode + '\"';\n        } // Endif.\n\n\n        outString += '/>';\n        realRel++;\n      } // Endif.\n\n    } // End of for loop.\n\n\n    outString += '</Relationships>\\n';\n    return outString;\n  };\n  /**\r\n   * Prepare the officegen object to MS-Office documents.\r\n   *\r\n   * Every plugin that implementing gemenrating MS-Office document must call this method to initialize \r\n   * the common stuff.\r\n   *\r\n   * @param {object} main_path The name of the main folder holding the common resources of this type.\r\n   * @param {object} main_file The main resource file name of this type.\r\n   * @param {object} ext_opt Optional settings (unused right now).\r\n   */\n\n\n  gen_private.plugs.type.msoffice.makeOfficeGenerator = function (main_path, main_file, ext_opt) {\n    gen_private.features.type.msoffice = {};\n    gen_private.features.type.msoffice.main_path = main_path;\n    gen_private.features.type.msoffice.main_path_file = main_file;\n    gen_private.type.msoffice = {};\n    gen_private.type.msoffice.rels_main = [];\n    gen_private.type.msoffice.rels_app = [];\n    gen_private.type.msoffice.files_list = [];\n    gen_private.type.msoffice.src_files_list = []; // Holding all the Office properties:\n\n    genobj.info = {};\n    genobj.on('afterGen', cbOfficeClearAfterGenerate);\n    genobj.on('clearDoc', cbOfficeClearDocData);\n    gen_private.type.msoffice.rels_main.push({\n      target: 'docProps/app.xml',\n      type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties',\n      clear: 'type'\n    }, {\n      target: 'docProps/core.xml',\n      type: 'http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties',\n      clear: 'type'\n    }, {\n      target: gen_private.features.type.msoffice.main_path + '/' + gen_private.features.type.msoffice.main_path_file + '.xml',\n      type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument',\n      clear: 'type'\n    });\n    gen_private.type.msoffice.files_list.push({\n      ext: 'rels',\n      type: 'application/vnd.openxmlformats-package.relationships+xml',\n      clear: 'type'\n    }, {\n      ext: 'xml',\n      type: 'application/xml',\n      clear: 'type'\n    }, {\n      ext: 'jpeg',\n      type: 'image/jpeg',\n      clear: 'type'\n    }, {\n      ext: 'png',\n      type: 'image/png',\n      clear: 'type'\n    }, {\n      ext: 'gif',\n      type: 'image/gif',\n      clear: 'type'\n    }, {\n      name: '/docProps/app.xml',\n      type: 'application/vnd.openxmlformats-officedocument.extended-properties+xml',\n      clear: 'type'\n    }, {\n      name: '/' + gen_private.features.type.msoffice.main_path + '/theme/theme1.xml',\n      type: 'application/vnd.openxmlformats-officedocument.theme+xml',\n      clear: 'type'\n    }, {\n      name: '/docProps/core.xml',\n      type: 'application/vnd.openxmlformats-package.core-properties+xml',\n      clear: 'type'\n    });\n    genobj.theme = genobj.options.themeXml || null;\n\n    genobj.setTheme = function (xmlData) {\n      genobj.theme = xmlData; // BMK_TODO: BMK_TODO: In the future I'll add a parser to the .thmx files.\n    };\n\n    gen_private.plugs.intAddAnyResourceToParse('_rels\\\\.rels', 'buffer', gen_private.type.msoffice.rels_main, gen_private.plugs.type.msoffice.cbMakeRels, true);\n    gen_private.plugs.intAddAnyResourceToParse('[Content_Types].xml', 'buffer', null, cbMakeMainFilesList, true);\n    gen_private.plugs.intAddAnyResourceToParse('docProps\\\\core.xml', 'buffer', null, cbMakeCore, true);\n    gen_private.plugs.intAddAnyResourceToParse(gen_private.features.type.msoffice.main_path + '\\\\theme\\\\theme1.xml', 'buffer', null, cbMakeTheme, true);\n  };\n  /**\r\n   * Generate random unique ID.\r\n   *\r\n   * This method generates a random unique ID.\r\n   *\r\n   * @param {object} baseGroup Optional first part of the ID.\r\n   * @return Unique ID string.\r\n   */\n\n\n  gen_private.plugs.type.msoffice.makeUniqueID = function (baseGroup) {\n    var charTable = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n\n    function makeRandomChar() {\n      return charTable[Math.floor(Math.random() * charTable.length)];\n    }\n\n    var outStr = baseGroup || makeRandomChar() + makeRandomChar() + makeRandomChar() + makeRandomChar() + makeRandomChar() + makeRandomChar() + makeRandomChar() + makeRandomChar();\n    outStr += '-' + makeRandomChar() + makeRandomChar() + makeRandomChar() + makeRandomChar();\n    outStr += '-' + makeRandomChar() + makeRandomChar() + makeRandomChar() + makeRandomChar();\n    outStr += '-' + makeRandomChar() + makeRandomChar() + makeRandomChar() + makeRandomChar();\n    outStr += '-' + makeRandomChar() + makeRandomChar() + makeRandomChar() + makeRandomChar();\n    outStr += makeRandomChar() + makeRandomChar() + makeRandomChar() + makeRandomChar();\n    outStr += makeRandomChar() + makeRandomChar() + makeRandomChar() + makeRandomChar();\n    return outStr;\n  };\n\n  return this;\n}\n\nbaseobj.plugins.registerPrototype('msoffice', makemsdoc, 'Microsoft Office Document Prototype');\nexports.makemsdoc = makemsdoc;","map":null,"metadata":{},"sourceType":"script"}