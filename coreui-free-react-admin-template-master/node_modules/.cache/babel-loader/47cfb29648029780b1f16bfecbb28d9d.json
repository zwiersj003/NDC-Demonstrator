{"ast":null,"code":"import _classCallCheck from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/src/components/Report/GroupStatistics.js\";\nimport React, { Component } from 'react';\nimport { Button, Card, CardHeader, CardBody, Label, Row, Col } from 'reactstrap';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\nvar options = {\n  maintainAspectRatio: false,\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips\n  }\n};\n\nfunction Welcome(props) {\n  var naam = props.naam + 'kaas';\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Hello, \", naam);\n}\n\nfunction LocationsChart(props) {\n  var locations = props.selectedLocations;\n  var pie = {\n    labels: locations.map(function (i) {\n      return i.label;\n    }),\n    datasets: [{\n      data: locations.map(function (i) {\n        return i.count;\n      }),\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#7CFC00', '#FF0000', '#FFFF00'],\n      hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#7CFC00', '#FF0000', '#FFFF00']\n    }]\n  };\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Aantal deelnemers per locatie\"), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chart-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Pie, {\n    data: pie,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))));\n}\n\nfunction getPercentage(first, second) {\n  var difference = second - first;\n\n  switch (difference) {\n    case 0:\n      return 4;\n\n    case 1:\n      return 5;\n\n    case 2:\n      return 6;\n\n    case 3:\n      return 7;\n\n    case 4:\n      return 8;\n\n    default:\n      return 0;\n  }\n}\n\nfunction Progression(props) {\n  var results = props.results;\n  var averageProgression = [{\n    id: 0,\n    percentage: '-100%',\n    count: 0\n  }, {\n    id: 1,\n    percentage: '-75%',\n    count: 0\n  }, {\n    id: 2,\n    percentage: '-50%',\n    count: 0\n  }, {\n    id: 3,\n    percentage: '-25%',\n    count: 0\n  }, {\n    id: 4,\n    percentage: '0%',\n    count: 0\n  }, {\n    id: 5,\n    percentage: '25%',\n    count: 0\n  }, {\n    id: 6,\n    percentage: '50%',\n    count: 0\n  }, {\n    id: 7,\n    percentage: '75%',\n    count: 0\n  }, {\n    id: 8,\n    percentage: '100%',\n    count: 0\n  }];\n  var averageProgression1,\n      averageProgression2,\n      averageProgression3,\n      averageProgression4,\n      averageProgression5,\n      averageProgression6,\n      averageProgression7,\n      averageProgression8,\n      averageProgression9 = averageProgression;\n\n  for (var i = 0; i < results.length - 1; i++) {\n    if (results[i].Module_has_DeelnemerID === results[i + 1].Module_has_DeelnemerID && results[i].vragenlijstmoment === 0 && results[i + 1].vragenlijstmoment === 1) {\n      var answers0 = results[i];\n      var answers1 = results[i + 1];\n      console.log('Before: ' + averageProgression1[getPercentage(answers0.vraag1, answers1.vraag1)].count);\n      averageProgression1[getPercentage(answers0.vraag1, answers1.vraag1)].count += 1;\n      console.log('After: ' + averageProgression1[getPercentage(answers0.vraag1, answers1.vraag1)].count);\n    } else {\n      console.log('No match');\n    }\n  }\n\n  console.log('Average Progression: ' + averageProgression1);\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Vooruitgang(%) per vraag\"), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(ProgressionBar, {\n    progression: averageProgression1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })));\n}\n\nfunction ProgressionBar(props) {\n  var progression = props.progression;\n  var bar = {\n    labels: props.progression.map(function (i) {\n      return i.percentage;\n    }),\n    datasets: [{\n      label: 'Aantal Deelnemers',\n      backgroundColor: 'rgb(0,0,255)',\n      borderColor: 'rgb(0,0,0)',\n      borderWidth: 1,\n      height: '100px',\n      hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n      hoverBorderColor: 'rgba(255,99,132,1)',\n      data: props.progression.map(function (i) {\n        return i.count;\n      })\n    }]\n  };\n  return React.createElement(\"div\", {\n    className: \"chart-wrapper progression-chart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Bar, {\n    data: bar,\n    options: options,\n    height: 150,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }));\n}\n\nvar GroupStatistics =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GroupStatistics, _Component);\n\n  function GroupStatistics() {\n    _classCallCheck(this, GroupStatistics);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GroupStatistics).apply(this, arguments));\n  }\n\n  _createClass(GroupStatistics, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          results = _this$props.results,\n          selectedLocations = _this$props.selectedLocations;\n      return React.createElement(\"div\", {\n        className: \"group-statistics\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(LocationsChart, {\n        selectedLocations: selectedLocations,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(LocationsChart, {\n        selectedLocations: selectedLocations,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }))), React.createElement(Progression, {\n        results: results,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return GroupStatistics;\n}(Component);\n\nexport default GroupStatistics;","map":{"version":3,"sources":["/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/src/components/Report/GroupStatistics.js"],"names":["React","Component","Button","Card","CardHeader","CardBody","Label","Row","Col","Bar","Pie","CustomTooltips","options","maintainAspectRatio","tooltips","enabled","custom","Welcome","props","naam","LocationsChart","locations","selectedLocations","pie","labels","map","i","label","datasets","data","count","backgroundColor","hoverBackgroundColor","getPercentage","first","second","difference","Progression","results","averageProgression","id","percentage","averageProgression1","averageProgression2","averageProgression3","averageProgression4","averageProgression5","averageProgression6","averageProgression7","averageProgression8","averageProgression9","length","Module_has_DeelnemerID","vragenlijstmoment","answers0","answers1","console","log","vraag1","ProgressionBar","progression","bar","borderColor","borderWidth","height","hoverBorderColor","GroupStatistics"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,UAAvB,EAAmCC,QAAnC,EAA6CC,KAA7C,EAAoDC,GAApD,EAAyDC,GAAzD,QAAoE,YAApE;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,cAAT,QAA+B,+CAA/B;AAEA,IAAMC,OAAO,GAAG;AACZC,EAAAA,mBAAmB,EAAE,KADT;AAEZC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,KADH;AAENC,IAAAA,MAAM,EAAEL;AAFF;AAFE,CAAhB;;AAQA,SAASM,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,MAAIC,IAAI,GAAGD,KAAK,CAACC,IAAN,GAAa,MAAxB;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYA,IAAZ,CAAP;AACH;;AAED,SAASC,cAAT,CAAwBF,KAAxB,EAA+B;AAC3B,MAAMG,SAAS,GAAGH,KAAK,CAACI,iBAAxB;AACA,MAAMC,GAAG,GAAG;AACRC,IAAAA,MAAM,EAAEH,SAAS,CAACI,GAAV,CAAc,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,KAAN;AAAA,KAAf,CADA;AAERC,IAAAA,QAAQ,EAAE,CAAC;AACPC,MAAAA,IAAI,EAAER,SAAS,CAACI,GAAV,CAAc,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACI,KAAN;AAAA,OAAf,CADC;AAEPC,MAAAA,eAAe,EAAE,CACb,SADa,EAEb,SAFa,EAGb,SAHa,EAIb,SAJa,EAKb,SALa,EAMb,SANa,CAFV;AAUPC,MAAAA,oBAAoB,EAAE,CAClB,SADkB,EAElB,SAFkB,EAGlB,SAHkB,EAIlB,SAJkB,EAKlB,SALkB,EAMlB,SANkB;AAVf,KAAD;AAFF,GAAZ;AAsBA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,EAII,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAET,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAJJ,CADJ;AAYH;;AAED,SAASU,aAAT,CAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC;AAClC,MAAMC,UAAU,GAAGD,MAAM,GAAGD,KAA5B;;AACA,UAAQE,UAAR;AACI,SAAK,CAAL;AACI,aAAO,CAAP;;AACJ,SAAK,CAAL;AACI,aAAO,CAAP;;AACJ,SAAK,CAAL;AACI,aAAO,CAAP;;AACJ,SAAK,CAAL;AACI,aAAO,CAAP;;AACJ,SAAK,CAAL;AACI,aAAO,CAAP;;AACJ;AACI,aAAO,CAAP;AAZR;AAcH;;AAED,SAASC,WAAT,CAAqBnB,KAArB,EAA4B;AAExB,MAAMoB,OAAO,GAAGpB,KAAK,CAACoB,OAAtB;AACA,MAAIC,kBAAkB,GAAG,CACrB;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,UAAU,EAAE,OAArB;AAA8BX,IAAAA,KAAK,EAAE;AAArC,GADqB,EAErB;AAAEU,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,UAAU,EAAE,MAArB;AAA6BX,IAAAA,KAAK,EAAE;AAApC,GAFqB,EAGrB;AAAEU,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,UAAU,EAAE,MAArB;AAA6BX,IAAAA,KAAK,EAAE;AAApC,GAHqB,EAIrB;AAAEU,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,UAAU,EAAE,MAArB;AAA6BX,IAAAA,KAAK,EAAE;AAApC,GAJqB,EAKrB;AAAEU,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,UAAU,EAAE,IAArB;AAA2BX,IAAAA,KAAK,EAAE;AAAlC,GALqB,EAMrB;AAAEU,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,UAAU,EAAE,KAArB;AAA4BX,IAAAA,KAAK,EAAE;AAAnC,GANqB,EAOrB;AAAEU,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,UAAU,EAAE,KAArB;AAA4BX,IAAAA,KAAK,EAAE;AAAnC,GAPqB,EAQrB;AAAEU,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,UAAU,EAAE,KAArB;AAA4BX,IAAAA,KAAK,EAAE;AAAnC,GARqB,EASrB;AAAEU,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,UAAU,EAAE,MAArB;AAA6BX,IAAAA,KAAK,EAAE;AAApC,GATqB,CAAzB;AAWA,MAAIY,mBAAJ;AAAA,MAAyBC,mBAAzB;AAAA,MAA8CC,mBAA9C;AAAA,MAAmEC,mBAAnE;AAAA,MAAwFC,mBAAxF;AAAA,MAA6GC,mBAA7G;AAAA,MAAkIC,mBAAlI;AAAA,MAAuJC,mBAAvJ;AAAA,MAA4KC,mBAAmB,GAAGX,kBAAlM;;AAEA,OAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGY,OAAO,CAACa,MAAR,GAAiB,CAArC,EAAwCzB,CAAC,EAAzC,EAA6C;AACzC,QAAIY,OAAO,CAACZ,CAAD,CAAP,CAAW0B,sBAAX,KAAsCd,OAAO,CAACZ,CAAC,GAAG,CAAL,CAAP,CAAe0B,sBAArD,IAA+Ed,OAAO,CAACZ,CAAD,CAAP,CAAW2B,iBAAX,KAAiC,CAAhH,IAAqHf,OAAO,CAACZ,CAAC,GAAG,CAAL,CAAP,CAAe2B,iBAAf,KAAqC,CAA9J,EAAiK;AAC7J,UAAIC,QAAQ,GAAGhB,OAAO,CAACZ,CAAD,CAAtB;AACA,UAAI6B,QAAQ,GAAGjB,OAAO,CAACZ,CAAC,GAAG,CAAL,CAAtB;AACA8B,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAaf,mBAAmB,CAACT,aAAa,CAACqB,QAAQ,CAACI,MAAV,EAAkBH,QAAQ,CAACG,MAA3B,CAAd,CAAnB,CAAqE5B,KAA9F;AACAY,MAAAA,mBAAmB,CAACT,aAAa,CAACqB,QAAQ,CAACI,MAAV,EAAkBH,QAAQ,CAACG,MAA3B,CAAd,CAAnB,CAAqE5B,KAArE,IAA8E,CAA9E;AACA0B,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYf,mBAAmB,CAACT,aAAa,CAACqB,QAAQ,CAACI,MAAV,EAAkBH,QAAQ,CAACG,MAA3B,CAAd,CAAnB,CAAqE5B,KAA7F;AACH,KAND,MAMO;AACH0B,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH;AACJ;;AACDD,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0Bf,mBAAtC;AAEA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAII,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAgB,IAAA,WAAW,EAAEA,mBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CADJ;AAUH;;AAED,SAASiB,cAAT,CAAyBzC,KAAzB,EAAgC;AAC5B,MAAM0C,WAAW,GAAG1C,KAAK,CAAC0C,WAA1B;AACA,MAAMC,GAAG,GAAG;AACRrC,IAAAA,MAAM,EAAEN,KAAK,CAAC0C,WAAN,CAAkBnC,GAAlB,CAAsB,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACe,UAAN;AAAA,KAAvB,CADA;AAERb,IAAAA,QAAQ,EAAE,CACN;AACID,MAAAA,KAAK,EAAE,mBADX;AAEII,MAAAA,eAAe,EAAE,cAFrB;AAGI+B,MAAAA,WAAW,EAAE,YAHjB;AAIIC,MAAAA,WAAW,EAAE,CAJjB;AAKIC,MAAAA,MAAM,EAAE,OALZ;AAMIhC,MAAAA,oBAAoB,EAAE,sBAN1B;AAOIiC,MAAAA,gBAAgB,EAAE,oBAPtB;AAQIpC,MAAAA,IAAI,EAAEX,KAAK,CAAC0C,WAAN,CAAkBnC,GAAlB,CAAsB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACI,KAAN;AAAA,OAAvB;AARV,KADM;AAFF,GAAZ;AAgBA,SACI;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE+B,GAAX;AAAgB,IAAA,OAAO,EAAEjD,OAAzB;AAAkC,IAAA,MAAM,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH;;IAEKsD,e;;;;;;;;;;;;;6BACO;AAAA,wBACgC,KAAKhD,KADrC;AAAA,UACCoB,OADD,eACCA,OADD;AAAA,UACUhB,iBADV,eACUA,iBADV;AAEL,aACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAgB,QAAA,iBAAiB,EAAEA,iBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAgB,QAAA,iBAAiB,EAAEA,iBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CADJ,EASI,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAEgB,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CADJ;AAaH;;;;EAhByBrC,S;;AAmB9B,eAAeiE,eAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Card, CardHeader, CardBody, Label, Row, Col } from 'reactstrap'\nimport { Bar, Pie } from 'react-chartjs-2'\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips'\n\nconst options = {\n    maintainAspectRatio: false,\n    tooltips: {\n        enabled: false,\n        custom: CustomTooltips\n    }\n}\n\nfunction Welcome(props) {\n    var naam = props.naam + 'kaas'\n    return <h1>Hello, {naam}</h1>;\n}\n\nfunction LocationsChart(props) {\n    const locations = props.selectedLocations\n    const pie = {\n        labels: locations.map(i => i.label),\n        datasets: [{\n            data: locations.map(i => i.count),\n            backgroundColor: [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56',\n                '#7CFC00',\n                '#FF0000',\n                '#FFFF00'\n            ],\n            hoverBackgroundColor: [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56',\n                '#7CFC00',\n                '#FF0000',\n                '#FFFF00'\n            ],\n        }]\n    }\n    return (\n        <Card>\n            <CardHeader>\n                Aantal deelnemers per locatie\n            </CardHeader>\n            <CardBody>\n                <div className=\"chart-wrapper\">\n                    <Pie data={pie} />\n                </div>\n            </CardBody>\n        </Card>\n    )\n}\n\nfunction getPercentage(first, second) {\n    const difference = second - first\n    switch (difference) {\n        case 0:\n            return 4\n        case 1:\n            return 5\n        case 2:\n            return 6\n        case 3:\n            return 7\n        case 4:\n            return 8\n        default:\n            return 0\n    }\n}\n\nfunction Progression(props) {\n\n    const results = props.results\n    let averageProgression = [\n        { id: 0, percentage: '-100%', count: 0 },\n        { id: 1, percentage: '-75%', count: 0 },\n        { id: 2, percentage: '-50%', count: 0 },\n        { id: 3, percentage: '-25%', count: 0 },\n        { id: 4, percentage: '0%', count: 0 },\n        { id: 5, percentage: '25%', count: 0 },\n        { id: 6, percentage: '50%', count: 0 },\n        { id: 7, percentage: '75%', count: 0 },\n        { id: 8, percentage: '100%', count: 0 }\n    ]\n    let averageProgression1, averageProgression2, averageProgression3, averageProgression4, averageProgression5, averageProgression6, averageProgression7, averageProgression8, averageProgression9 = averageProgression\n\n    for (let i = 0; i < results.length - 1; i++) {\n        if (results[i].Module_has_DeelnemerID === results[i + 1].Module_has_DeelnemerID && results[i].vragenlijstmoment === 0 && results[i + 1].vragenlijstmoment === 1) {       \n            let answers0 = results[i]\n            let answers1 = results[i + 1]\n            console.log('Before: ' + averageProgression1[getPercentage(answers0.vraag1, answers1.vraag1)].count)\n            averageProgression1[getPercentage(answers0.vraag1, answers1.vraag1)].count += 1\n            console.log('After: ' + averageProgression1[getPercentage(answers0.vraag1, answers1.vraag1)].count)\n        } else {\n            console.log('No match')\n        }\n    }\n    console.log('Average Progression: ' + averageProgression1)\n\n    return (\n        <Card>\n            <CardHeader>\n                Vooruitgang(%) per vraag\n            </CardHeader>\n            <CardBody>\n                <ProgressionBar progression={averageProgression1}/>\n            </CardBody>\n        </Card>\n    )\n}\n\nfunction ProgressionBar (props) {\n    const progression = props.progression \n    const bar = {\n        labels: props.progression.map(i => i.percentage),\n        datasets: [\n            {\n                label: 'Aantal Deelnemers',\n                backgroundColor: 'rgb(0,0,255)',\n                borderColor: 'rgb(0,0,0)',\n                borderWidth: 1,\n                height: '100px',\n                hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n                hoverBorderColor: 'rgba(255,99,132,1)',\n                data: props.progression.map(i => i.count),\n            },\n        ],\n    }\n\n    return (\n        <div className=\"chart-wrapper progression-chart\">\n            <Bar data={bar} options={options} height={150} />\n        </div>\n    )\n}\n\nclass GroupStatistics extends Component {\n    render() {\n        let { results, selectedLocations } = this.props\n        return (\n            <div className=\"group-statistics\">\n                <Row>\n                    <Col sm=\"6\">\n                        <LocationsChart selectedLocations={selectedLocations} />\n                    </Col>\n                    <Col sm=\"6\">\n                        <LocationsChart selectedLocations={selectedLocations} />\n                    </Col>\n                </Row>\n                <Progression results={results} />\n            </div>\n        )\n    }\n}\n\nexport default GroupStatistics\n"]},"metadata":{},"sourceType":"module"}