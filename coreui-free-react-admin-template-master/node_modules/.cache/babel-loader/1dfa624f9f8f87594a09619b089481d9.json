{"ast":null,"code":"var isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isIndex = require('./isIndex'),\n    isLength = require('./isLength'),\n    keysIn = require('../object/keysIn');\n/** Used for native method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A fallback implementation of `Object.keys` which creates an array of the\n * own enumerable property names of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction shimKeys(object) {\n  var props = keysIn(object),\n      propsLength = props.length,\n      length = propsLength && object.length;\n  var allowIndexes = !!length && isLength(length) && (isArray(object) || isArguments(object));\n  var index = -1,\n      result = [];\n\n  while (++index < propsLength) {\n    var key = props[index];\n\n    if (allowIndexes && isIndex(key, length) || hasOwnProperty.call(object, key)) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = shimKeys;","map":null,"metadata":{},"sourceType":"script"}