{"ast":null,"code":"// Generated by CoffeeScript 1.9.1\n(function () {\n  var XMLProcessingInstruction, create;\n  create = require('lodash/object/create');\n\n  module.exports = XMLProcessingInstruction = function () {\n    function XMLProcessingInstruction(parent, target, value) {\n      this.stringify = parent.stringify;\n\n      if (target == null) {\n        throw new Error(\"Missing instruction target\");\n      }\n\n      this.target = this.stringify.insTarget(target);\n\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n\n    XMLProcessingInstruction.prototype.clone = function () {\n      return create(XMLProcessingInstruction.prototype, this);\n    };\n\n    XMLProcessingInstruction.prototype.toString = function (options, level) {\n      var indent, newline, offset, pretty, r, ref, ref1, ref2, space;\n      pretty = (options != null ? options.pretty : void 0) || false;\n      indent = (ref = options != null ? options.indent : void 0) != null ? ref : '  ';\n      offset = (ref1 = options != null ? options.offset : void 0) != null ? ref1 : 0;\n      newline = (ref2 = options != null ? options.newline : void 0) != null ? ref2 : '\\n';\n      level || (level = 0);\n      space = new Array(level + offset + 1).join(indent);\n      r = '';\n\n      if (pretty) {\n        r += space;\n      }\n\n      r += '<?';\n      r += this.target;\n\n      if (this.value) {\n        r += ' ' + this.value;\n      }\n\n      r += '?>';\n\n      if (pretty) {\n        r += newline;\n      }\n\n      return r;\n    };\n\n    return XMLProcessingInstruction;\n  }();\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}