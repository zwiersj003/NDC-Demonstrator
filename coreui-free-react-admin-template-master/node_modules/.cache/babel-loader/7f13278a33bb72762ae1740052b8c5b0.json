{"ast":null,"code":"//\n// officegen: All the code to generate PPTX/PPTS files.\n//\n// Please refer to README.md for this module's documentations.\n//\n// NOTE:\n// - Before changing this code please refer to the hacking the code section on README.md.\n//\n// Copyright (c) 2013 Ziv Barber;\n//\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// 'Software'), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/**\r\n * Basicgen plugin to create pptx files (Microsoft PowerPoint).\r\n */\nvar baseobj = require(\"./basicgen.js\");\n\nvar OfficeChart = require(\"./officechart.js\");\n\nvar msdoc = require(\"./msofficegen.js\");\n\nvar pptxShapes = require(\"./pptxshapes.js\");\n\nvar pptxFields = require(\"./pptxfields.js\");\n\nvar fs = require('fs');\n\nvar officeTable = require('./genofficetable');\n\nvar path = require('path');\n\nvar fast_image_size = require('fast-image-size');\n\nvar excelbuilder = require('./msexcel-builder.js');\n\nvar xmlBuilder = require('xmlbuilder');\n\nvar docplugman = require('./docplug'); // Officegen pptx plugins:\n\n\nvar plugWidescreen = require('./pptxplg-widescreen');\n\nvar plugSpeakernotes = require('./pptxplg-speakernotes');\n\nvar plugLayouts = require('./pptxplg-layouts'); // BMK_PPTX_PLUG:\n\n\nif (!String.prototype.encodeHTML) {\n  String.prototype.encodeHTML = function () {\n    return this.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n  };\n}\n\nvar GLOBAL_CHART_COUNT = 0;\n/**\r\n * Extend officegen object with PPTX/PPSX support.\r\n *\r\n * This method extending the given officegen object to create PPTX/PPSX document.\r\n *\r\n * @param {object} genobj The object to extend.\r\n * @param {string} new_type The type of object to create.\r\n * @param {object} options The object's options.\r\n * @param {object} gen_private Access to the internals of this object.\r\n * @param {object} type_info Additional information about this type.\r\n * @constructor\r\n * @name makePptx\r\n */\n\nfunction makePptx(genobj, new_type, options, gen_private, type_info) {\n  /**\r\n   * Prepare the default data.\r\n   * @param {object} docpluginman Access to the document plugins manager.\r\n   */\n  function setDefaultDocValues(docpluginman) {\n    var pptxData = docpluginman.getDataStorage(); // Please put any setting that API can override here:\n\n    pptxData.EMUS_PER_PT = 12700;\n    pptxData.pptWidth = 720 * pptxData.EMUS_PER_PT;\n    pptxData.pptHeight = 540 * pptxData.EMUS_PER_PT;\n    pptxData.pptType = 'screen4x3'; // Rels im the main rels file that depended on the data and must be added after the slides:\n\n    pptxData.extraMainRelList = [];\n  }\n  /**\r\n   * Convert shape name to shape information.\r\n   *\r\n   * This method convert the shape information reseived from the user to the real shape information object.\r\n   *\r\n   * @param {object} shapeName Either the name of the shape or the shape information.\r\n   * @return Information about this shape.\r\n   */\n\n\n  function getShapeInfo(shapeName) {\n    if (!shapeName) {\n      return pptxShapes.RECTANGLE;\n    } // Endif.\n\n\n    if (typeof shapeName == 'object' && shapeName.name && shapeName.displayName && shapeName.avLst) {\n      return shapeName;\n    } // Endif.\n\n\n    if (pptxShapes[shapeName]) {\n      return pptxShapes[shapeName];\n    } // Endif.\n\n\n    for (var shapeIntName in pptxShapes) {\n      if (pptxShapes[shapeIntName].name == shapeName) {\n        return pptxShapes[shapeIntName];\n      } // Endif.\n\n\n      if (pptxShapes[shapeIntName].displayName == shapeName) {\n        return pptxShapes[shapeIntName];\n      } // Endif.\n\n    } // End of for loop.\n\n\n    return pptxShapes.RECTANGLE;\n  }\n\n  genobj.shapes = pptxShapes;\n  genobj.fields = pptxFields;\n  genobj.options = options && typeof options == 'object' ? options : {}; // Temporary, I'll create a new code without the need to create a temp file (Ziv Barber, 2016-06-23):\n\n  if (!genobj.options.tempDir) {\n    genobj.options.tempDir = './';\n  } // Endif.\n\n  /**\r\n   * Prepare everything to generate PPTX files.\r\n   *\r\n   * This method checking for extra resources needed to add by the generator engine.\r\n   */\n\n\n  function cbPreparePptxToGenerate() {\n    genobj.generate_data = {}; // Tell all the features (plugins) that we are about to generate a new document zip:\n\n    gen_private.features.type.pptx.emitEvent('beforeGen', genobj); // Allow some plugins to do more stuff after all the plugins added their data:\n\n    gen_private.features.type.pptx.emitEvent('beforeGenFinal', genobj); // Apple Keynote requires these added *after* all slides:\n\n    gen_private.type.msoffice.rels_app.push({\n      type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/presProps',\n      target: 'presProps.xml',\n      clear: 'type'\n    }, {\n      type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/viewProps',\n      target: 'viewProps.xml',\n      clear: 'type'\n    }, {\n      type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme',\n      target: 'theme/theme1.xml',\n      clear: 'type'\n    }); // This event allow the plugins to add permanent rels that must be at the end: \n\n    var extraMainRelList = [];\n    gen_private.features.type.pptx.emitEvent('addMainRels', {\n      genobj: genobj,\n      relsList: extraMainRelList\n    });\n    extraMainRelList.forEach(function (value) {\n      gen_private.type.msoffice.rels_app.push(value);\n    }); // Add any extra rels needed by the plugins and depended on the data:\n\n    if (gen_private.type.pptx.extraMainRelList && typeof gen_private.type.pptx.extraMainRelList === 'object' && gen_private.type.pptx.extraMainRelList.forEach) {\n      gen_private.type.pptx.extraMainRelList.forEach(function (value) {\n        gen_private.type.msoffice.rels_app.push(value);\n      });\n    }\n\n    ;\n    gen_private.type.msoffice.rels_app.push({\n      type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/tableStyles',\n      target: 'tableStyles.xml',\n      clear: 'type'\n    });\n  }\n  /**\r\n   * Create the 'presProps.xml' resource.\r\n   *\r\n   * @param {object} data Ignored by this callback function.\r\n   * @return Text string.\r\n   */\n\n\n  function cbMakePptxPresProps(data) {\n    return gen_private.plugs.type.msoffice.cbMakeMsOfficeBasicXml(data) + '<p:presentationPr xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:p=\"http://schemas.openxmlformats.org/presentationml/2006/main\">\\\r\n\t<p:extLst>\\\r\n\t\t<p:ext uri=\"{E76CE94A-603C-4142-B9EB-6D1370010A27}\">\\\r\n\t\t\t<p14:discardImageEditData xmlns:p14=\"http://schemas.microsoft.com/office/powerpoint/2010/main\" val=\"0\"/>\\\r\n\t\t</p:ext>\\\r\n\t\t<p:ext uri=\"{D31A062A-798A-4329-ABDD-BBA856620510}\">\\\r\n\t\t\t<p14:defaultImageDpi xmlns:p14=\"http://schemas.microsoft.com/office/powerpoint/2010/main\" val=\"220\"/>\\\r\n\t\t</p:ext>\\\r\n\t\t<p:ext uri=\"{FD5EFAAD-0ECE-453E-9831-46B23BE46B34}\">\\\r\n\t\t\t<p15:chartTrackingRefBased xmlns:p15=\"http://schemas.microsoft.com/office/powerpoint/2012/main\" val=\"1\"/>\\\r\n\t\t</p:ext>\\\r\n\t</p:extLst>\\\r\n</p:presentationPr>';\n  }\n  /**\r\n   * Create the 'tableStyles.xml' resource.\r\n   *\r\n   * @param {object} data Ignored by this callback function.\r\n   * @return Text string.\r\n   */\n\n\n  function cbMakePptxStyles(data) {\n    return gen_private.plugs.type.msoffice.cbMakeMsOfficeBasicXml(data) + '<a:tblStyleLst xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" def=\"{5C22544A-7EE6-4342-B048-85BDC9FD1C3A}\"/>';\n  }\n  /**\r\n   * Create the 'viewProps.xml' resource.\r\n   *\r\n   * @param {object} data Ignored by this callback function.\r\n   * @return Text string.\r\n   */\n\n\n  function cbMakePptxViewProps(data) {\n    return gen_private.plugs.type.msoffice.cbMakeMsOfficeBasicXml(data) + '<p:viewPr xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:p=\"http://schemas.openxmlformats.org/presentationml/2006/main\"><p:normalViewPr><p:restoredLeft sz=\"15620\"/><p:restoredTop sz=\"94660\"/></p:normalViewPr><p:slideViewPr><p:cSldViewPr><p:cViewPr varScale=\"1\"><p:scale><a:sx n=\"64\" d=\"100\"/><a:sy n=\"64\" d=\"100\"/></p:scale><p:origin x=\"-1392\" y=\"-96\"/></p:cViewPr><p:guideLst><p:guide orient=\"horz\" pos=\"2160\"/><p:guide pos=\"2880\"/></p:guideLst></p:cSldViewPr></p:slideViewPr><p:notesTextViewPr><p:cViewPr><p:scale><a:sx n=\"100\" d=\"100\"/><a:sy n=\"100\" d=\"100\"/></p:scale><p:origin x=\"0\" y=\"0\"/></p:cViewPr></p:notesTextViewPr><p:gridSpacing cx=\"78028800\" cy=\"78028800\"/></p:viewPr>';\n  }\n  /**\r\n   * Create the 'slideLayout1.xml' resource.\r\n   *\r\n   * @param {object} data Ignored by this callback function.\r\n   * @return Text string.\r\n   */\n\n\n  function cbMakePptxLayout1(data) {\n    if (!data || typeof data !== 'object') {\n      data = {};\n    } // Endif.\n    // You can place here the title:\n\n\n    var ph1 = '<a:p><a:r><a:rPr lang=\"en-US\" smtClean=\"0\"/><a:t>Click to edit Master title style</a:t></a:r><a:endParaRPr lang=\"en-US\"/></a:p>';\n\n    if (data.ph1 && data.slide && data.ph1.length) {\n      ph1 = cMakePptxOutTextP('', data.ph1, {}, data.slide);\n    } // Endif.\n    // The sub-title:\n\n\n    var ph2 = '<a:p><a:r><a:rPr lang=\"en-US\" smtClean=\"0\"/><a:t>Click to edit Master subtitle style</a:t></a:r><a:endParaRPr lang=\"en-US\"/></a:p>';\n\n    if (data.ph2 && data.slide && data.ph2.length) {\n      ph2 = cMakePptxOutTextP('', data.ph2, {}, data.slide);\n    } // Endif.\n\n\n    var ph3 = createFieldText('DATE_TIME', 1, data.useDate);\n    var footFull = '';\n    var ft = '';\n    var curElNum = 4;\n\n    if (data.isDate || !data.isRealSlide) {\n      footFull += '<p:sp><p:nvSpPr><p:cNvPr id=\"' + curElNum + '\" name=\"Date Placeholder 3\"/><p:cNvSpPr><a:spLocks noGrp=\"1\"/></p:cNvSpPr><p:nvPr><p:ph type=\"dt\" sz=\"half\" idx=\"10\"/></p:nvPr></p:nvSpPr><p:spPr/><p:txBody><a:bodyPr/><a:lstStyle/><a:p><a:fld id=\"{F8166F1F-CE9B-4651-A6AA-CD717754106B}\" type=\"datetimeFigureOut\"><a:rPr lang=\"en-US\" smtClean=\"0\"/><a:t>' + ph3 + '</a:t></a:fld><a:endParaRPr lang=\"en-US\"/></a:p></p:txBody></p:sp>';\n      curElNum++;\n    } // Endif.\n\n\n    if (data.isFooter && data.ft && data.slide && data.ft.length) {\n      ft = cMakePptxOutTextP('', data.ft, {}, data.slide);\n      footFull += '<p:sp><p:nvSpPr><p:cNvPr id=\"' + curElNum + '\" name=\"Footer Placeholder 4\"/><p:cNvSpPr><a:spLocks noGrp=\"1\"/></p:cNvSpPr><p:nvPr><p:ph type=\"ftr\" sz=\"quarter\" idx=\"11\"/></p:nvPr></p:nvSpPr><p:spPr/><p:txBody><a:bodyPr/><a:lstStyle/>' + ft + '</p:txBody></p:sp>';\n      curElNum++;\n    } else if (!data.isRealSlide) {\n      footFull += '<p:sp><p:nvSpPr><p:cNvPr id=\"' + curElNum + '\" name=\"Footer Placeholder 4\"/><p:cNvSpPr><a:spLocks noGrp=\"1\"/></p:cNvSpPr><p:nvPr><p:ph type=\"ftr\" sz=\"quarter\" idx=\"11\"/></p:nvPr></p:nvSpPr><p:spPr/><p:txBody><a:bodyPr/><a:lstStyle/><a:p><a:endParaRPr lang=\"en-US\"/></a:p></p:txBody></p:sp>';\n      curElNum++;\n    } // Endif.\n\n\n    if (data.isSlideNum || !data.isRealSlide) {\n      footFull += '<p:sp><p:nvSpPr><p:cNvPr id=\"' + curElNum + '\" name=\"Slide Number Placeholder 5\"/><p:cNvSpPr><a:spLocks noGrp=\"1\"/></p:cNvSpPr><p:nvPr><p:ph type=\"sldNum\" sz=\"quarter\" idx=\"12\"/></p:nvPr></p:nvSpPr><p:spPr/><p:txBody><a:bodyPr/><a:lstStyle/><a:p><a:fld id=\"{B1393E5F-521B-4CAD-9D3A-AE923D912DCE}\" type=\"slidenum\"><a:rPr lang=\"en-US\" smtClean=\"0\"/><a:t>‹#›</a:t></a:fld><a:endParaRPr lang=\"en-US\"/></a:p></p:txBody></p:sp>';\n      curElNum++;\n    } // Endif.\n\n\n    return gen_private.plugs.type.msoffice.cbMakeMsOfficeBasicXml(data) + '<p:sld' + (data.isRealSlide ? '' : 'Layout') + ' xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:p=\"http://schemas.openxmlformats.org/presentationml/2006/main\"' + (data.isRealSlide ? '' : ' type=\"title\" preserve=\"1\"') + '><p:cSld name=\"Title Slide\"><p:spTree><p:nvGrpSpPr><p:cNvPr id=\"1\" name=\"\"/><p:cNvGrpSpPr/><p:nvPr/></p:nvGrpSpPr><p:grpSpPr><a:xfrm><a:off x=\"0\" y=\"0\"/><a:ext cx=\"0\" cy=\"0\"/><a:chOff x=\"0\" y=\"0\"/><a:chExt cx=\"0\" cy=\"0\"/></a:xfrm></p:grpSpPr><p:sp><p:nvSpPr><p:cNvPr id=\"2\" name=\"Title 1\"/><p:cNvSpPr><a:spLocks noGrp=\"1\"/></p:cNvSpPr><p:nvPr><p:ph type=\"ctrTitle\"/></p:nvPr></p:nvSpPr><p:spPr><a:xfrm><a:off x=\"685800\" y=\"2130425\"/><a:ext cx=\"7772400\" cy=\"1470025\"/></a:xfrm></p:spPr><p:txBody><a:bodyPr/><a:lstStyle/>' + ph1 + '</p:txBody></p:sp><p:sp><p:nvSpPr><p:cNvPr id=\"3\" name=\"Subtitle 2\"/><p:cNvSpPr><a:spLocks noGrp=\"1\"/></p:cNvSpPr><p:nvPr><p:ph type=\"subTitle\" idx=\"1\"/></p:nvPr></p:nvSpPr><p:spPr><a:xfrm><a:off x=\"1371600\" y=\"3886200\"/><a:ext cx=\"6400800\" cy=\"1752600\"/></a:xfrm></p:spPr><p:txBody><a:bodyPr/><a:lstStyle><a:lvl1pPr marL=\"0\" indent=\"0\" algn=\"ctr\"><a:buNone/><a:defRPr><a:solidFill><a:schemeClr val=\"tx1\"><a:tint val=\"75000\"/></a:schemeClr></a:solidFill></a:defRPr></a:lvl1pPr><a:lvl2pPr marL=\"457200\" indent=\"0\" algn=\"ctr\"><a:buNone/><a:defRPr><a:solidFill><a:schemeClr val=\"tx1\"><a:tint val=\"75000\"/></a:schemeClr></a:solidFill></a:defRPr></a:lvl2pPr><a:lvl3pPr marL=\"914400\" indent=\"0\" algn=\"ctr\"><a:buNone/><a:defRPr><a:solidFill><a:schemeClr val=\"tx1\"><a:tint val=\"75000\"/></a:schemeClr></a:solidFill></a:defRPr></a:lvl3pPr><a:lvl4pPr marL=\"1371600\" indent=\"0\" algn=\"ctr\"><a:buNone/><a:defRPr><a:solidFill><a:schemeClr val=\"tx1\"><a:tint val=\"75000\"/></a:schemeClr></a:solidFill></a:defRPr></a:lvl4pPr><a:lvl5pPr marL=\"1828800\" indent=\"0\" algn=\"ctr\"><a:buNone/><a:defRPr><a:solidFill><a:schemeClr val=\"tx1\"><a:tint val=\"75000\"/></a:schemeClr></a:solidFill></a:defRPr></a:lvl5pPr><a:lvl6pPr marL=\"2286000\" indent=\"0\" algn=\"ctr\"><a:buNone/><a:defRPr><a:solidFill><a:schemeClr val=\"tx1\"><a:tint val=\"75000\"/></a:schemeClr></a:solidFill></a:defRPr></a:lvl6pPr><a:lvl7pPr marL=\"2743200\" indent=\"0\" algn=\"ctr\"><a:buNone/><a:defRPr><a:solidFill><a:schemeClr val=\"tx1\"><a:tint val=\"75000\"/></a:schemeClr></a:solidFill></a:defRPr></a:lvl7pPr><a:lvl8pPr marL=\"3200400\" indent=\"0\" algn=\"ctr\"><a:buNone/><a:defRPr><a:solidFill><a:schemeClr val=\"tx1\"><a:tint val=\"75000\"/></a:schemeClr></a:solidFill></a:defRPr></a:lvl8pPr><a:lvl9pPr marL=\"3657600\" indent=\"0\" algn=\"ctr\"><a:buNone/><a:defRPr><a:solidFill><a:schemeClr val=\"tx1\"><a:tint val=\"75000\"/></a:schemeClr></a:solidFill></a:defRPr></a:lvl9pPr></a:lstStyle>' + ph2 + '</p:txBody></p:sp>' + footFull + '</p:spTree></p:cSld><p:clrMapOvr><a:masterClrMapping/></p:clrMapOvr></p:sld' + (data.isRealSlide ? '' : 'Layout') + '>';\n  }\n  /**\r\n   * Create the main presentation resource.\r\n   *\r\n   * This resource is the main resource of any PowerPoint document.\r\n   *\r\n   * @param {object} data Ignored by this callback function.\r\n   * @return Text string.\r\n   */\n\n\n  function cbMakePptxPresentation(data) {\n    var outString = gen_private.plugs.type.msoffice.cbMakeMsOfficeBasicXml(data) + '<p:presentation xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:p=\"http://schemas.openxmlformats.org/presentationml/2006/main\" saveSubsetFonts=\"1\"><p:sldMasterIdLst><p:sldMasterId id=\"2147483648\" r:id=\"rId1\"/></p:sldMasterIdLst>'; // Signal to the plugins to add any extra xml needed for this file:\n\n    var dataToPlugs = {\n      data: outString\n    };\n    gen_private.features.type.pptx.emitEvent('presentationGen', dataToPlugs);\n    outString = dataToPlugs.data + '<p:sldIdLst>';\n\n    for (var i = 0, total_size = gen_private.pages.length; i < total_size; i++) {\n      outString += '<p:sldId id=\"' + (i + 256) + '\" r:id=\"rId' + (i + 2) + '\"/>';\n    } // End of for loop.\n\n\n    outString += '</p:sldIdLst><p:sldSz cx=\"' + gen_private.type.pptx.pptWidth + '\" cy=\"' + gen_private.type.pptx.pptHeight + '\" type=\"' + gen_private.type.pptx.pptType + '\"/><p:notesSz cx=\"' + gen_private.type.pptx.pptHeight + '\" cy=\"' + gen_private.type.pptx.pptWidth + '\"/><p:defaultTextStyle><a:defPPr><a:defRPr lang=\"en-US\"/></a:defPPr>';\n    var curPos = 0;\n\n    for (var i = 1; i < 10; i++) {\n      outString += '<a:lvl' + i + 'pPr marL=\"' + curPos + '\" algn=\"l\" defTabSz=\"914400\" rtl=\"0\" eaLnBrk=\"1\" latinLnBrk=\"0\" hangingPunct=\"1\"><a:defRPr sz=\"1800\" kern=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"/></a:solidFill><a:latin typeface=\"+mn-lt\"/><a:ea typeface=\"+mn-ea\"/><a:cs typeface=\"+mn-cs\"/></a:defRPr></a:lvl' + i + 'pPr>';\n      curPos += 457200;\n    } // End of for loop.\n\n\n    outString += '</p:defaultTextStyle>';\n    outString += '<p:extLst>\\\r\n\t\t<p:ext uri=\"{EFAFB233-063F-42B5-8137-9DF3F51BA10A}\">\\\r\n\t\t\t<p15:sldGuideLst xmlns:p15=\"http://schemas.microsoft.com/office/powerpoint/2012/main\"/>\\\r\n\t\t</p:ext>\\\r\n\t</p:extLst></p:presentation>';\n    return outString;\n  }\n  /**\r\n   * Create the slides masters resource.\r\n   *\r\n   * @param {object} data Ignored by this callback function.\r\n   * @return Text string.\r\n   */\n\n\n  function cbMakePptxSlideMasters(data) {\n    var outData = gen_private.plugs.type.msoffice.cbMakeMsOfficeBasicXml(data) + '<p:sldMaster xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:p=\"http://schemas.openxmlformats.org/presentationml/2006/main\"><p:cSld><p:bg><p:bgRef idx=\"1001\"><a:schemeClr val=\"bg1\"/></p:bgRef></p:bg><p:spTree><p:nvGrpSpPr><p:cNvPr id=\"1\" name=\"\"/><p:cNvGrpSpPr/><p:nvPr/></p:nvGrpSpPr><p:grpSpPr><a:xfrm><a:off x=\"0\" y=\"0\"/><a:ext cx=\"0\" cy=\"0\"/><a:chOff x=\"0\" y=\"0\"/><a:chExt cx=\"0\" cy=\"0\"/></a:xfrm></p:grpSpPr><p:sp><p:nvSpPr><p:cNvPr id=\"2\" name=\"Title Placeholder 1\"/><p:cNvSpPr><a:spLocks noGrp=\"1\"/></p:cNvSpPr><p:nvPr><p:ph type=\"title\"/></p:nvPr></p:nvSpPr><p:spPr><a:xfrm><a:off x=\"457200\" y=\"274638\"/><a:ext cx=\"8229600\" cy=\"1143000\"/></a:xfrm><a:prstGeom prst=\"rect\"><a:avLst/></a:prstGeom></p:spPr><p:txBody><a:bodyPr vert=\"horz\" lIns=\"91440\" tIns=\"45720\" rIns=\"91440\" bIns=\"45720\" rtlCol=\"0\" anchor=\"ctr\"><a:normAutofit/></a:bodyPr><a:lstStyle/><a:p><a:r><a:rPr lang=\"en-US\" smtClean=\"0\"/><a:t>Click to edit Master title style</a:t></a:r><a:endParaRPr lang=\"en-US\"/></a:p></p:txBody></p:sp><p:sp><p:nvSpPr><p:cNvPr id=\"3\" name=\"Text Placeholder 2\"/><p:cNvSpPr><a:spLocks noGrp=\"1\"/></p:cNvSpPr><p:nvPr><p:ph type=\"body\" idx=\"1\"/></p:nvPr></p:nvSpPr><p:spPr><a:xfrm><a:off x=\"457200\" y=\"1600200\"/><a:ext cx=\"8229600\" cy=\"4525963\"/></a:xfrm><a:prstGeom prst=\"rect\"><a:avLst/></a:prstGeom></p:spPr><p:txBody><a:bodyPr vert=\"horz\" lIns=\"91440\" tIns=\"45720\" rIns=\"91440\" bIns=\"45720\" rtlCol=\"0\"><a:normAutofit/></a:bodyPr><a:lstStyle/><a:p><a:pPr lvl=\"0\"/><a:r><a:rPr lang=\"en-US\" smtClean=\"0\"/><a:t>Click to edit Master text styles</a:t></a:r></a:p><a:p><a:pPr lvl=\"1\"/><a:r><a:rPr lang=\"en-US\" smtClean=\"0\"/><a:t>Second level</a:t></a:r></a:p><a:p><a:pPr lvl=\"2\"/><a:r><a:rPr lang=\"en-US\" smtClean=\"0\"/><a:t>Third level</a:t></a:r></a:p><a:p><a:pPr lvl=\"3\"/><a:r><a:rPr lang=\"en-US\" smtClean=\"0\"/><a:t>Fourth level</a:t></a:r></a:p><a:p><a:pPr lvl=\"4\"/><a:r><a:rPr lang=\"en-US\" smtClean=\"0\"/><a:t>Fifth level</a:t></a:r><a:endParaRPr lang=\"en-US\"/></a:p></p:txBody></p:sp><p:sp><p:nvSpPr><p:cNvPr id=\"4\" name=\"Date Placeholder 3\"/><p:cNvSpPr><a:spLocks noGrp=\"1\"/></p:cNvSpPr><p:nvPr><p:ph type=\"dt\" sz=\"half\" idx=\"2\"/></p:nvPr></p:nvSpPr><p:spPr><a:xfrm><a:off x=\"457200\" y=\"6356350\"/><a:ext cx=\"2133600\" cy=\"365125\"/></a:xfrm><a:prstGeom prst=\"rect\"><a:avLst/></a:prstGeom></p:spPr><p:txBody><a:bodyPr vert=\"horz\" lIns=\"91440\" tIns=\"45720\" rIns=\"91440\" bIns=\"45720\" rtlCol=\"0\" anchor=\"ctr\"/><a:lstStyle><a:lvl1pPr algn=\"l\"><a:defRPr sz=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"><a:tint val=\"75000\"/></a:schemeClr></a:solidFill></a:defRPr></a:lvl1pPr></a:lstStyle><a:p><a:fld id=\"{F8166F1F-CE9B-4651-A6AA-CD717754106B}\" type=\"datetimeFigureOut\"><a:rPr lang=\"en-US\" smtClean=\"0\"/><a:t>6/13/2013</a:t></a:fld><a:endParaRPr lang=\"en-US\"/></a:p></p:txBody></p:sp><p:sp><p:nvSpPr><p:cNvPr id=\"5\" name=\"Footer Placeholder 4\"/><p:cNvSpPr><a:spLocks noGrp=\"1\"/></p:cNvSpPr><p:nvPr><p:ph type=\"ftr\" sz=\"quarter\" idx=\"3\"/></p:nvPr></p:nvSpPr><p:spPr><a:xfrm><a:off x=\"3124200\" y=\"6356350\"/><a:ext cx=\"2895600\" cy=\"365125\"/></a:xfrm><a:prstGeom prst=\"rect\"><a:avLst/></a:prstGeom></p:spPr><p:txBody><a:bodyPr vert=\"horz\" lIns=\"91440\" tIns=\"45720\" rIns=\"91440\" bIns=\"45720\" rtlCol=\"0\" anchor=\"ctr\"/><a:lstStyle><a:lvl1pPr algn=\"ctr\"><a:defRPr sz=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"><a:tint val=\"75000\"/></a:schemeClr></a:solidFill></a:defRPr></a:lvl1pPr></a:lstStyle><a:p><a:endParaRPr lang=\"en-US\"/></a:p></p:txBody></p:sp><p:sp><p:nvSpPr><p:cNvPr id=\"6\" name=\"Slide Number Placeholder 5\"/><p:cNvSpPr><a:spLocks noGrp=\"1\"/></p:cNvSpPr><p:nvPr><p:ph type=\"sldNum\" sz=\"quarter\" idx=\"4\"/></p:nvPr></p:nvSpPr><p:spPr><a:xfrm><a:off x=\"6553200\" y=\"6356350\"/><a:ext cx=\"2133600\" cy=\"365125\"/></a:xfrm><a:prstGeom prst=\"rect\"><a:avLst/></a:prstGeom></p:spPr><p:txBody><a:bodyPr vert=\"horz\" lIns=\"91440\" tIns=\"45720\" rIns=\"91440\" bIns=\"45720\" rtlCol=\"0\" anchor=\"ctr\"/><a:lstStyle><a:lvl1pPr algn=\"r\"><a:defRPr sz=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"><a:tint val=\"75000\"/></a:schemeClr></a:solidFill></a:defRPr></a:lvl1pPr></a:lstStyle><a:p><a:fld id=\"{F7021451-1387-4CA6-816F-3879F97B5CBC}\" type=\"slidenum\"><a:rPr lang=\"en-US\" smtClean=\"0\"/><a:t>�#�</a:t></a:fld><a:endParaRPr lang=\"en-US\"/></a:p></p:txBody></p:sp></p:spTree></p:cSld><p:clrMap bg1=\"lt1\" tx1=\"dk1\" bg2=\"lt2\" tx2=\"dk2\" accent1=\"accent1\" accent2=\"accent2\" accent3=\"accent3\" accent4=\"accent4\" accent5=\"accent5\" accent6=\"accent6\" hlink=\"hlink\" folHlink=\"folHlink\"/><p:sldLayoutIdLst>';\n    var curRelId = 1;\n    var curId = 2147483649;\n    var getDocData = plugsmanObj.getDataStorage(); // Add all the slide layouts needed:\n\n    outData += '<p:sldLayoutId id=\"' + curId + '\" r:id=\"rId' + curRelId + '\"/>';\n    curRelId++;\n    curId++;\n\n    if (getDocData.slideLayouts && typeof getDocData.slideLayouts === 'object') {\n      for (var item in getDocData.slideLayouts) {\n        if (getDocData.slideLayouts[item]) {\n          outData += '<p:sldLayoutId id=\"' + curId + '\" r:id=\"rId' + getDocData.slideLayouts[item].relIdMaster + '\"/>';\n          curRelId++;\n          curId++;\n        } // Endif.\n\n      } // End of for loop.\n\n    } // Endif.\n\n\n    outData += '</p:sldLayoutIdLst><p:txStyles><p:titleStyle><a:lvl1pPr algn=\"ctr\" defTabSz=\"914400\" rtl=\"0\" eaLnBrk=\"1\" latinLnBrk=\"0\" hangingPunct=\"1\"><a:spcBef><a:spcPct val=\"0\"/></a:spcBef><a:buNone/><a:defRPr sz=\"4400\" kern=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"/></a:solidFill><a:latin typeface=\"+mj-lt\"/><a:ea typeface=\"+mj-ea\"/><a:cs typeface=\"+mj-cs\"/></a:defRPr></a:lvl1pPr></p:titleStyle><p:bodyStyle><a:lvl1pPr marL=\"342900\" indent=\"-342900\" algn=\"l\" defTabSz=\"914400\" rtl=\"0\" eaLnBrk=\"1\" latinLnBrk=\"0\" hangingPunct=\"1\"><a:spcBef><a:spcPct val=\"20000\"/></a:spcBef><a:buFont typeface=\"Arial\" pitchFamily=\"34\" charset=\"0\"/><a:buChar char=\"�\"/><a:defRPr sz=\"3200\" kern=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"/></a:solidFill><a:latin typeface=\"+mn-lt\"/><a:ea typeface=\"+mn-ea\"/><a:cs typeface=\"+mn-cs\"/></a:defRPr></a:lvl1pPr><a:lvl2pPr marL=\"742950\" indent=\"-285750\" algn=\"l\" defTabSz=\"914400\" rtl=\"0\" eaLnBrk=\"1\" latinLnBrk=\"0\" hangingPunct=\"1\"><a:spcBef><a:spcPct val=\"20000\"/></a:spcBef><a:buFont typeface=\"Arial\" pitchFamily=\"34\" charset=\"0\"/><a:buChar char=\"�\"/><a:defRPr sz=\"2800\" kern=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"/></a:solidFill><a:latin typeface=\"+mn-lt\"/><a:ea typeface=\"+mn-ea\"/><a:cs typeface=\"+mn-cs\"/></a:defRPr></a:lvl2pPr><a:lvl3pPr marL=\"1143000\" indent=\"-228600\" algn=\"l\" defTabSz=\"914400\" rtl=\"0\" eaLnBrk=\"1\" latinLnBrk=\"0\" hangingPunct=\"1\"><a:spcBef><a:spcPct val=\"20000\"/></a:spcBef><a:buFont typeface=\"Arial\" pitchFamily=\"34\" charset=\"0\"/><a:buChar char=\"�\"/><a:defRPr sz=\"2400\" kern=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"/></a:solidFill><a:latin typeface=\"+mn-lt\"/><a:ea typeface=\"+mn-ea\"/><a:cs typeface=\"+mn-cs\"/></a:defRPr></a:lvl3pPr><a:lvl4pPr marL=\"1600200\" indent=\"-228600\" algn=\"l\" defTabSz=\"914400\" rtl=\"0\" eaLnBrk=\"1\" latinLnBrk=\"0\" hangingPunct=\"1\"><a:spcBef><a:spcPct val=\"20000\"/></a:spcBef><a:buFont typeface=\"Arial\" pitchFamily=\"34\" charset=\"0\"/><a:buChar char=\"�\"/><a:defRPr sz=\"2000\" kern=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"/></a:solidFill><a:latin typeface=\"+mn-lt\"/><a:ea typeface=\"+mn-ea\"/><a:cs typeface=\"+mn-cs\"/></a:defRPr></a:lvl4pPr><a:lvl5pPr marL=\"2057400\" indent=\"-228600\" algn=\"l\" defTabSz=\"914400\" rtl=\"0\" eaLnBrk=\"1\" latinLnBrk=\"0\" hangingPunct=\"1\"><a:spcBef><a:spcPct val=\"20000\"/></a:spcBef><a:buFont typeface=\"Arial\" pitchFamily=\"34\" charset=\"0\"/><a:buChar char=\"�\"/><a:defRPr sz=\"2000\" kern=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"/></a:solidFill><a:latin typeface=\"+mn-lt\"/><a:ea typeface=\"+mn-ea\"/><a:cs typeface=\"+mn-cs\"/></a:defRPr></a:lvl5pPr><a:lvl6pPr marL=\"2514600\" indent=\"-228600\" algn=\"l\" defTabSz=\"914400\" rtl=\"0\" eaLnBrk=\"1\" latinLnBrk=\"0\" hangingPunct=\"1\"><a:spcBef><a:spcPct val=\"20000\"/></a:spcBef><a:buFont typeface=\"Arial\" pitchFamily=\"34\" charset=\"0\"/><a:buChar char=\"�\"/><a:defRPr sz=\"2000\" kern=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"/></a:solidFill><a:latin typeface=\"+mn-lt\"/><a:ea typeface=\"+mn-ea\"/><a:cs typeface=\"+mn-cs\"/></a:defRPr></a:lvl6pPr><a:lvl7pPr marL=\"2971800\" indent=\"-228600\" algn=\"l\" defTabSz=\"914400\" rtl=\"0\" eaLnBrk=\"1\" latinLnBrk=\"0\" hangingPunct=\"1\"><a:spcBef><a:spcPct val=\"20000\"/></a:spcBef><a:buFont typeface=\"Arial\" pitchFamily=\"34\" charset=\"0\"/><a:buChar char=\"�\"/><a:defRPr sz=\"2000\" kern=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"/></a:solidFill><a:latin typeface=\"+mn-lt\"/><a:ea typeface=\"+mn-ea\"/><a:cs typeface=\"+mn-cs\"/></a:defRPr></a:lvl7pPr><a:lvl8pPr marL=\"3429000\" indent=\"-228600\" algn=\"l\" defTabSz=\"914400\" rtl=\"0\" eaLnBrk=\"1\" latinLnBrk=\"0\" hangingPunct=\"1\"><a:spcBef><a:spcPct val=\"20000\"/></a:spcBef><a:buFont typeface=\"Arial\" pitchFamily=\"34\" charset=\"0\"/><a:buChar char=\"�\"/><a:defRPr sz=\"2000\" kern=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"/></a:solidFill><a:latin typeface=\"+mn-lt\"/><a:ea typeface=\"+mn-ea\"/><a:cs typeface=\"+mn-cs\"/></a:defRPr></a:lvl8pPr><a:lvl9pPr marL=\"3886200\" indent=\"-228600\" algn=\"l\" defTabSz=\"914400\" rtl=\"0\" eaLnBrk=\"1\" latinLnBrk=\"0\" hangingPunct=\"1\"><a:spcBef><a:spcPct val=\"20000\"/></a:spcBef><a:buFont typeface=\"Arial\" pitchFamily=\"34\" charset=\"0\"/><a:buChar char=\"�\"/><a:defRPr sz=\"2000\" kern=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"/></a:solidFill><a:latin typeface=\"+mn-lt\"/><a:ea typeface=\"+mn-ea\"/><a:cs typeface=\"+mn-cs\"/></a:defRPr></a:lvl9pPr></p:bodyStyle><p:otherStyle><a:defPPr><a:defRPr lang=\"en-US\"/></a:defPPr><a:lvl1pPr marL=\"0\" algn=\"l\" defTabSz=\"914400\" rtl=\"0\" eaLnBrk=\"1\" latinLnBrk=\"0\" hangingPunct=\"1\"><a:defRPr sz=\"1800\" kern=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"/></a:solidFill><a:latin typeface=\"+mn-lt\"/><a:ea typeface=\"+mn-ea\"/><a:cs typeface=\"+mn-cs\"/></a:defRPr></a:lvl1pPr><a:lvl2pPr marL=\"457200\" algn=\"l\" defTabSz=\"914400\" rtl=\"0\" eaLnBrk=\"1\" latinLnBrk=\"0\" hangingPunct=\"1\"><a:defRPr sz=\"1800\" kern=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"/></a:solidFill><a:latin typeface=\"+mn-lt\"/><a:ea typeface=\"+mn-ea\"/><a:cs typeface=\"+mn-cs\"/></a:defRPr></a:lvl2pPr><a:lvl3pPr marL=\"914400\" algn=\"l\" defTabSz=\"914400\" rtl=\"0\" eaLnBrk=\"1\" latinLnBrk=\"0\" hangingPunct=\"1\"><a:defRPr sz=\"1800\" kern=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"/></a:solidFill><a:latin typeface=\"+mn-lt\"/><a:ea typeface=\"+mn-ea\"/><a:cs typeface=\"+mn-cs\"/></a:defRPr></a:lvl3pPr><a:lvl4pPr marL=\"1371600\" algn=\"l\" defTabSz=\"914400\" rtl=\"0\" eaLnBrk=\"1\" latinLnBrk=\"0\" hangingPunct=\"1\"><a:defRPr sz=\"1800\" kern=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"/></a:solidFill><a:latin typeface=\"+mn-lt\"/><a:ea typeface=\"+mn-ea\"/><a:cs typeface=\"+mn-cs\"/></a:defRPr></a:lvl4pPr><a:lvl5pPr marL=\"1828800\" algn=\"l\" defTabSz=\"914400\" rtl=\"0\" eaLnBrk=\"1\" latinLnBrk=\"0\" hangingPunct=\"1\"><a:defRPr sz=\"1800\" kern=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"/></a:solidFill><a:latin typeface=\"+mn-lt\"/><a:ea typeface=\"+mn-ea\"/><a:cs typeface=\"+mn-cs\"/></a:defRPr></a:lvl5pPr><a:lvl6pPr marL=\"2286000\" algn=\"l\" defTabSz=\"914400\" rtl=\"0\" eaLnBrk=\"1\" latinLnBrk=\"0\" hangingPunct=\"1\"><a:defRPr sz=\"1800\" kern=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"/></a:solidFill><a:latin typeface=\"+mn-lt\"/><a:ea typeface=\"+mn-ea\"/><a:cs typeface=\"+mn-cs\"/></a:defRPr></a:lvl6pPr><a:lvl7pPr marL=\"2743200\" algn=\"l\" defTabSz=\"914400\" rtl=\"0\" eaLnBrk=\"1\" latinLnBrk=\"0\" hangingPunct=\"1\"><a:defRPr sz=\"1800\" kern=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"/></a:solidFill><a:latin typeface=\"+mn-lt\"/><a:ea typeface=\"+mn-ea\"/><a:cs typeface=\"+mn-cs\"/></a:defRPr></a:lvl7pPr><a:lvl8pPr marL=\"3200400\" algn=\"l\" defTabSz=\"914400\" rtl=\"0\" eaLnBrk=\"1\" latinLnBrk=\"0\" hangingPunct=\"1\"><a:defRPr sz=\"1800\" kern=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"/></a:solidFill><a:latin typeface=\"+mn-lt\"/><a:ea typeface=\"+mn-ea\"/><a:cs typeface=\"+mn-cs\"/></a:defRPr></a:lvl8pPr><a:lvl9pPr marL=\"3657600\" algn=\"l\" defTabSz=\"914400\" rtl=\"0\" eaLnBrk=\"1\" latinLnBrk=\"0\" hangingPunct=\"1\"><a:defRPr sz=\"1800\" kern=\"1200\"><a:solidFill><a:schemeClr val=\"tx1\"/></a:solidFill><a:latin typeface=\"+mn-lt\"/><a:ea typeface=\"+mn-ea\"/><a:cs typeface=\"+mn-cs\"/></a:defRPr></a:lvl9pPr></p:otherStyle></p:txStyles></p:sldMaster>';\n    return outData;\n  }\n  /**\r\n   * Generate the XML code to describe colors.\r\n   *\r\n   * @param {object} color_info Foreground color information.\r\n   * @param {object} back_info Background color information.\r\n   */\n\n\n  function cMakePptxColorSelection(color_info, back_info) {\n    var outText = '';\n    var colorVal;\n    var fillType = 'solid';\n    var internalElements = '';\n\n    if (back_info) {\n      outText += '<p:bg><p:bgPr>';\n      outText += cMakePptxColorSelection(back_info, false);\n      outText += '<a:effectLst/>'; // BMK_TODO: (add support for effects)\n\n      outText += '</p:bgPr></p:bg>';\n    } // Endif.\n\n\n    if (color_info) {\n      if (typeof color_info == 'string') {\n        colorVal = color_info;\n      } else {\n        if (color_info.type) {\n          fillType = color_info.type;\n        } // Endif.\n\n\n        if (color_info.color) {\n          colorVal = color_info.color;\n        } // Endif.\n\n\n        if (color_info.alpha) {\n          internalElements += '<a:alpha val=\"' + (100 - color_info.alpha) + '000\"/>';\n        } // Endif.\n\n      } // Endif.\n\n\n      switch (fillType) {\n        case 'solid':\n          outText += '<a:solidFill><a:srgbClr val=\"' + colorVal + '\">' + internalElements + '</a:srgbClr></a:solidFill>';\n          break;\n\n        case 'gradient':\n          outText += '<a:gradFill flip=\"none\" rotWithShape=\"1\"><a:gsLst>';\n\n          for (var item in colorVal) {\n            if (typeof colorVal[item] == 'string') {\n              // Positions are inverted because they start with 100000:\n              outText += '<a:gs pos=\"' + (100000 - Math.round(100000 / (colorVal.length - 1) * item)) + '\"><a:srgbClr val=\"' + colorVal[item] + '\">' + internalElements + '</a:srgbClr></a:gs>';\n            } else {\n              outText += '<a:gs pos=\"' + colorVal[item].position * 1000 + '\"><a:srgbClr val=\"' + colorVal[item].color + '\">' + internalElements + '</a:srgbClr></a:gs>';\n            } // Endif.\n\n          } // End of for loop.\n\n\n          if (typeof color_info.angle != 'undefined') {\n            outText += '</a:gsLst><a:lin ang=\"' + color_info.angle * 100000 + '\" scaled=\"1\"/><a:tileRect/></a:gradFill>';\n          } else {\n            outText += '</a:gsLst><a:path path=\"circle\"><a:fillToRect l=\"100000\" t=\"100000\"/></a:path><a:tileRect r=\"-100000\" b=\"-100000\"/></a:gradFill>';\n          } // Endif.\n\n\n          break;\n      } // End of switch.\n\n    } // Endif.\n\n\n    return outText;\n  }\n  /**\r\n   * Translate field_name into the text real value.\r\n   *\r\n   * This method creating the text to display for the given field.\r\n   *\r\n   * @param {string} field_name the name of the field.\r\n   * @param {number} slide_num current slide number.\r\n   * @param {Date} useDate Optional date to use instead of the current date.\r\n   * @return The text string data.\r\n   */\n\n\n  function createFieldText(field_name, slide_num, useDate) {\n    var curDateTime = useDate ? new Date(useDate) : new Date();\n    var dayInWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    var monthsList = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    var monthsShortList = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    var outValue = ''; // curDateTime.getDate () \tReturns the day of the month (from 1-31)\n    // curDateTime.getDay () \tReturns the day of the week (from 0-6)\n    // curDateTime.getFullYear () \tReturns the year (four digits)\n    // curDateTime.getHours () \tReturns the hour (from 0-23)\n    // curDateTime.getMinutes () \tReturns the minutes (from 0-59)\n    // curDateTime.getMonth () \tReturns the month (from 0-11)\n    // curDateTime.getSeconds () \tReturns the seconds (from 0-59)\n\n    switch (field_name) {\n      // presentation slide number:\n      case 'SLIDE_NUM':\n      case 'slidenum':\n        outValue += slide_num;\n        break;\n      // default date time format for the rendering application:\n\n      case 'DATE_TIME':\n      case 'datetime':\n        outValue += curDateTime.getMonth() + 1 + '/' + curDateTime.getDate() + '/' + curDateTime.getFullYear();\n        break;\n      // MM/DD/YYYY date time format (Example: 10/12/2007):\n\n      case 'DATE_MM_DD_YYYY':\n      case 'datetime1':\n        outValue += curDateTime.getMonth() + 1 + '/' + curDateTime.getDate() + '/' + curDateTime.getFullYear();\n        break;\n      // Day, Month DD, YYYY date time format (Example: Friday, October 12, 2007):\n\n      case 'DATE_WD_MN_DD_YYYY':\n      case 'datetime2':\n        outValue += dayInWeek[curDateTime.getDay()] + ', ' + monthsList[curDateTime.getMonth()] + ' ' + curDateTime.getDate() + ', ' + curDateTime.getFullYear();\n        break;\n      // DD Month YYYY date time format (Example: 12 October 2007):\n\n      case 'DATE_DD_MN_YYYY':\n      case 'datetime3':\n        outValue += curDateTime.getDate() + ' ' + monthsList[curDateTime.getMonth()] + ' ' + curDateTime.getFullYear();\n        break;\n      // Month DD, YYYY date time format (Example: October 12, 2007):\n\n      case 'DATE_MN_DD_YYYY':\n      case 'datetime4':\n        outValue += monthsList[curDateTime.getMonth()] + ' ' + curDateTime.getDate() + ', ' + curDateTime.getFullYear();\n        break;\n      // DD-Mon-YY date time format (Example: 12-Oct-07):\n\n      case 'DATE_DD_SMN_YY':\n      case 'datetime5':\n        outValue += curDateTime.getDate() + '-' + monthsShortList[curDateTime.getMonth()] + '-' + curDateTime.getFullYear() % 100;\n        break;\n      // Month YY date time format (Example: October 07):\n\n      case 'DATE_MM_YY':\n      case 'datetime6':\n        outValue += monthsList[curDateTime.getMonth()] + ' ' + curDateTime.getFullYear() % 100;\n        break;\n      // Mon-YY date time format (Example: Oct-07):\n\n      case 'DATE_SMN_YY':\n      case 'datetime7':\n        outValue += monthsShortList[curDateTime.getMonth()] + '-' + curDateTime.getFullYear() % 100;\n        break;\n      // MM/DD/YYYY hh:mm AM/PM date time format (Example: 10/12/2007 4:28 PM):\n\n      case 'DATE_TIME_DD_MM_YYYY_HH_MM_PM':\n      case 'datetime8':\n        outValue += curDateTime.getMonth() + '/' + curDateTime.getDate() + '/' + curDateTime.getFullYear();\n        outValue += curDateTime.getHours() % 12 + ':' + curDateTime.getMinutes();\n        outValue += curDateTime.getHours() > 11 ? ' PM' : ' AM';\n        break;\n      // MM/DD/YYYY hh:mm:ss AM/PM date time format (Example: 10/12/2007 4:28:34 PM):\n\n      case 'DATE_TIME_DD_MM_YYYY_HH_MM_SC_PM':\n      case 'datetime9':\n        outValue += curDateTime.getMonth() + '/' + curDateTime.getDate() + '/' + curDateTime.getFullYear();\n        outValue += curDateTime.getHours() % 12 + ':' + curDateTime.getMinutes() + ':' + curDateTime.getSeconds();\n        outValue += curDateTime.getHours() > 11 ? ' PM' : ' AM';\n        break;\n      // hh:mm date time format (Example: 16:28):\n\n      case 'TIME_HH_MM':\n      case 'datetime10':\n        outValue += curDateTime.getHours() + ':' + curDateTime.getMinutes();\n        break;\n      // hh:mm:ss date time format (Example: 16:28:34):\n\n      case 'TIME_HH_MM_SC':\n      case 'datetime11':\n        outValue += curDateTime.getHours() + ':' + curDateTime.getMinutes() + ':' + curDateTime.getSeconds();\n        break;\n      // hh:mm AM/PM date time format (Example: 4:28 PM):\n\n      case 'TIME_HH_MM_PM':\n      case 'datetime12':\n        outValue += curDateTime.getHours() % 12 + ':' + curDateTime.getMinutes();\n        outValue += curDateTime.getHours() > 11 ? ' PM' : ' AM';\n        break;\n      // hh:mm:ss: AM/PM date time format (Example: 4:28:34 PM):\n\n      case 'TIME_HH_MM_SC_PM':\n      case 'datetime13':\n        outValue += curDateTime.getHours() % 12 + ':' + curDateTime.getMinutes() + ':' + curDateTime.getSeconds();\n        outValue += curDateTime.getHours() > 11 ? ' PM' : ' AM';\n        break;\n\n      default:\n        return null;\n    } // End of switch.\n\n\n    return outValue;\n  }\n  /**\r\n   * ???.\r\n   *\r\n   * @param {object} text_info Information how to display the text.\r\n   * @param {object} slide_obj The object of this slider.\r\n   * @return Text string.\r\n   */\n\n\n  function cMakePptxOutTextData(text_info, slide_obj) {\n    var out_obj = {};\n    out_obj.font_size = '';\n    out_obj.bold = '';\n    out_obj.italic = '';\n    out_obj.strike = '';\n    out_obj.underline = '';\n    out_obj.rpr_info = '';\n    out_obj.char_spacing = '';\n    out_obj.baseline = '';\n\n    if (typeof text_info == 'object') {\n      if (text_info.bold) {\n        out_obj.bold = ' b=\"1\"';\n      } // Endif.\n\n\n      if (text_info.italic) {\n        out_obj.italic = ' i=\"1\"';\n      } // Endif.\n\n\n      if (text_info.strike) {\n        out_obj.strike = ' strike=\"sngStrike\"';\n      } // Endif.\n\n\n      if (text_info.underline) {\n        out_obj.underline = ' u=\"sng\"';\n      } // Endif.\n\n\n      if (text_info.font_size) {\n        out_obj.font_size = ' sz=\"' + text_info.font_size + '00\"';\n      } // Endif.\n      // psv 2015-01-21 Manually copied in from https://github.com/Ziv-Barber/officegen/pull/41/files\n\n\n      if (text_info.char_spacing) {\n        out_obj.char_spacing = ' spc=\"' + text_info.char_spacing * 100 + '\"'; // Must also disable kerning; otherwise text won't actually expand:\n\n        out_obj.char_spacing += ' kern=\"0\"';\n      } // Endif.\n\n\n      if (text_info.baseline) {\n        out_obj.baseline = ' baseline=\"' + text_info.baseline * 1000 + '\"';\n      } // Endif.\n\n\n      if (text_info.color) {\n        out_obj.rpr_info += cMakePptxColorSelection(text_info.color);\n      } else if (slide_obj && slide_obj.color) {\n        out_obj.rpr_info += cMakePptxColorSelection(slide_obj.color);\n      } // Endif.\n\n\n      if (text_info.font_face) {\n        out_obj.rpr_info += '<a:latin typeface=\"' + text_info.font_face + '\" pitchFamily=\"34\" charset=\"0\"/><a:cs typeface=\"' + text_info.font_face + '\" pitchFamily=\"34\" charset=\"0\"/>';\n      } // Endif.\n\n    } else {\n      if (slide_obj && slide_obj.color) {\n        out_obj.rpr_info += cMakePptxColorSelection(slide_obj.color);\n      } // Endif.\n\n    } // Endif.\n\n\n    if (out_obj.rpr_info != '') {\n      out_obj.rpr_info += '</a:rPr>';\n    } // Endif.\n\n\n    return out_obj;\n  }\n  /**\r\n   * Create a text object for adding into a slide.\r\n   *\r\n   * @param {object} text_info Information how to display the text.\r\n   * @param {object} text_string The text string or requested field.\r\n   * @param {object} slide_obj The object of this slider.\r\n   * @param {object} slide_num Current slide number.\r\n   * @param {string} out_styles Paragraph style used to style paragraphs generated by newlines\r\n   * @return The PPTX code.\r\n   */\n\n\n  function cMakePptxOutTextCommand(text_info, text_string, slide_obj, slide_num, out_styles) {\n    text_info = text_info || {};\n    var area_opt_data = cMakePptxOutTextData(text_info, slide_obj);\n    var textStyles = ['font_size', 'strike', 'italic', 'bold', 'underline', 'char_spacing', 'baseline'].reduce(function (acc, attr) {\n      return acc + area_opt_data[attr];\n    }, '');\n    var parsedText;\n    var startInfo = '<a:rPr lang=\"en-US\"' + textStyles + ' dirty=\"0\" smtClean=\"0\"' + (area_opt_data.rpr_info != '' ? '>' + area_opt_data.rpr_info : '/>') + '<a:t>';\n    var endTag = '</a:r>';\n    var outData = '<a:r>' + startInfo;\n\n    if (text_string.field) {\n      endTag = '</a:fld>';\n      var outTextField = pptxFields[text_string.field];\n\n      if (outTextField === null) {\n        for (var fieldIntName in pptxFields) {\n          if (pptxFields[fieldIntName] === text_string.field) {\n            outTextField = text_string.field;\n            break;\n          } // Endif.\n\n        } // End of for loop.\n\n\n        if (outTextField === null) {\n          outTextField = 'datetime';\n        } // Endif.\n\n      } // Endif.\n\n\n      outData = '<a:fld id=\"{' + gen_private.plugs.type.msoffice.makeUniqueID('5C7A2A3D') + '}\" type=\"' + outTextField + '\">' + startInfo;\n      outData += createFieldText(outTextField, slide_num);\n    } else {\n      // Automatic support for newline - split it into multi-p:\n      parsedText = text_string.split(\"\\n\");\n\n      if (parsedText.length > 1) {\n        var outTextData = '';\n\n        for (var i = 0, total_size_i = parsedText.length; i < total_size_i; i++) {\n          outTextData += outData + parsedText[i].encodeHTML();\n\n          if (i + 1 < total_size_i) {\n            outTextData += '</a:t></a:r></a:p><a:p>';\n            if (out_styles) outTextData += out_styles;\n          } // Endif.\n\n        } // End of for loop.\n\n\n        outData = outTextData;\n      } else {\n        outData += text_string.encodeHTML();\n      } // Endif.\n\n    } // Endif.\n\n\n    var outBreakP = '';\n\n    if (text_info.breakLine) {\n      outBreakP += '</a:p><a:p>';\n    } // Endif.\n\n\n    return outData + '</a:t>' + endTag + outBreakP;\n  }\n  /**\r\n   * Create all the objects inside a single paragraph.\r\n   * @param {string} outString The string to add the output xml to it.\r\n   * @param {Array} pData Array with all the parts of this paragraph.\r\n   * @param {object} pOptions Paragraph options.\r\n   * @param {object} slideObj The object of this slider.\r\n   */\n\n\n  function cMakePptxOutTextP(outString, pData, pOptions, slideObj) {\n    var outStyles = '';\n    var moreStylesAttr;\n    var moreStyles; // Work on all the parts of this paragraph:\n\n    for (var j = 0, total_size_j = pData.length; j < total_size_j; j++) {\n      if (pData[j]) {\n        moreStylesAttr = '';\n        moreStyles = '';\n\n        if (pData[j].options) {\n          if (pData[j].options.align) {\n            switch (pData[j].options.align) {\n              case 'right':\n                moreStylesAttr += ' algn=\"r\"';\n                break;\n\n              case 'center':\n                moreStylesAttr += ' algn=\"ctr\"';\n                break;\n\n              case 'justify':\n                moreStylesAttr += ' algn=\"just\"';\n                break;\n            } // End of switch.\n\n          } // Endif.\n\n\n          if (pData[j].options.indentLevel > 0) {\n            moreStylesAttr += ' lvl=\"' + pData[j].options.indentLevel + '\"';\n          } // Endif.\n\n\n          if (pData[j].options.listType == 'number') {\n            moreStyles += '<a:buFont typeface=\"+mj-lt\"/><a:buAutoNum type=\"arabicPeriod\"/>';\n          } else if (pData[j].options.listType == 'dot') {\n            moreStyles += '<a:buChar char=\"•\"/>';\n          } // Endif.\n\n        } // Endif.\n\n\n        if (moreStyles != '') {\n          outStyles = '<a:pPr' + moreStylesAttr + '>' + moreStyles + '</a:pPr>';\n        } else if (moreStylesAttr != '') {\n          outStyles = '<a:pPr' + moreStylesAttr + '/>';\n        } // Endif.\n\n\n        if (outStyles || !j) {\n          if (j) {\n            outString += '</a:p>';\n          } // Endif.\n\n\n          outString += '<a:p>' + outStyles;\n        } // Endif.\n\n\n        outString += cMakePptxOutTextCommand(pData[j].options, pData[j].text, slideObj, slideObj.getPageNumber(), outStyles);\n      } // Endif.\n\n    } // End of for loop - adding all the objects inside the paragraph.\n\n\n    var font_size = '';\n\n    if (pOptions && pOptions.font_size) {\n      font_size = ' sz=\"' + pOptions.font_size + '00\"';\n    } // Endif.\n\n\n    outString += '<a:endParaRPr lang=\"en-US\"' + font_size + ' dirty=\"0\"/></a:p>';\n    return outString;\n  }\n  /**\r\n   * ???.\r\n   *\r\n   * @param {object} in_data_val Input value as passed by the user.\r\n   * @param {number} max_value Maximum value allowed.\r\n   * @param {number} def_value Default value.\r\n   * @param {number} auto_val ???.\r\n   * @param {number} mul_val ???.\r\n   * @return ???.\r\n   */\n\n\n  function parseSmartNumber(in_data_val, max_value, def_value, auto_val, mul_val) {\n    if (typeof in_data_val == 'undefined') {\n      return typeof def_value == 'number' ? def_value : 0;\n    } // Endif.\n\n\n    if (in_data_val == '') {\n      in_data_val = 0;\n    } // Endif.\n\n\n    if (typeof in_data_val == 'string' && !isNaN(in_data_val)) {\n      in_data_val = parseInt(in_data_val, 10);\n    } // Endif.\n\n\n    var realNum = Math.round(mul_val ? in_data_val * mul_val : in_data_val);\n\n    if (typeof in_data_val == 'string') {\n      if (in_data_val.indexOf('%') != -1) {\n        var realMax = typeof max_value == 'number' ? max_value : 0;\n        if (realMax <= 0) return 0;\n        var realVal = parseInt(in_data_val, 10);\n        return Math.round(realMax / 100 * realVal);\n      } // Endif.\n\n\n      if (in_data_val.indexOf('#') != -1) {\n        var realVal = parseInt(in_data_val, 10);\n        return realMax;\n      } // Endif.\n\n\n      var realAuto = typeof auto_val == 'number' ? auto_val : 0;\n\n      if (in_data_val == '*') {\n        return realAuto;\n      } // Endif.\n\n\n      if (in_data_val == 'c') {\n        return Math.round(realAuto / 2);\n      } // Endif.\n\n    } // Endif.\n\n\n    if (typeof in_data_val == 'number') {\n      return realNum;\n    } // Endif.\n\n\n    return typeof def_value == 'number' ? def_value : 0;\n  }\n  /**\r\n   * Create the XML code of a single effect.\r\n   *\r\n   * This method creating the effect XML code for a single object.\r\n   *\r\n   * @param {object} effectData Effect data.\r\n   * @param {string} effectName The name of the effect.\r\n   */\n\n\n  function cbGenerateEffects(effectData, effectName) {\n    var outData = '<a:' + effectName + ' ';\n    var color = effectData.color || 'black';\n    var alphaPer = 60;\n    var algnData = '';\n    var blurRad = 50800;\n    var dist = 38100;\n    var dir = 13500000;\n\n    if (typeof effectData.transparency == 'number') {\n      alphaPer = effectData.transparency;\n    } // Endif.\n\n\n    if (alphaPer > 100 || alphaPer < 0) alphaPer = 60;\n    alphaPer = (100 - alphaPer) * 1000;\n\n    if (effectData.align) {\n      if (effectData.align.top) algnData += 't';\n      if (effectData.align.bottom) algnData += 'b';\n      if (effectData.align.left) algnData += 'l';\n      if (effectData.align.right) algnData += 'r';\n    } // Endif.\n\n\n    if (algnData == '') algnData = 'br'; // Size\n    // Blur\n    // Angle\n    // Distance\n    // BMK_TODO:\n\n    outData += ' blurRad=\"' + blurRad + '\" dist=\"' + dist + '\" dir=\"' + dir + '\" algn=\"' + algnData + '\" rotWithShape=\"0\"'; // sx=\"24000\" sy=\"24000\"\n    // BMK_TODO:\n\n    outData += '><a:prstClr val=\"' + color + '\"><a:alpha val=\"' + alphaPer + '\"/></a:prstClr>';\n    return outData + '</a:' + effectName + '>';\n  }\n  /**\r\n   * Create the body properties code for text.\r\n   *\r\n   * This method creating the XML code of the body properties of a text.\r\n   *\r\n   * @return The body properties XML code.\r\n   */\n\n\n  function createBodyProperties(objOptions) {\n    var bodyProperties = '<a:bodyPr';\n\n    if (objOptions && objOptions.bodyProp) {\n      // Set anchorPoints bottom, center or top:\n      if (objOptions.bodyProp.anchor) {\n        bodyProperties += ' anchor=\"' + objOptions.bodyProp.anchor + '\"';\n      } // Endif.\n\n\n      if (objOptions.bodyProp.anchorCtr) {\n        bodyProperties += ' anchorCtr=\"' + objOptions.bodyProp.anchorCtr + '\"';\n      } // Endif.\n      // Enable or disable textwrapping none or square:\n\n\n      if (objOptions.bodyProp.wrap) {\n        bodyProperties += ' wrap=\"' + objOptions.bodyProp.wrap + '\"';\n      } else {\n        bodyProperties += ' wrap=\"square\"';\n      } // Endif.\n      // Box margins(padding):\n      // BMK_TODO: I should pass a better value as the auto_val parameter of parseSmartNumber().\n\n\n      if (objOptions.bodyProp.bIns) {\n        bodyProperties += ' bIns=\"' + parseSmartNumber(objOptions.bodyProp.bIns, gen_private.type.pptx.pptHeight, 369332, gen_private.type.pptx.pptHeight, 10000) + '\"';\n      } // Endif.\n\n\n      if (objOptions.bodyProp.lIns) {\n        bodyProperties += ' lIns=\"' + parseSmartNumber(objOptions.bodyProp.lIns, gen_private.type.pptx.pptWidth, 2819400, gen_private.type.pptx.pptWidth, 10000) + '\"';\n      } // Endif.\n\n\n      if (objOptions.bodyProp.rIns) {\n        bodyProperties += ' rIns=\"' + parseSmartNumber(objOptions.bodyProp.rIns, gen_private.type.pptx.pptWidth, 2819400, gen_private.type.pptx.pptWidth, 10000) + '\"';\n      } // Endif.\n\n\n      if (objOptions.bodyProp.tIns) {\n        bodyProperties += ' tIns=\"' + parseSmartNumber(objOptions.bodyProp.tIns, gen_private.type.pptx.pptHeight, 369332, gen_private.type.pptx.pptHeight, 10000) + '\"';\n      } // Endif.\n\n\n      bodyProperties += ' rtlCol=\"0\">';\n\n      if (objOptions.bodyProp.autoFit !== false) {\n        bodyProperties += '<a:spAutoFit/>';\n      } // Endif.\n\n\n      bodyProperties += '</a:bodyPr>'; // Default:\n    } else {\n      bodyProperties += ' wrap=\"square\" rtlCol=\"0\"></a:bodyPr>';\n    } // Endif.\n\n\n    return bodyProperties;\n  }\n  /**\r\n   * Generate a slider resource.\r\n   *\r\n   * This function generating a slider XML resource.\r\n   *\r\n   * @param {object} data The main slide object.\r\n   * @param {boolean} makeOnlyObjects is true to turn this method to make only the objects in data.data.\r\n   * @return Text string.\r\n   */\n\n\n  function cbMakePptxSlide(data, makeOnlyObjects) {\n    var outString = '';\n    var objs_list = data.data;\n    var timingData = ''; // Slide with layout support:\n\n    if (data.slide.useLayout && typeof data.slide.useLayout == 'object' && data.slide.useLayout.mkResCb) {\n      data.slide.useLayout.slide = data.slide;\n      return data.slide.useLayout.mkResCb(data.slide.useLayout);\n    } // Endif.\n    // Allow you to turn this method into layout generator:\n\n\n    var slideElement = data.slide.layoutName ? 'Layout' : '';\n    var slideElementA = data.slide.layoutName ? ' type=\"' + data.slide.layoutName + '\" preserve=\"1\"' : ''; // Create the header of the slide (only if we need that):\n\n    if (!makeOnlyObjects) {\n      outString = gen_private.plugs.type.msoffice.cbMakeMsOfficeBasicXml(data) + '<p:sld' + slideElement + ' xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:p=\"http://schemas.openxmlformats.org/presentationml/2006/main\"';\n\n      if (!data.slide.show && !data.slide.layoutName) {\n        outString += ' show=\"0\"';\n      } // Endif.\n\n\n      outString += slideElementA + '><p:cSld' + (data.slide.name ? ' name=\"' + data.slide.name + '\"' : '') + '>';\n\n      if (data.slide.back) {\n        outString += cMakePptxColorSelection(false, data.slide.back);\n      } // Endif.\n\n\n      outString += '<p:spTree><p:nvGrpSpPr><p:cNvPr id=\"1\" name=\"\"/><p:cNvGrpSpPr/><p:nvPr/></p:nvGrpSpPr><p:grpSpPr><a:xfrm><a:off x=\"0\" y=\"0\"/><a:ext cx=\"0\" cy=\"0\"/><a:chOff x=\"0\" y=\"0\"/><a:chExt cx=\"0\" cy=\"0\"/></a:xfrm></p:grpSpPr>';\n    } // Endif.\n    // Loop on all the objects inside the slide to add it into the slide:\n\n\n    for (var i = 0, total_size = objs_list.length; i < total_size; i++) {\n      var x = 0;\n      var y = 0;\n      var cx = 2819400;\n      var cy = 369332;\n      var moreStyles = '';\n      var moreStylesAttr = '';\n      var outStyles = '';\n      var styleData = '';\n      var shapeType = null;\n      var locationAttr = '';\n\n      if (objs_list[i].options) {\n        if (typeof objs_list[i].options.cx != 'undefined') {\n          if (objs_list[i].options.cx) {\n            cx = parseSmartNumber(objs_list[i].options.cx, gen_private.type.pptx.pptWidth, cx, gen_private.type.pptx.pptWidth, 10000);\n          } else {\n            cx = 1;\n          } // Endif.\n\n        } // Endif.\n\n\n        if (typeof objs_list[i].options.cy != 'undefined') {\n          if (objs_list[i].options.cy) {\n            cy = parseSmartNumber(objs_list[i].options.cy, gen_private.type.pptx.pptHeight, cy, gen_private.type.pptx.pptHeight, 10000);\n          } else {\n            cy = 1;\n          } // Endif.\n\n        } // Endif.\n\n\n        if (objs_list[i].options.x) {\n          x = parseSmartNumber(objs_list[i].options.x, gen_private.type.pptx.pptWidth, 0, gen_private.type.pptx.pptWidth - cx, 10000);\n        } // Endif.\n\n\n        if (objs_list[i].options.y) {\n          y = parseSmartNumber(objs_list[i].options.y, gen_private.type.pptx.pptHeight, 0, gen_private.type.pptx.pptHeight - cy, 10000);\n        } // Endif.\n\n\n        if (objs_list[i].options.shape) {\n          shapeType = getShapeInfo(objs_list[i].options.shape);\n        } // Endif.\n\n\n        if (objs_list[i].options.flip_vertical) {\n          locationAttr += ' flipV=\"1\"';\n        } // Endif.\n\n\n        if (objs_list[i].options.flip_horizontal) {\n          locationAttr += ' flipH=\"1\"';\n        } // Endif.\n\n\n        if (objs_list[i].options.rotate) {\n          var rotateVal = objs_list[i].options.rotate > 360 ? objs_list[i].options.rotate - 360 : objs_list[i].options.rotate;\n          rotateVal *= 60000;\n          locationAttr += ' rot=\"' + rotateVal + '\"';\n        } // Endif.\n\n      } // Endif.\n\n\n      switch (objs_list[i].type) {\n        // TODO: remove hard code here:\n        case 'table':\n          var table_obj = officeTable.getTable(objs_list[i].data, objs_list[i].options);\n          var table_xml = xmlBuilder.create(table_obj, {\n            version: '1.0',\n            encoding: 'UTF-8',\n            standalone: true\n          }).toString({\n            pretty: true,\n            indent: '  ',\n            newline: '\\n'\n          });\n          outString += table_xml;\n          break;\n\n        case 'chart':\n          // loop through the charts\n          //\n          if (objs_list[i].renderType === 'pie') {\n            outString += '<p:graphicFrame>\\\r\n\t\t\t\t\t\t\t<p:nvGraphicFramePr>\\\r\n\t\t\t\t\t\t\t\t<p:cNvPr id=\"20\" name=\"OfficeChart 19\"/>\\\r\n\t\t\t\t\t\t\t\t<p:cNvGraphicFramePr/>\\\r\n\t\t\t\t\t\t\t\t<p:nvPr>\\\r\n\t\t\t\t\t\t\t\t\t<p:extLst>\\\r\n\t\t\t\t\t\t\t\t\t\t<p:ext uri=\"{D42A27DB-BD31-4B8C-83A1-F6EECF244321}\">\\\r\n\t\t\t\t\t\t\t\t\t\t\t<p14:modId xmlns:p14=\"http://schemas.microsoft.com/office/powerpoint/2010/main\" val=\"4198609065\"/>\\\r\n\t\t\t\t\t\t\t\t\t\t</p:ext>\\\r\n\t\t\t\t\t\t\t\t\t</p:extLst>\\\r\n\t\t\t\t\t\t\t\t</p:nvPr>\\\r\n\t\t\t\t\t\t\t</p:nvGraphicFramePr>\\\r\n\t\t\t\t\t\t\t<p:xfrm>\\\r\n\t\t\t\t\t\t\t\t<a:off x=\"' + (objs_list[i].options.x || 1524000) + '\" y=\"' + (objs_list[i].options.y || 1397000) + '\"/>\\\r\n\t\t\t\t\t\t\t\t<a:ext cx=\"' + (objs_list[i].options.cx || 6096000) + '\" cy=\"' + (objs_list[i].options.cy || 4064000) + '\"/>\\\r\n\t\t\t\t\t\t\t</p:xfrm>\\\r\n\t\t\t\t\t\t\t<a:graphic>\\\r\n\t\t\t\t\t\t\t\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/chart\">\\\r\n\t\t\t\t\t\t\t\t\t<c:chart xmlns:c=\"http://schemas.openxmlformats.org/drawingml/2006/chart\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" r:id=\"rId2\"/>\\\r\n\t\t\t\t\t\t\t\t</a:graphicData>\\\r\n\t\t\t\t\t\t\t</a:graphic>\\\r\n\t\t\t\t\t\t</p:graphicFrame>';\n          } else if (objs_list[i].renderType === 'column') {\n            outString += '\\\r\n\t\t\t\t\t\t\\\r\n\t\t\t\t\t\t<p:graphicFrame>\\\r\n\t\t\t\t\t\t\t<p:nvGraphicFramePr>\\\r\n\t\t\t\t\t\t\t\t<p:cNvPr id=\"4\" name=\"OfficeChart 3\"/>\\\r\n\t\t\t\t\t\t\t\t<p:cNvGraphicFramePr/>\\\r\n\t\t\t\t\t\t\t\t<p:nvPr>\\\r\n\t\t\t\t\t\t\t\t\t<p:extLst>\\\r\n\t\t\t\t\t\t\t\t\t\t<p:ext uri=\"{D42A27DB-BD31-4B8C-83A1-F6EECF244321}\">\\\r\n\t\t\t\t\t\t\t\t\t\t\t<p14:modId xmlns:p14=\"http://schemas.microsoft.com/office/powerpoint/2010/main\" val=\"1256887135\"/>\\\r\n\t\t\t\t\t\t\t\t\t\t</p:ext>\\\r\n\t\t\t\t\t\t\t\t\t</p:extLst>\\\r\n\t\t\t\t\t\t\t\t</p:nvPr>\\\r\n\t\t\t\t\t\t\t</p:nvGraphicFramePr>\\\r\n\t\t\t\t\t\t\t<p:xfrm>\\\r\n\t\t\t\t\t\t\t\t<a:off x=\"' + (objs_list[i].options.x || 1524000) + '\" y=\"' + (objs_list[i].options.y || 1397000) + '\"/>\\\r\n\t\t\t\t\t\t\t\t<a:ext cx=\"' + (objs_list[i].options.cx || 6096000) + '\" cy=\"' + (objs_list[i].options.cy || 4064000) + '\"/>\\\r\n\t\t\t\t\t\t\t</p:xfrm>\\\r\n\t\t\t\t\t\t\t<a:graphic>\\\r\n\t\t\t\t\t\t\t\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/chart\">\\\r\n\t\t\t\t\t\t\t\t\t<c:chart xmlns:c=\"http://schemas.openxmlformats.org/drawingml/2006/chart\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" r:id=\"rId2\"/>\\\r\n\t\t\t\t\t\t\t\t</a:graphicData>\\\r\n\t\t\t\t\t\t\t</a:graphic>\\\r\n\t\t\t\t\t\t</p:graphicFrame>\\\r\n\t\t\t\t\t\t';\n          }\n\n          break;\n\n        case 'text':\n        case 'cxn':\n          var effectsList = '';\n          if (shapeType == null) shapeType = getShapeInfo(null); // if ( objs_list[i].type == 'text' ) {\n          // \tif ( !objs_list[i].options || (!objs_list[i].options.cx && !objs_list[i].options.cx) ) {\n          // \t\tobjs_list[i].options = objs_list[i].options ? objs_list[i].options : {};\n          // \t\tobjs_list[i].options.bodyProp = objs_list[i].options.bodyProp ? objs_list[i].options.bodyProp : {};\n          // \t\tobjs_list[i].options.bodyProp.autoFit = true;\n          // \t\tcx = gen_private.type.pptx.pptWidth - x;\n          // \t\tcy = gen_private.type.pptx.pptHeight - y;\n          // \t} // Endif.\n          // } // Endif.\n\n          if (objs_list[i].type == 'cxn') {\n            outString += '<p:cxnSp><p:nvCxnSpPr>';\n            outString += '<p:cNvPr id=\"' + (i + 2) + '\" name=\"Object ' + (i + 1) + '\"/><p:nvPr/></p:nvCxnSpPr>';\n          } else {\n            outString += '<p:sp><p:nvSpPr>';\n            outString += '<p:cNvPr id=\"' + (i + 2) + '\" name=\"Object ' + (i + 1) + '\"/><p:cNvSpPr txBox=\"1\"/><p:nvPr/></p:nvSpPr>';\n          } // Endif.\n\n\n          outString += '<p:spPr>';\n          outString += '<a:xfrm' + locationAttr + '>';\n          outString += '<a:off x=\"' + x + '\" y=\"' + y + '\"/><a:ext cx=\"' + cx + '\" cy=\"' + cy + '\"/></a:xfrm><a:prstGeom prst=\"' + shapeType.name + '\">'; //string changed to take into account change of shape that you do by moving the little yellow dot\n\n          if (shapeType.avLst != {}) {\n            outString += '<a:avLst>';\n\n            for (var adj in shapeType.avLst) {\n              outString += '<a:gd name=\"' + adj + '\" fmla=\"val ' + shapeType.avLst[adj] + '\"/>';\n            }\n          }\n\n          outString += '</a:avLst></a:prstGeom>';\n\n          if (objs_list[i].options) {\n            if (objs_list[i].options.fill) {\n              outString += cMakePptxColorSelection(objs_list[i].options.fill);\n            } else {\n              outString += '<a:noFill/>';\n            } // Endif.\n\n\n            if (objs_list[i].options.line) {\n              var lineAttr = '';\n\n              if (objs_list[i].options.line_size) {\n                lineAttr += ' w=\"' + objs_list[i].options.line_size * 12700 + '\"';\n              } // Endif.\n              // cmpd=\"dbl\"\n\n\n              outString += '<a:ln' + lineAttr + '>';\n              outString += cMakePptxColorSelection(objs_list[i].options.line);\n\n              if (objs_list[i].options.line_head) {\n                outString += '<a:headEnd type=\"' + objs_list[i].options.line_head + '\"/>';\n              } // Endif.\n\n\n              if (objs_list[i].options.line_tail) {\n                outString += '<a:tailEnd type=\"' + objs_list[i].options.line_tail + '\"/>';\n              } // Endif.\n\n\n              outString += '</a:ln>';\n            } // Endif.\n\n          } else {\n            outString += '<a:noFill/>';\n          } // Endif.\n\n\n          if (objs_list[i].options.effects) {\n            for (var ii = 0, total_size_ii = objs_list[i].options.effects.length; ii < total_size_ii; ii++) {\n              switch (objs_list[i].options.effects[ii].type) {\n                case 'outerShadow':\n                  effectsList += cbGenerateEffects(objs_list[i].options.effects[ii], 'outerShdw');\n                  break;\n\n                case 'innerShadow':\n                  effectsList += cbGenerateEffects(objs_list[i].options.effects[ii], 'innerShdw');\n                  break;\n              } // End of switch.\n\n            } // End of for loop.\n\n          } // Endif.\n\n\n          if (effectsList != '') {\n            outString += '<a:effectLst>' + effectsList + '</a:effectLst>';\n          } // Endif.\n\n\n          outString += '</p:spPr>';\n\n          if (objs_list[i].options) {\n            if (objs_list[i].options.align) {\n              switch (objs_list[i].options.align) {\n                case 'right':\n                  moreStylesAttr += ' algn=\"r\"';\n                  break;\n\n                case 'center':\n                  moreStylesAttr += ' algn=\"ctr\"';\n                  break;\n\n                case 'justify':\n                  moreStylesAttr += ' algn=\"just\"';\n                  break;\n              } // End of switch.\n\n            } // Endif.\n\n\n            if (objs_list[i].options.indentLevel > 0) {\n              moreStylesAttr += ' lvl=\"' + objs_list[i].options.indentLevel + '\"';\n            } // Endif.\n\n          } // Endif.\n\n\n          if (moreStyles != '') {\n            outStyles = '<a:pPr' + moreStylesAttr + '>' + moreStyles + '</a:pPr>';\n          } else if (moreStylesAttr != '') {\n            outStyles = '<a:pPr' + moreStylesAttr + '/>';\n          } // Endif.\n\n\n          if (styleData != '') {\n            outString += '<p:style>' + styleData + '</p:style>';\n          } // Endif.\n\n\n          if (typeof objs_list[i].text == 'string') {\n            outString += '<p:txBody>' + createBodyProperties(objs_list[i].options) + '<a:lstStyle/><a:p>' + outStyles;\n            outString += cMakePptxOutTextCommand(objs_list[i].options, objs_list[i].text, data.slide, data.slide.getPageNumber(), outStyles);\n          } else if (typeof objs_list[i].text == 'number') {\n            outString += '<p:txBody>' + createBodyProperties(objs_list[i].options) + '<a:lstStyle/><a:p>' + outStyles;\n            outString += cMakePptxOutTextCommand(objs_list[i].options, objs_list[i].text + '', data.slide, data.slide.getPageNumber(), outStyles);\n          } else if (objs_list[i].text && objs_list[i].text.length) {\n            var outBodyOpt = createBodyProperties(objs_list[i].options);\n            outString += '<p:txBody>' + outBodyOpt + '<a:lstStyle/><a:p>' + outStyles;\n\n            for (var j = 0, total_size_j = objs_list[i].text.length; j < total_size_j; j++) {\n              if (typeof objs_list[i].text[j] == 'object' && objs_list[i].text[j].text) {\n                outString += cMakePptxOutTextCommand(objs_list[i].text[j].options || objs_list[i].options, objs_list[i].text[j].text, data.slide, outBodyOpt, outStyles, data.slide.getPageNumber());\n              } else if (typeof objs_list[i].text[j] == 'string') {\n                outString += cMakePptxOutTextCommand(objs_list[i].options, objs_list[i].text[j], data.slide, outBodyOpt, outStyles, data.slide.getPageNumber());\n              } else if (typeof objs_list[i].text[j] == 'number') {\n                outString += cMakePptxOutTextCommand(objs_list[i].options, objs_list[i].text[j] + '', data.slide, outBodyOpt, outStyles, data.slide.getPageNumber());\n              } else if (typeof objs_list[i].text[j] == 'object' && objs_list[i].text[j].field) {\n                outString += cMakePptxOutTextCommand(objs_list[i].options, objs_list[i].text[j], data.slide, outBodyOpt, outStyles, data.slide.getPageNumber());\n              } // Endif.\n\n            } // Endif.\n\n          } else if (typeof objs_list[i].text == 'object') {\n            if (!objs_list[i].text) {\n              objs_list[i].text = {};\n            } // Endif.\n\n\n            if (!objs_list[i].text.field) {\n              objs_list[i].text.field = '';\n            } // Endif.\n\n\n            outString += '<p:txBody>' + createBodyProperties(objs_list[i].options) + '<a:lstStyle/><a:p>' + outStyles;\n            outString += cMakePptxOutTextCommand(objs_list[i].options, objs_list[i].text, data.slide, data.slide.getPageNumber(), outStyles);\n          } // Endif.\n          // We must add that at the end of every paragraph with text:\n\n\n          if (typeof objs_list[i].text != 'undefined') {\n            var font_size = '';\n\n            if (objs_list[i].options && objs_list[i].options.font_size) {\n              font_size = ' sz=\"' + objs_list[i].options.font_size + '00\"';\n            } // Endif.\n\n\n            outString += '<a:endParaRPr lang=\"en-US\"' + font_size + ' dirty=\"0\"/></a:p></p:txBody>';\n          } // Endif.\n\n\n          outString += objs_list[i].type == 'cxn' ? '</p:cxnSp>' : '</p:sp>';\n          break;\n        // Table:\n\n        /*\r\n        case 'table':\r\n        \toutString += '<p:graphicFrame><p:nvGraphicFramePr><p:cNvPr id=\"' + (i + 2) + '\" name=\"Object ' + (i + 1) + '\"/><p:cNvGraphicFramePr><a:graphicFrameLocks noGrp=\"1\"/></p:cNvGraphicFramePr><p:nvPr/></p:nvGraphicFramePr>';\r\n        \toutString += '<p:xfrm><a:off x=\"' + x + '\" y=\"' + y + '\"/><a:ext cx=\"' + cx + '\" cy=\"' + cy + '\"/></p:xfrm>';\r\n        \toutString += '<a:graphic><a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/table\"><a:tbl><a:tblPr firstRow=\"1\" bandRow=\"1\"><a:tableStyleId>';\r\n        \t\t\tif ( objs_list[i].options && objs_list[i].options.tableStyleId ) {\r\n        \t\toutString += objs_list[i].options.tableStyleId;\r\n        \t\t\t} else {\r\n        \t\toutString += '{073A0DAA-6AF3-43AB-8588-CEC1D06C72B9}';\r\n        \t} // Endif.\r\n        \t\t\toutString += '</a:tableStyleId></a:tblPr><a:tblGrid>';\r\n        \t// <a:gridCol w=\"3276600\"/>\r\n        \toutString += '</a:tblGrid>';\r\n        \t// objs_list[i].options\r\n        \t// objs_list[i].rows[][].text\r\n        \t// BMK_TODO:\r\n        \tbreak;\r\n        */\n        // Image:\n\n        case 'image':\n          //psv 2015-01-21 Manually copied this section from https://github.com/Ziv-Barber/officegen/pull/39/files?w=1\n          //outString += '<p:pic><p:nvPicPr><p:cNvPr id=\"' + (i + 2) + '\" name=\"Object ' + (i + 1) + '\"/><p:cNvPicPr><a:picLocks noChangeAspect=\"1\"/></p:cNvPicPr><p:nvPr/></p:nvPicPr><p:blipFill><a:blip r:embed=\"rId' + objs_list[i].rel_id + '\" cstate=\"print\"/><a:stretch><a:fillRect/></a:stretch></p:blipFill><p:spPr><a:xfrm' + locationAttr + '><a:off x=\"' + x + '\" y=\"' + y + '\"/><a:ext cx=\"' + cx + '\" cy=\"' + cy + '\"/></a:xfrm><a:prstGeom prst=\"rect\"><a:avLst/></a:prstGeom></p:spPr></p:pic>';\n          var parts = [];\n          parts.push('<p:pic><p:nvPicPr><p:cNvPr id=\"' + (i + 2) + '\" name=\"Object ' + (i + 1) + '\"');\n\n          if (objs_list[i].link_rel_id) {\n            parts.push('><a:hlinkClick r:id=\"rId' + objs_list[i].link_rel_id + '\"/></p:cNvPr>');\n          } else {\n            parts.push('/>');\n          } // Endif.\n\n\n          parts.push('<p:cNvPicPr><a:picLocks noChangeAspect=\"1\"/></p:cNvPicPr><p:nvPr/></p:nvPicPr><p:blipFill><a:blip r:embed=\"rId' + objs_list[i].rel_id + '\" cstate=\"print\"/><a:stretch><a:fillRect/></a:stretch></p:blipFill><p:spPr><a:xfrm' + locationAttr + '><a:off x=\"' + x + '\" y=\"' + y + '\"/><a:ext cx=\"' + cx + '\" cy=\"' + cy + '\"/></a:xfrm><a:prstGeom prst=\"rect\"><a:avLst/></a:prstGeom></p:spPr></p:pic>');\n          outString += parts.join(''); //-- psv 2015-01-21 end merge\n\n          break;\n        // Paragraph:\n\n        case 'p':\n          if (shapeType == null) {\n            shapeType = getShapeInfo(null);\n          } // Endif.\n\n\n          outString += '<p:sp><p:nvSpPr>';\n          outString += '<p:cNvPr id=\"' + (i + 2) + '\" name=\"Object ' + (i + 1) + '\"/><p:cNvSpPr txBox=\"1\"/><p:nvPr/></p:nvSpPr>';\n          outString += '<p:spPr>';\n          outString += '<a:xfrm' + locationAttr + '>';\n          outString += '<a:off x=\"' + x + '\" y=\"' + y + '\"/><a:ext cx=\"' + cx + '\" cy=\"' + cy + '\"/></a:xfrm><a:prstGeom prst=\"' + shapeType.name + '\"><a:avLst/></a:prstGeom>';\n\n          if (objs_list[i].options) {\n            if (objs_list[i].options.fill) {\n              outString += cMakePptxColorSelection(objs_list[i].options.fill);\n            } else {\n              outString += '<a:noFill/>';\n            } // Endif.\n\n\n            if (objs_list[i].options.line) {\n              outString += '<a:ln>';\n              outString += cMakePptxColorSelection(objs_list[i].options.line);\n\n              if (objs_list[i].options.line_head) {\n                outString += '<a:headEnd type=\"' + objs_list[i].options.line_head + '\"/>';\n              } // Endif.\n\n\n              if (objs_list[i].options.line_tail) {\n                outString += '<a:tailEnd type=\"' + objs_list[i].options.line_tail + '\"/>';\n              } // Endif.\n\n\n              outString += '</a:ln>';\n            } // Endif.\n\n          } else {\n            outString += '<a:noFill/>';\n          } // Endif.\n\n\n          outString += '</p:spPr>';\n\n          if (styleData != '') {\n            outString += '<p:style>' + styleData + '</p:style>';\n          } // Endif.\n\n\n          outString += '<p:txBody><a:bodyPr wrap=\"square\" rtlCol=\"0\"><a:spAutoFit/></a:bodyPr><a:lstStyle/>'; // Add all the paragraph objects:\n\n          outString = cMakePptxOutTextP(outString, objs_list[i].data, objs_list[i].options, data.slide);\n          outString += '</p:txBody>';\n          outString += '</p:sp>';\n          break;\n      } // End of switch.\n\n    } // End of for loop.\n\n\n    if (!makeOnlyObjects) {\n      outString += '</p:spTree></p:cSld><p:clrMapOvr><a:masterClrMapping/></p:clrMapOvr>';\n\n      if (timingData != '') {\n        outString += '<p:timing>' + timingData + '</p:timing>';\n      } // Endif.\n\n\n      outString += '</p:sld' + slideElement + '>';\n    } // Endif.\n\n\n    return outString;\n  }\n  /**\r\n   * Generate the extended attributes file (app) for PPTX/PPSX documents.\r\n   *\r\n   * @param {object} data Ignored by this callback function.\r\n   * @return Text string.\r\n   */\n\n\n  function cbMakePptxApp(data) {\n    var slidesCount = gen_private.pages.length;\n    var userName = genobj.options.author || genobj.options.creator || 'officegen';\n    var outString = gen_private.plugs.type.msoffice.cbMakeMsOfficeBasicXml(data) + '<Properties xmlns=\"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\" xmlns:vt=\"http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes\"><TotalTime>0</TotalTime><Words>0</Words><Application>Microsoft Office PowerPoint</Application><PresentationFormat>On-screen Show (4:3)</PresentationFormat><Paragraphs>0</Paragraphs><Slides>' + slidesCount + '</Slides><Notes>0</Notes><HiddenSlides>0</HiddenSlides><MMClips>0</MMClips><ScaleCrop>false</ScaleCrop><HeadingPairs><vt:vector size=\"4\" baseType=\"variant\"><vt:variant><vt:lpstr>Theme</vt:lpstr></vt:variant><vt:variant><vt:i4>1</vt:i4></vt:variant><vt:variant><vt:lpstr>Slide Titles</vt:lpstr></vt:variant><vt:variant><vt:i4>' + slidesCount + '</vt:i4></vt:variant></vt:vector></HeadingPairs><TitlesOfParts><vt:vector size=\"' + (slidesCount + 1) + '\" baseType=\"lpstr\"><vt:lpstr>Office Theme</vt:lpstr>';\n\n    for (var i = 0, total_size = gen_private.pages.length; i < total_size; i++) {\n      outString += '<vt:lpstr>' + gen_private.pages[i].slide.name.encodeHTML() + '</vt:lpstr>';\n    } // End of for loop.\n\n\n    outString += '</vt:vector></TitlesOfParts><Company>' + userName + '</Company><LinksUpToDate>false</LinksUpToDate><SharedDoc>false</SharedDoc><HyperlinksChanged>false</HyperlinksChanged><AppVersion>12.0000</AppVersion></Properties>';\n    return outString;\n  }\n  /**\r\n   * Create XML string for a chart description\r\n   *\r\n   * @param {object} chartInfo\r\n   * @return Text Xml string.\r\n   */\n\n\n  function cbMakeCharts(chartInfo) {\n    var chart = new OfficeChart(chartInfo);\n    return chart.toXML();\n  }\n\n  function cbMakeChartDataExcel(data) {} // PSV not sure why this method is here.  Presumably vestigial from earlier code.\n  // Prepare genobj for MS-Office:\n\n\n  msdoc.makemsdoc(genobj, new_type, options, gen_private, type_info);\n  gen_private.plugs.type.msoffice.makeOfficeGenerator('ppt', 'presentation', {});\n  gen_private.features.page_name = 'slides'; // This document type must have pages.\n\n  gen_private.plugs.type.msoffice.addInfoType('dc:title', '', 'title', 'setDocTitle');\n  genobj.on('beforeGen', cbPreparePptxToGenerate);\n  var type_of_main_doc = 'slideshow';\n\n  if (new_type != 'ppsx') {\n    type_of_main_doc = 'presentation';\n  } // Endif.\n  // Create the plugins manager:\n\n\n  var plugsmanObj = new docplugman(genobj, gen_private, 'pptx', setDefaultDocValues); // We'll register now any specific PowerPoint based plugin that we want to use:\n\n  plugsmanObj.plugsList.push(new plugWidescreen(plugsmanObj));\n  plugsmanObj.plugsList.push(new plugSpeakernotes(plugsmanObj));\n  plugsmanObj.plugsList.push(new plugLayouts(plugsmanObj)); // BMK_PPTX_PLUG:\n  // Dynamic loading of additional plugins requested by the user:\n\n  if (options.extraPlugs && typeof options.extraPlugs === 'object' && options.extraPlugs.forEach) {\n    options.extraPlugs.forEach(function (value) {\n      var newPlug;\n\n      if (value) {\n        if (typeof value === 'function') {\n          // You already loaded the plugin:\n          newPlug = value;\n        } else if (typeof value === 'string') {\n          // We need to load the plugin:\n          newPlug = require('./' + value);\n        } // Endif.\n\n      } // Endif.\n\n\n      plugsmanObj.plugsList.push(new newPlug(plugsmanObj));\n    });\n  } // Endif.\n  // Save some methods for the plugins:\n\n\n  genobj.cbMakePptxLayout1 = cbMakePptxLayout1;\n  genobj.cbMakePptxSlide = cbMakePptxSlide;\n  genobj.createFieldText = createFieldText;\n  genobj.cMakePptxOutTextP = cMakePptxOutTextP;\n  gen_private.type.msoffice.files_list.push({\n    name: '/ppt/slideMasters/slideMaster1.xml',\n    type: 'application/vnd.openxmlformats-officedocument.presentationml.slideMaster+xml',\n    clear: 'type'\n  }, {\n    name: '/ppt/presProps.xml',\n    type: 'application/vnd.openxmlformats-officedocument.presentationml.presProps+xml',\n    clear: 'type'\n  }, {\n    name: '/ppt/presentation.xml',\n    type: 'application/vnd.openxmlformats-officedocument.presentationml.' + type_of_main_doc + '.main+xml',\n    clear: 'type'\n  }, {\n    name: '/ppt/slideLayouts/slideLayout1.xml',\n    type: 'application/vnd.openxmlformats-officedocument.presentationml.slideLayout+xml',\n    clear: 'type'\n  }, {\n    name: '/ppt/tableStyles.xml',\n    type: 'application/vnd.openxmlformats-officedocument.presentationml.tableStyles+xml',\n    clear: 'type'\n  }, {\n    name: '/ppt/viewProps.xml',\n    type: 'application/vnd.openxmlformats-officedocument.presentationml.viewProps+xml',\n    clear: 'type'\n  });\n  genobj.slideMasterRels = [{\n    type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/slideLayout',\n    target: '../slideLayouts/slideLayout1.xml'\n  }, {\n    type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme',\n    target: '../theme/theme1.xml'\n  }];\n  gen_private.plugs.intAddAnyResourceToParse('ppt\\\\presProps.xml', 'buffer', null, cbMakePptxPresProps, true);\n  gen_private.plugs.intAddAnyResourceToParse('ppt\\\\tableStyles.xml', 'buffer', null, cbMakePptxStyles, true);\n  gen_private.plugs.intAddAnyResourceToParse('ppt\\\\viewProps.xml', 'buffer', null, cbMakePptxViewProps, true);\n  gen_private.plugs.intAddAnyResourceToParse('ppt\\\\presentation.xml', 'buffer', null, cbMakePptxPresentation, true);\n  gen_private.plugs.intAddAnyResourceToParse('ppt\\\\slideLayouts\\\\slideLayout1.xml', 'buffer', null, cbMakePptxLayout1, true);\n  gen_private.plugs.intAddAnyResourceToParse('ppt\\\\slideLayouts\\\\_rels\\\\slideLayout1.xml.rels', 'buffer', [{\n    type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/slideMaster',\n    target: '../slideMasters/slideMaster1.xml'\n  }], gen_private.plugs.type.msoffice.cbMakeRels, true); // Slides master:\n\n  gen_private.plugs.intAddAnyResourceToParse('ppt\\\\slideMasters\\\\slideMaster1.xml', 'buffer', null, cbMakePptxSlideMasters, true);\n  gen_private.plugs.intAddAnyResourceToParse('ppt\\\\slideMasters\\\\_rels\\\\slideMaster1.xml.rels', 'buffer', genobj.slideMasterRels, gen_private.plugs.type.msoffice.cbMakeRels, true);\n  gen_private.plugs.intAddAnyResourceToParse('docProps\\\\app.xml', 'buffer', null, cbMakePptxApp, true);\n  gen_private.type.msoffice.rels_app.push({\n    type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/slideMaster',\n    target: 'slideMasters/slideMaster1.xml',\n    clear: 'type'\n  });\n  gen_private.plugs.intAddAnyResourceToParse('ppt\\\\_rels\\\\presentation.xml.rels', 'buffer', gen_private.type.msoffice.rels_app, gen_private.plugs.type.msoffice.cbMakeRels, true); // ----- API for PowerPoint documents: -----\n\n  /**\r\n   * Create a new slide.\r\n   *\r\n   * This method creating a new slide inside the presentation.\r\n   *\r\n   * @param {object} slideOptions Extra options how to create the new slide.\r\n   * @return The new slide object.\r\n   */\n\n  genobj.makeNewSlide = function (slideOptions) {\n    var pageNumber = gen_private.pages.length;\n    var slideObj = {\n      show: true\n    }; // The slide object that the user will use.\n\n    if (!slideOptions || typeof slideOptions !== 'object') {\n      slideOptions = {};\n    } // Endif.\n\n\n    if (!slideOptions.basedLayout) {\n      slideOptions.basedLayout = 1;\n    } // Endif.\n\n\n    gen_private.pages[pageNumber] = {};\n    gen_private.pages[pageNumber].slide = slideObj;\n    gen_private.pages[pageNumber].data = [];\n    gen_private.pages[pageNumber].rels = [{\n      type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/slideLayout',\n      target: '../slideLayouts/slideLayout' + slideOptions.basedLayout + '.xml',\n      clear: 'data'\n    }];\n    gen_private.type.msoffice.files_list.push({\n      name: '/ppt/slides/slide' + (pageNumber + 1) + '.xml',\n      type: 'application/vnd.openxmlformats-officedocument.presentationml.slide+xml',\n      clear: 'data'\n    });\n    gen_private.type.msoffice.rels_app.push({\n      type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/slide',\n      target: 'slides/slide' + (pageNumber + 1) + '.xml',\n      clear: 'data'\n    });\n\n    slideObj.getPageNumber = function () {\n      return pageNumber;\n    };\n\n    slideObj.getRelFile = function () {\n      return gen_private.pages[pageNumber].rels;\n    };\n\n    slideObj.name = 'Slide ' + (pageNumber + 1);\n    /**\r\n     * ???.\r\n     *\r\n     * @param {object} prgObj Paragraph object.\r\n     */\n\n    function addParagraphApiForBasicOpt(prgObj) {\n      if (!prgObj.api) {\n        prgObj.api = {};\n      } // Endif.\n\n\n      prgObj.api.options = prgObj.options;\n    }\n    /**\r\n     * ???.\r\n     *\r\n     * @param {object} prgObj Paragraph object.\r\n     */\n\n\n    function addParagraphApiForEffects(prgObj) {\n      if (!prgObj.api) {\n        prgObj.api = {};\n      } // Endif.\n\n      /**\r\n       * ???.\r\n       *\r\n       * @param {object} inType ???.\r\n       * @param {object} inAlign ???.\r\n       * @param {object} inColor ???.\r\n       * @param {object} inTransparency ???.\r\n       * @param {object} inSize ???.\r\n       * @param {object} inBlur ???.\r\n       * @param {object} inAngle ???.\r\n       * @param {object} inDistance ???.\r\n       */\n\n\n      prgObj.api.setShadowEffect = function (inType, inAlign, inColor, inTransparency, inSize, inBlur, inAngle, inDistance) {\n        if (!prgObj.options.effects) prgObj.options.effects = [];\n        var newEffect = {\n          'type': inType,\n          'align': inAlign,\n          'color': inColor,\n          'transparency': inTransparency,\n          'size': inSize,\n          'blur': inBlur,\n          'angle': inAngle,\n          'distance': inDistance\n        };\n        prgObj.options.effects.push(newEffect);\n      };\n    } // Added 2015-01-02 PSV as a way for user to modify chart properties before generating the XML string:\n\n\n    slideObj.createChart = function (chartInfo) {\n      return new OfficeChart(chartInfo);\n    }; // Added 2015-01-08 PSV following model of addChart:\n\n\n    slideObj.addTable = function (data, options) {\n      var objNumber = gen_private.pages[pageNumber].data.length;\n      gen_private.pages[pageNumber].data[objNumber] = {\n        type: 'table',\n        data: data,\n        options: options || {} // right now this isn't yet used\n\n      };\n      addParagraphApiForBasicOpt(gen_private.pages[pageNumber].data[objNumber]);\n      addParagraphApiForEffects(gen_private.pages[pageNumber].data[objNumber]);\n      return gen_private.pages[pageNumber].data[objNumber].api;\n    };\n    /**\r\n     * Generate the chart based on input data.\r\n     *\r\n     * @param {object} renderType should belong to: 'column', 'pie'\r\n     * @param {object} data a JSON object with follow the following format\r\n     *     {\r\n     *\t\t\ttitle: 'eSurvey chart',\r\n     *\t\t\tdata:  [\r\n     *\t\t\t\t{\r\n     *\t\t\t\t\tname: 'Income',\r\n     *\t\t\t\t\tlabels: ['2005', '2006', '2007', '2008', '2009'],\r\n     *\t\t\t\t\tvalues: [23.5, 26.2, 30.1, 29.5, 24.6]\r\n     *\t\t\t\t},\r\n     *\t\t\t\t{\r\n     *\t\t\t\t\tname: 'Expense',\r\n     *\t\t\t\t\tlabels: ['2005', '2006', '2007', '2008', '2009'],\r\n     *\t\t\t\t\tvalues: [18.1, 22.8, 23.9, 25.1, 25]\r\n     *\t\t\t\t}\r\n     *\t\t\t]\r\n     * \t}\r\n     * @author vtloc\r\n     * @date 2014Jan09\r\n     */\n\n\n    slideObj.addChart = function (data, callback, errorCallback) {\n      var objNumber = gen_private.pages[pageNumber].data.length;\n      GLOBAL_CHART_COUNT += 1;\n      gen_private.pages[pageNumber].data[objNumber] = {};\n      gen_private.pages[pageNumber].data[objNumber].type = 'chart';\n      gen_private.pages[pageNumber].data[objNumber].renderType = 'column';\n      gen_private.pages[pageNumber].data[objNumber].title = data['title'];\n      gen_private.pages[pageNumber].data[objNumber].data = data['data'];\n      gen_private.pages[pageNumber].data[objNumber].options = data; // include generic options like x,y,cx,cy, etc.\n      //data['renderType'] = renderType;\n      // First, generate a temporatory excel file for storing the chart's data\n\n      var workbook = excelbuilder.createWorkbook(genobj.options.tempDir, 'sample' + GLOBAL_CHART_COUNT + '.xlsx'); // Create a new worksheet with 10 columns and 12 rows\n      // number of columns: data['data'].length+1 -> equaly number of series\n      // number of rows: data['data'][0].values.length+1\n\n      var sheet1 = workbook.createSheet('Sheet1', data['data'].length + 1, data['data'][0].values.length + 1);\n      var headerrow = 1; // write header using serie name\n\n      for (var j = 0; j < data['data'].length; j++) {\n        sheet1.set(j + 2, headerrow, data['data'][j].name);\n      } // write category column in the first column\n\n\n      for (var j = 0; j < data['data'][0].labels.length; j++) {\n        sheet1.set(1, j + 2, data['data'][0].labels[j]);\n      } // for each serie, write out values in its row\n\n\n      for (var i = 0; i < data['data'].length; i++) {\n        for (var j = 0; j < data['data'][i].values.length; j++) {\n          // col i+2\n          // row j+1\n          sheet1.set(i + 2, j + 2, data['data'][i].values[j]);\n        }\n      } // Fill some data\n      // Save it\n\n\n      var localEmbeddingExcelFile = 'ppt\\\\embeddings\\\\Microsoft_Excel_Worksheet' + GLOBAL_CHART_COUNT + '.xlsx';\n      var tmpExcelFile = genobj.options.tempDir + 'sample' + GLOBAL_CHART_COUNT + '.xlsx'; // will copy the tmpExcelFile into localEmbeddingExcelFile\n\n      gen_private.plugs.intAddAnyResourceToParse(localEmbeddingExcelFile, 'file', tmpExcelFile, cbMakeChartDataExcel, false, true);\n      gen_private.plugs.intAddAnyResourceToParse('ppt\\\\charts\\\\chart' + GLOBAL_CHART_COUNT + '.xml', 'buffer', data, cbMakeCharts, true);\n      gen_private.plugs.intAddAnyResourceToParse('ppt\\\\charts\\\\_rels\\\\chart' + GLOBAL_CHART_COUNT + '.xml.rels', 'buffer', [{\n        type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/package',\n        target: '../embeddings/Microsoft_Excel_Worksheet' + GLOBAL_CHART_COUNT + '.xlsx'\n      }], gen_private.plugs.type.msoffice.cbMakeRels, true);\n      gen_private.type.msoffice.files_list.push({\n        name: '/ppt/charts/chart' + GLOBAL_CHART_COUNT + '.xml',\n        type: 'application/vnd.openxmlformats-officedocument.drawingml.chart+xml',\n        clear: 'type'\n      }, {\n        name: '/ppt/embeddings/Microsoft_Excel_Worksheet' + GLOBAL_CHART_COUNT + '.xlsx',\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n        ext: 'xlsx',\n        clear: 'type'\n      });\n      gen_private.pages[pageNumber].rels.push({\n        type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart',\n        target: '../charts/chart' + GLOBAL_CHART_COUNT + '.xml',\n        clear: 'data'\n      });\n      workbook.save(function (err) {\n        if (err) {\n          workbook.cancel();\n        } else {\n          callback();\n        }\n      });\n    };\n    /**\r\n     * ???.\r\n     *\r\n     * @param {object} text ???.\r\n     * @param {object} opt ???.\r\n     * @param {object} y_pos ???.\r\n     * @param {object} x_size ???.\r\n     * @param {object} y_size ???.\r\n     * @param {object} opt_b ???.\r\n     */\n\n\n    slideObj.addText = function (text, opt, y_pos, x_size, y_size, opt_b) {\n      var objNumber = gen_private.pages[pageNumber].data.length;\n      gen_private.pages[pageNumber].data[objNumber] = {};\n      gen_private.pages[pageNumber].data[objNumber].type = 'text';\n      gen_private.pages[pageNumber].data[objNumber].text = text || '';\n      gen_private.pages[pageNumber].data[objNumber].options = typeof opt == 'object' ? opt : {};\n\n      if (typeof opt == 'string') {\n        gen_private.pages[pageNumber].data[objNumber].options.color = opt;\n      } else if (typeof opt != 'object' && typeof y_pos != 'undefined') {\n        gen_private.pages[pageNumber].data[objNumber].options.x = opt;\n        gen_private.pages[pageNumber].data[objNumber].options.y = y_pos;\n\n        if (typeof x_size != 'undefined' && typeof y_size != 'undefined') {\n          gen_private.pages[pageNumber].data[objNumber].options.cx = x_size;\n          gen_private.pages[pageNumber].data[objNumber].options.cy = y_size;\n        } // Endif.\n\n      } // Endif.\n\n\n      if (typeof opt_b == 'object') {\n        for (var attrname in opt_b) {\n          gen_private.pages[pageNumber].data[objNumber].options[attrname] = opt_b[attrname];\n        }\n      } else if (typeof x_size == 'object' && typeof y_size == 'undefined') {\n        for (var attrname in x_size) {\n          gen_private.pages[pageNumber].data[objNumber].options[attrname] = x_size[attrname];\n        }\n      } // Endif.\n\n\n      addParagraphApiForBasicOpt(gen_private.pages[pageNumber].data[objNumber]);\n      addParagraphApiForEffects(gen_private.pages[pageNumber].data[objNumber]);\n      return gen_private.pages[pageNumber].data[objNumber].api;\n    };\n    /**\r\n     * ???\r\n     *\r\n     * @param {string} shape ???.\r\n     * @param {object} opt ???.\r\n     * @param {number} y_pos ???.\r\n     * @param {number} x_size ???.\r\n     * @param {number} y_size ???.\r\n     * @param {object} opt_b ???.\r\n     */\n\n\n    slideObj.addShape = function (shape, opt, y_pos, x_size, y_size, opt_b) {\n      var objNumber = gen_private.pages[pageNumber].data.length;\n      gen_private.pages[pageNumber].data[objNumber] = {};\n      gen_private.pages[pageNumber].data[objNumber].type = 'text';\n      gen_private.pages[pageNumber].data[objNumber].options = typeof opt == 'object' ? opt : {};\n      gen_private.pages[pageNumber].data[objNumber].options.shape = shape;\n\n      if (typeof opt == 'string') {\n        gen_private.pages[pageNumber].data[objNumber].options.color = opt;\n      } else if (typeof opt != 'object' && typeof y_pos != 'undefined') {\n        gen_private.pages[pageNumber].data[objNumber].options.x = opt;\n        gen_private.pages[pageNumber].data[objNumber].options.y = y_pos;\n\n        if (typeof x_size != 'undefined' && typeof y_size != 'undefined') {\n          gen_private.pages[pageNumber].data[objNumber].options.cx = x_size;\n          gen_private.pages[pageNumber].data[objNumber].options.cy = y_size;\n        } // Endif.\n\n      } // Endif.\n\n\n      if (typeof opt_b == 'object') {\n        for (var attrname in opt_b) {\n          gen_private.pages[pageNumber].data[objNumber].options[attrname] = opt_b[attrname];\n        }\n      } else if (typeof x_size == 'object' && typeof y_size == 'undefined') {\n        for (var attrname in x_size) {\n          gen_private.pages[pageNumber].data[objNumber].options[attrname] = x_size[attrname];\n        }\n      } // Endif.\n\n\n      addParagraphApiForBasicOpt(gen_private.pages[pageNumber].data[objNumber]);\n      addParagraphApiForEffects(gen_private.pages[pageNumber].data[objNumber]);\n      return gen_private.pages[pageNumber].data[objNumber].api;\n    };\n    /**\r\n     * ???.\r\n     *\r\n     * @param {object} image_path ???.\r\n     * @param {object} opt ???.\r\n     * @param {object} y_pos ???.\r\n     * @param {object} x_size ???.\r\n     * @param {object} y_size ???.\r\n     * @param {object} image_format_type ???.\r\n     */\n\n\n    slideObj.addImage = function (image_path, opt, y_pos, x_size, y_size, image_format_type) {\n      var objNumber = gen_private.pages[pageNumber].data.length;\n      var image_type = typeof image_format_type == 'string' ? image_format_type : 'png';\n      var defWidth,\n          defHeight = 0;\n\n      if (typeof image_path == 'string') {\n        var ret_data = fast_image_size(image_path);\n\n        if (ret_data.type == 'unknown') {\n          var image_ext = path.extname(image_path);\n\n          switch (image_ext) {\n            case '.bmp':\n              image_type = 'bmp';\n              break;\n\n            case '.gif':\n              image_type = 'gif';\n              break;\n\n            case '.jpg':\n            case '.jpeg':\n              image_type = 'jpeg';\n              break;\n\n            case '.emf':\n              image_type = 'emf';\n              break;\n\n            case '.tiff':\n              image_type = 'tiff';\n              break;\n          } // End of switch.\n\n        } else {\n          if (ret_data.width) {\n            defWidth = ret_data.width;\n          } // Endif.\n\n\n          if (ret_data.height) {\n            defHeight = ret_data.height;\n          } // Endif.\n\n\n          image_type = ret_data.type;\n\n          if (image_type == 'jpg') {\n            image_type = 'jpeg';\n          } // Endif.\n\n        } // Endif.\n\n      } // Endif.\n\n\n      gen_private.pages[pageNumber].data[objNumber] = {};\n      gen_private.pages[pageNumber].data[objNumber].type = 'image';\n      gen_private.pages[pageNumber].data[objNumber].image = image_path;\n      gen_private.pages[pageNumber].data[objNumber].options = typeof opt == 'object' ? opt : {};\n\n      if (!gen_private.pages[pageNumber].data[objNumber].options.cx && defWidth) {\n        gen_private.pages[pageNumber].data[objNumber].options.cx = defWidth;\n      } // Endif.\n\n\n      if (!gen_private.pages[pageNumber].data[objNumber].options.cy && defHeight) {\n        gen_private.pages[pageNumber].data[objNumber].options.cy = defHeight;\n      } // Endif.\n\n\n      var image_id = gen_private.type.msoffice.src_files_list.indexOf(image_path);\n      var image_rel_id = -1;\n\n      if (image_id >= 0) {\n        for (var j = 0, total_size_j = gen_private.pages[pageNumber].rels.length; j < total_size_j; j++) {\n          if (gen_private.pages[pageNumber].rels[j].target == '../media/image' + (image_id + 1) + '.' + image_type) {\n            image_rel_id = j + 1;\n          } // Endif.\n\n        } // Endif.\n\n      } else {\n        image_id = gen_private.type.msoffice.src_files_list.length;\n        gen_private.type.msoffice.src_files_list[image_id] = image_path;\n        gen_private.plugs.intAddAnyResourceToParse('ppt\\\\media\\\\image' + (image_id + 1) + '.' + image_type, typeof image_path == 'string' ? 'file' : 'stream', image_path, null, false);\n      } // Endif.\n\n\n      if (image_rel_id == -1) {\n        image_rel_id = gen_private.pages[pageNumber].rels.length + 1;\n        gen_private.pages[pageNumber].rels.push({\n          type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/image',\n          target: '../media/image' + (image_id + 1) + '.' + image_type,\n          clear: 'data'\n        });\n      } // Endif.\n      //-- psv 2015-01-21 Manually copied change below from https://github.com/Ziv-Barber/officegen/pull/39/files?w=1\n\n\n      if ((opt || {}).link) {\n        var link_rel_id = gen_private.pages[pageNumber].rels.length + 1;\n        gen_private.pages[pageNumber].rels.push({\n          type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink',\n          target: opt.link,\n          targetMode: 'External'\n        });\n        gen_private.pages[pageNumber].data[objNumber].link_rel_id = link_rel_id;\n      } // Endif.\n      //-- psv 2015-01-21 end edits\n\n\n      gen_private.pages[pageNumber].data[objNumber].image_id = image_id;\n      gen_private.pages[pageNumber].data[objNumber].rel_id = image_rel_id;\n\n      if (typeof opt == 'string') {\n        gen_private.pages[pageNumber].data[objNumber].options.color = opt;\n      } else if (typeof opt != 'object' && typeof y_pos != 'undefined') {\n        gen_private.pages[pageNumber].data[objNumber].options.x = opt;\n        gen_private.pages[pageNumber].data[objNumber].options.y = y_pos;\n\n        if (typeof x_size != 'undefined' && typeof y_size != 'undefined') {\n          gen_private.pages[pageNumber].data[objNumber].options.cx = x_size;\n          gen_private.pages[pageNumber].data[objNumber].options.cy = y_size;\n        } // Endif.\n\n      } // Endif.\n\n\n      addParagraphApiForBasicOpt(gen_private.pages[pageNumber].data[objNumber]);\n      addParagraphApiForEffects(gen_private.pages[pageNumber].data[objNumber]);\n      return gen_private.pages[pageNumber].data[objNumber].api;\n    };\n    /**\r\n     * ???.\r\n     *\r\n     * @param {object} text ???.\r\n     * @param {object} opt ???.\r\n     * @param {object} y_pos ???.\r\n     * @param {object} x_size ???.\r\n     * @param {object} y_size ???.\r\n     * @param {object} opt_b ???.\r\n     */\n\n\n    slideObj.addP = function (text, opt, y_pos, x_size, y_size, opt_b) {\n      var objNumber = gen_private.pages[pageNumber].data.length;\n      gen_private.pages[pageNumber].data[objNumber] = {};\n      gen_private.pages[pageNumber].data[objNumber].type = 'p';\n      gen_private.pages[pageNumber].data[objNumber].data = [];\n      gen_private.pages[pageNumber].data[objNumber].options = typeof opt == 'object' ? opt : {};\n\n      if (typeof opt == 'string') {\n        gen_private.pages[pageNumber].data[objNumber].options.color = opt;\n      } else if (typeof opt != 'object' && typeof y_pos != 'undefined') {\n        gen_private.pages[pageNumber].data[objNumber].options.x = opt;\n        gen_private.pages[pageNumber].data[objNumber].options.y = y_pos;\n\n        if (typeof x_size != 'undefined' && typeof y_size != 'undefined') {\n          gen_private.pages[pageNumber].data[objNumber].options.cx = x_size;\n          gen_private.pages[pageNumber].data[objNumber].options.cy = y_size;\n        } // Endif.\n\n      } // Endif.\n\n\n      if (typeof opt_b == 'object') {\n        for (var attrname in opt_b) {\n          gen_private.pages[pageNumber].data[objNumber].options[attrname] = opt_b[attrname];\n        }\n      } else if (typeof x_size == 'object' && typeof y_size == 'undefined') {\n        for (var attrname in x_size) {\n          gen_private.pages[pageNumber].data[objNumber].options[attrname] = x_size[attrname];\n        }\n      } // Endif.\n      // BMK_TODO:\n\n\n      return gen_private.pages[pageNumber].data[objNumber].data;\n    };\n\n    slideObj.addDateToHeader = function () {\n      if (!gen_private.pages[pageNumber].header) {\n        gen_private.pages[pageNumber].header = {};\n      } // Endif.\n      // gen_private.pages[pageNumber]\n      // <a:fld id=\"{5C7A2A3D-B97F-4EB0-B937-FE8C3AFCAC1A}\" type=\"datetime1\">\n      // BMK_TODO:\n\n    };\n\n    gen_private.plugs.intAddAnyResourceToParse('ppt\\\\slides\\\\slide' + (pageNumber + 1) + '.xml', 'buffer', gen_private.pages[pageNumber], cbMakePptxSlide, false);\n    gen_private.plugs.intAddAnyResourceToParse('ppt\\\\slides\\\\_rels\\\\slide' + (pageNumber + 1) + '.xml.rels', 'buffer', gen_private.pages[pageNumber].rels, gen_private.plugs.type.msoffice.cbMakeRels, false); // Signal to the plugins about a new slide:\n\n    gen_private.features.type.pptx.emitEvent('newPage', {\n      genobj: genobj,\n      page: slideObj,\n      pageData: gen_private.pages[pageNumber],\n      pageNumber: pageNumber,\n      slideOptions: slideOptions\n    });\n    return slideObj;\n  }; // Tell all the features (plugins) to add extra API:\n\n\n  gen_private.features.type.pptx.emitEvent('makeDocApi', genobj);\n  return this;\n}\n\nbaseobj.plugins.registerDocType('pptx', makePptx, {}, baseobj.docType.PRESENTATION, \"Microsoft PowerPoint Document\");\nbaseobj.plugins.registerDocType('ppsx', makePptx, {}, baseobj.docType.PRESENTATION, \"Microsoft PowerPoint Slideshow Document\");","map":null,"metadata":{},"sourceType":"script"}