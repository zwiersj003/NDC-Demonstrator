{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.renderNodes = exports.alignChildren = exports.renderText = undefined;\n/**\n * This function renders the text content and apply the corresponding styles to it\n * @param {string} child Child node\n * @param {Object} props Component props\n * @param {Object} styles Style attributes\n * @param {Object} instance Document instance\n */\n\nvar renderText = function () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(child, props, styles, instance) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return instance.addText(child, props.style ? (0, _styles.applyStyles)(props.style) : (0, _styles.applyStyles)(styles));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function renderText(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * \n * @param {Object} instance Document instance\n * @param {string} alignWithContext Align (Document component)\n * @param {string} alignThroughProp Align prop\n */\n\n/**\n * This function renders all the text nodes\n * @param {string} alignWithContext Align (Document component)\n * @param {string} alignThroughProp Align prop\n * @param {Object} styles Style attributes\n * @param {Object} instance Document instance\n * @param {Array} children Child node\n * @param {Object} props Component props\n */\n\n\nvar renderNodes = function () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(alignWithContext, alignThroughProp, styles, instance, children, props) {\n    var i;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            alignChildren(instance, alignWithContext, alignThroughProp);\n            i = 0;\n\n          case 2:\n            if (!(i < children.length)) {\n              _context2.next = 9;\n              break;\n            }\n\n            if (!(typeof children[i] === 'string')) {\n              _context2.next = 6;\n              break;\n            }\n\n            _context2.next = 6;\n            return renderText(children[i], props, styles, instance);\n\n          case 6:\n            i += 1;\n            _context2.next = 2;\n            break;\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function renderNodes(_x5, _x6, _x7, _x8, _x9, _x10) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar _styles = require('../styles/styles');\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new Promise(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return Promise.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n}\n\nfunction alignChildren(instance, alignWithContext, alignThroughProp) {\n  return instance.options.align = alignWithContext ? alignWithContext : alignThroughProp;\n}\n\nexports.renderText = renderText;\nexports.alignChildren = alignChildren;\nexports.renderNodes = renderNodes;","map":null,"metadata":{},"sourceType":"script"}