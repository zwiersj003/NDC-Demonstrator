{"ast":null,"code":"'use strict';\n\nvar path = require('path');\n\nvar which = require('which');\n\nvar LRU = require('lru-cache');\n\nvar commandCache = new LRU({\n  max: 50,\n  maxAge: 30 * 1000\n}); // Cache just for 30sec\n\nfunction resolveCommand(command, noExtension) {\n  var resolved;\n  noExtension = !!noExtension;\n  resolved = commandCache.get(command + '!' + noExtension); // Check if its resolved in the cache\n\n  if (commandCache.has(command)) {\n    return commandCache.get(command);\n  }\n\n  try {\n    resolved = !noExtension ? which.sync(command) : which.sync(command, {\n      pathExt: path.delimiter + (process.env.PATHEXT || '')\n    });\n  } catch (e) {\n    /* empty */\n  }\n\n  commandCache.set(command + '!' + noExtension, resolved);\n  return resolved;\n}\n\nmodule.exports = resolveCommand;","map":null,"metadata":{},"sourceType":"script"}