{"ast":null,"code":"var toObject = require('./toObject');\n/**\n * The base implementation of `get` without support for string paths\n * and default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path of the property to get.\n * @param {string} [pathKey] The key representation of path.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path, pathKey) {\n  if (object == null) {\n    return;\n  }\n\n  if (pathKey !== undefined && pathKey in toObject(object)) {\n    path = [pathKey];\n  }\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[path[index++]];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","map":null,"metadata":{},"sourceType":"script"}