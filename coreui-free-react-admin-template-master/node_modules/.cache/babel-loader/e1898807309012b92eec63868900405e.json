{"ast":null,"code":"// Generated by CoffeeScript 1.9.1\n(function () {\n  var XMLDTDAttList, create;\n  create = require('lodash/object/create');\n\n  module.exports = XMLDTDAttList = function () {\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      this.stringify = parent.stringify;\n\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name\");\n      }\n\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name\");\n      }\n\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type\");\n      }\n\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default\");\n      }\n\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT\");\n      }\n\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT\");\n      }\n\n      this.elementName = this.stringify.eleName(elementName);\n      this.attributeName = this.stringify.attName(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      this.defaultValueType = defaultValueType;\n    }\n\n    XMLDTDAttList.prototype.clone = function () {\n      return create(XMLDTDAttList.prototype, this);\n    };\n\n    XMLDTDAttList.prototype.toString = function (options, level) {\n      var indent, newline, offset, pretty, r, ref, ref1, ref2, space;\n      pretty = (options != null ? options.pretty : void 0) || false;\n      indent = (ref = options != null ? options.indent : void 0) != null ? ref : '  ';\n      offset = (ref1 = options != null ? options.offset : void 0) != null ? ref1 : 0;\n      newline = (ref2 = options != null ? options.newline : void 0) != null ? ref2 : '\\n';\n      level || (level = 0);\n      space = new Array(level + offset + 1).join(indent);\n      r = '';\n\n      if (pretty) {\n        r += space;\n      }\n\n      r += '<!ATTLIST ' + this.elementName + ' ' + this.attributeName + ' ' + this.attributeType;\n\n      if (this.defaultValueType !== '#DEFAULT') {\n        r += ' ' + this.defaultValueType;\n      }\n\n      if (this.defaultValue) {\n        r += ' \"' + this.defaultValue + '\"';\n      }\n\n      r += '>';\n\n      if (pretty) {\n        r += newline;\n      }\n\n      return r;\n    };\n\n    return XMLDTDAttList;\n  }();\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}