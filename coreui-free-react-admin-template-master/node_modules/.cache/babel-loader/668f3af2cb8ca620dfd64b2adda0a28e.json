{"ast":null,"code":"'use strict';\n\nvar cp = require('child_process');\n\nvar parse = require('./lib/parse');\n\nvar enoent = require('./lib/enoent');\n\nvar cpSpawnSync = cp.spawnSync;\n\nfunction spawn(command, args, options) {\n  var parsed;\n  var spawned; // Parse the arguments\n\n  parsed = parse(command, args, options); // Spawn the child process\n\n  spawned = cp.spawn(parsed.command, parsed.args, parsed.options); // Hook into child process \"exit\" event to emit an error if the command\n  // does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n\n  enoent.hookChildProcess(spawned, parsed);\n  return spawned;\n}\n\nfunction spawnSync(command, args, options) {\n  var parsed;\n  var result;\n\n  if (!cpSpawnSync) {\n    try {\n      cpSpawnSync = require('spawn-sync'); // eslint-disable-line global-require\n    } catch (ex) {\n      throw new Error('In order to use spawnSync on node 0.10 or older, you must ' + 'install spawn-sync:\\n\\n' + '  npm install spawn-sync --save');\n    }\n  } // Parse the arguments\n\n\n  parsed = parse(command, args, options); // Spawn the child process\n\n  result = cpSpawnSync(parsed.command, parsed.args, parsed.options); // Analyze if the command does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n\n  result.error = result.error || enoent.verifyENOENTSync(result.status, parsed);\n  return result;\n}\n\nmodule.exports = spawn;\nmodule.exports.spawn = spawn;\nmodule.exports.sync = spawnSync;\nmodule.exports._parse = parse;\nmodule.exports._enoent = enoent;","map":null,"metadata":{},"sourceType":"script"}