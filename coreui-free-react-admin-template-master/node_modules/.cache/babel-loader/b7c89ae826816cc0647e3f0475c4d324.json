{"ast":null,"code":"import _classCallCheck from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/src/components/Report/GroupStatistics.js\";\nimport React, { Component } from 'react';\nimport { Button, Card, CardHeader, CardBody, Label, Row, Col } from 'reactstrap';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\nvar bar = {\n  labels: ['Utrecht', 'Rotterdam', 'Emmen', 'Burgum', 'Arnhem', 'Tilburg'],\n  datasets: [{\n    label: 'Lopende modules',\n    backgroundColor: 'rgb(0,0,255)',\n    borderColor: 'rgb(0,0,0)',\n    borderWidth: 1,\n    hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n    hoverBorderColor: 'rgba(255,99,132,1)',\n    data: [2, 3, 6, 4, 5, 1]\n  }]\n};\nvar options = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips\n  },\n  maintainAspectRatio: false\n};\n\nfunction Welcome(props) {\n  var naam = props.naam + 'kaas';\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Hello, \", naam);\n}\n\nfunction LocationsChart(props) {\n  var locations = props.selectedLocations;\n  var pie = {\n    labels: locations.map(function (i) {\n      return i.label;\n    }),\n    datasets: [{\n      data: locations.map(function (i) {\n        return i.count;\n      }),\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#7CFC00', '#FF0000', '#FFFF00'],\n      hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#7CFC00', '#FF0000', '#FFFF00']\n    }]\n  };\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Aantal deelnemers per locatie\"), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chart-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Pie, {\n    data: pie,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))));\n}\n\nfunction getPercentage(first, second) {\n  var difference = second - first;\n\n  switch (difference) {\n    case 0:\n      return 0;\n\n    case 1:\n      return 25;\n\n    case 2:\n      return 50;\n\n    case 3:\n      return 75;\n\n    case 4:\n      return 100;\n\n    default:\n      return 0;\n  }\n}\n\nfunction Progression(props) {\n  var results = props.results;\n  var averageProgression = [{\n    percentage: '0%',\n    count: 1\n  }];\n  console.log(results);\n\n  for (var i = 0; i < results.length - 1; i++) {\n    if (results[i].Module_has_DeelnemerID === results[i + 1].Module_has_DeelnemerID && results[i].vragenlijstmoment === 0 && results[i + 1].vragenlijstmoment === 1) {\n      console.log('Match');\n      console.log('Pair: ' + results[i].Module_has_DeelnemerID);\n      var answers0 = results[i];\n      var answers1 = results[i + 1]; // answers0.vraag1\n\n      averageProgression.push(getPercentage(answers0, answers1));\n    } else {\n      console.log('No match');\n    }\n  }\n\n  console.log('Average Progression: ' + averageProgression);\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Vooruitgang(%) per vraag\"), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chart-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Bar, {\n    data: bar,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }))));\n}\n\nvar GroupStatistics =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GroupStatistics, _Component);\n\n  function GroupStatistics() {\n    _classCallCheck(this, GroupStatistics);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GroupStatistics).apply(this, arguments));\n  }\n\n  _createClass(GroupStatistics, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          results = _this$props.results,\n          selectedLocations = _this$props.selectedLocations;\n      return React.createElement(\"div\", {\n        className: \"group-statistics\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(LocationsChart, {\n        selectedLocations: selectedLocations,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(LocationsChart, {\n        selectedLocations: selectedLocations,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }))), React.createElement(Progression, {\n        results: results,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return GroupStatistics;\n}(Component);\n\nexport default GroupStatistics;","map":{"version":3,"sources":["/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/src/components/Report/GroupStatistics.js"],"names":["React","Component","Button","Card","CardHeader","CardBody","Label","Row","Col","Bar","Pie","CustomTooltips","bar","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","options","tooltips","enabled","custom","maintainAspectRatio","Welcome","props","naam","LocationsChart","locations","selectedLocations","pie","map","i","count","getPercentage","first","second","difference","Progression","results","averageProgression","percentage","console","log","length","Module_has_DeelnemerID","vragenlijstmoment","answers0","answers1","push","GroupStatistics"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Card, CardHeader, CardBody, Label, Row, Col } from 'reactstrap'\nimport { Bar, Pie } from 'react-chartjs-2'\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips'\n\nconst bar = {\n    labels: ['Utrecht', 'Rotterdam', 'Emmen', 'Burgum', 'Arnhem', 'Tilburg'],\n    datasets: [\n        {\n            label: 'Lopende modules',\n            backgroundColor: 'rgb(0,0,255)',\n            borderColor: 'rgb(0,0,0)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n            hoverBorderColor: 'rgba(255,99,132,1)',\n            data: [2, 3, 6, 4, 5, 1,],\n        },\n    ],\n};\n\nconst options = {\n    tooltips: {\n        enabled: false,\n        custom: CustomTooltips\n    },\n    maintainAspectRatio: false\n}\n\nfunction Welcome(props) {\n    var naam = props.naam + 'kaas'\n    return <h1>Hello, {naam}</h1>;\n}\n\nfunction LocationsChart(props) {\n    const locations = props.selectedLocations\n    const pie = {\n        labels: locations.map(i => i.label),\n        datasets: [{\n            data: locations.map(i => i.count),\n            backgroundColor: [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56',\n                '#7CFC00',\n                '#FF0000',\n                '#FFFF00'\n            ],\n            hoverBackgroundColor: [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56',\n                '#7CFC00',\n                '#FF0000',\n                '#FFFF00'\n            ],\n        }]\n    }\n    return (\n        <Card>\n            <CardHeader>\n                Aantal deelnemers per locatie\n            </CardHeader>\n            <CardBody>\n                <div className=\"chart-wrapper\">\n                    <Pie data={pie} />\n                </div>\n            </CardBody>\n        </Card>\n    )\n}\n\nfunction getPercentage(first, second) {\n    const difference = second - first\n    switch (difference) {\n        case 0:\n            return 0\n        case 1:\n            return 25\n        case 2:\n            return 50\n        case 3:\n            return 75\n        case 4:\n            return 100\n        default:\n            return 0\n    }\n}\n\nfunction Progression(props) {\n\n    const results = props.results\n    let averageProgression = [\n        {\n         percentage: '0%'\n         , count: 1\n        }\n          ]\n    console.log(results)\n\n    for (let i = 0; i < results.length - 1; i++) {\n        if (results[i].Module_has_DeelnemerID === results[i + 1].Module_has_DeelnemerID && results[i].vragenlijstmoment === 0 && results[i + 1].vragenlijstmoment === 1) {\n            console.log('Match')\n            console.log('Pair: ' + results[i].Module_has_DeelnemerID)\n            let answers0 = results[i]\n            let answers1 = results[i + 1]\n\n            // answers0.vraag1\n\n            averageProgression.push(getPercentage(answers0, answers1))\n        } else {\n            console.log('No match')\n        }\n    }\n    console.log('Average Progression: ' + averageProgression)\n\n    return (\n        <Card>\n            <CardHeader>\n                Vooruitgang(%) per vraag\n            </CardHeader>\n            <CardBody>\n                <div className=\"chart-wrapper\">\n                    <Bar data={bar} options={options} />\n                </div>\n            </CardBody>\n        </Card>\n    )\n}\n\nclass GroupStatistics extends Component {\n    render() {\n        let { results, selectedLocations } = this.props\n        return (\n            <div className=\"group-statistics\">\n                <Row>\n                    <Col sm=\"6\">\n                        <LocationsChart selectedLocations={selectedLocations} />\n                    </Col>\n                    <Col sm=\"6\">\n                        <LocationsChart selectedLocations={selectedLocations} />\n                    </Col>\n                </Row>\n                <Progression results={results} />\n            </div>\n        )\n    }\n}\n\nexport default GroupStatistics\n"]},"metadata":{},"sourceType":"module"}