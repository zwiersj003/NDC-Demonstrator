{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _styles = require('../styles/styles');\n\nvar _componentValidators = require('../validators/componentValidators');\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new Promise(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return Promise.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * This component renders a table with props 'headers', 'data' and 'style' for styling the table\n */\n\n\nvar Table = function () {\n  // Stores headers and corresponding data for the headers\n  function Table(root, props) {\n    _classCallCheck(this, Table);\n\n    this.TABLE_DATA = [];\n    this.defaultStyles = {\n      tableColWidth: 2500,\n      tableSize: 24,\n      tableColor: 'black',\n      tableAlign: 'left',\n      borders: true\n    };\n    this.root = root;\n    this.props = props;\n    (0, _componentValidators.validateTableProps)(this.props);\n    (0, _componentValidators.headerValidators)(this.props);\n    (0, _componentValidators.tableStyleValidators)(this.props);\n  } // set the headers and serialize each cell's data (in accordance with open office xml)\n  // Table styles (required for rendering a table)\n\n\n  _createClass(Table, [{\n    key: 'setHeaders',\n    value: function setHeaders(props) {\n      var headers = props.headers;\n      headers.forEach(function (header) {\n        header.val = header.value;\n        header.opts = header.styles;\n        header.opts = (0, _styles.styleSerializer)(header.opts);\n        delete header.value;\n        delete header.styles;\n      }); // for (let i of headers) {\n      //   i.val = i.value;\n      //   i.opts = i.styles;\n      //   // serialize all the styles according to open office xml values\n      //   i.opts = styleSerializer(i.opts);\n      //   // Inefficient (performance bottleneck)\n      //   delete i.value;\n      //   delete i.styles;\n      // }\n\n      this.TABLE_DATA.push(headers);\n    } // set the row data\n\n  }, {\n    key: 'setData',\n    value: function setData(props) {\n      var _this = this;\n\n      var data = props.data;\n      data.forEach(function (item) {\n        _this.TABLE_DATA.push(item);\n      });\n    } // Set everything and finally render a table ðŸ˜…\n\n  }, {\n    key: 'renderTable',\n    value: function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setHeaders(this.props);\n                this.setData(this.props);\n                _context.next = 4;\n                return this.root.doc.createTable(this.TABLE_DATA, this.props.style || this.defaultStyles);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function renderTable() {\n        return _ref.apply(this, arguments);\n      }\n\n      return renderTable;\n    }()\n  }, {\n    key: 'render',\n    value: function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.renderTable();\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function render() {\n        return _ref2.apply(this, arguments);\n      }\n\n      return render;\n    }()\n  }]);\n\n  return Table;\n}();\n\nexports.default = Table;","map":null,"metadata":{},"sourceType":"script"}