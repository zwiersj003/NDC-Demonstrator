{"ast":null,"code":"'use strict'; // The Node team wants to deprecate `process.bind(...)`.\n//   https://github.com/nodejs/node/pull/2768\n//\n// However, we need the 'uv' binding for errname support.\n// This is a defensive wrapper around it so `execa` will not fail entirely if it stops working someday.\n//\n// If this ever stops working. See: https://github.com/sindresorhus/execa/issues/31#issuecomment-215939939 for another possible solution.\n\nvar uv;\n\ntry {\n  uv = process.binding('uv');\n\n  if (typeof uv.errname !== 'function') {\n    throw new TypeError('uv.errname is not a function');\n  }\n} catch (err) {\n  console.error('execa/lib/errname: unable to establish process.binding(\\'uv\\')', err);\n  uv = null;\n}\n\nfunction errname(uv, code) {\n  if (uv) {\n    return uv.errname(code);\n  }\n\n  if (!(code < 0)) {\n    throw new Error('err >= 0');\n  }\n\n  return \"Unknown system error \".concat(code);\n}\n\nmodule.exports = function (code) {\n  return errname(uv, code);\n}; // Used for testing the fallback behavior\n\n\nmodule.exports.__test__ = errname;","map":null,"metadata":{},"sourceType":"script"}