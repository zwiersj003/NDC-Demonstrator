{"ast":null,"code":"import _classCallCheck from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/src/components/Report/GroupStatistics.js\";\nimport React, { Component } from 'react';\nimport { Button, Card, CardHeader, CardBody, Label, Row, Col } from 'reactstrap';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\n\nfunction LocationsChart(props) {\n  var locations = props.selectedLocations;\n  var pie = {\n    labels: locations.map(function (i) {\n      return i.label;\n    }),\n    datasets: [{\n      data: locations.map(function (i) {\n        return i.count;\n      }),\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#7CFC00', '#FF0000', '#FFFF00'],\n      hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#7CFC00', '#FF0000', '#FFFF00']\n    }]\n  };\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Aantal deelnemers per locatie\"), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chart-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Pie, {\n    data: pie,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))));\n}\n\nfunction getPercentage(first, second) {\n  var difference = second - first;\n\n  switch (difference) {\n    case 0:\n      return 4;\n\n    case 1:\n      return 5;\n\n    case 2:\n      return 6;\n\n    case 3:\n      return 7;\n\n    case 4:\n      return 8;\n\n    default:\n      return 0;\n  }\n}\n\nfunction Progression(props) {\n  var results = props.results;\n  var averageProgression1 = SetProgressionArray();\n  var averageProgression2 = SetProgressionArray();\n  var averageProgression3 = SetProgressionArray();\n  var averageProgression4 = SetProgressionArray();\n  var averageProgression5 = SetProgressionArray();\n  var averageProgression6 = SetProgressionArray();\n  var averageProgression7 = SetProgressionArray();\n  var averageProgression8 = SetProgressionArray();\n  var averageProgression9 = SetProgressionArray();\n\n  for (var i = 0; i < results.length - 1; i++) {\n    if (results[i].Module_has_DeelnemerID === results[i + 1].Module_has_DeelnemerID && results[i].vragenlijstmoment === 0 && results[i + 1].vragenlijstmoment === 1) {\n      var answers0 = results[i];\n      var answers1 = results[i + 1];\n      averageProgression1[getPercentage(answers0.vraag1, answers1.vraag1)].count += 1;\n      averageProgression2[getPercentage(answers0.vraag2, answers1.vraag2)].count += 1;\n      averageProgression3[getPercentage(answers0.vraag3, answers1.vraag3)].count += 1;\n      averageProgression4[getPercentage(answers0.vraag4, answers1.vraag4)].count += 1;\n      averageProgression5[getPercentage(answers0.vraag5, answers1.vraag5)].count += 1;\n      averageProgression6[getPercentage(answers0.vraag6, answers1.vraag6)].count += 1;\n      averageProgression7[getPercentage(answers0.vraag7, answers1.vraag7)].count += 1;\n      averageProgression8[getPercentage(answers0.vraag8, answers1.vraag8)].count += 1;\n      averageProgression9[getPercentage(answers0.vraag9, answers1.vraag9)].count += 1;\n    }\n  }\n\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Vooruitgang(%) per vraag\"), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"progressionbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Vraag 1\"), React.createElement(ProgressionBar, {\n    progression: averageProgression1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"progressionbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Vraag 2\"), React.createElement(ProgressionBar, {\n    progression: averageProgression2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"progressionbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Vraag 3\"), React.createElement(ProgressionBar, {\n    progression: averageProgression3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"progressionbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Vraag 4\"), React.createElement(ProgressionBar, {\n    progression: averageProgression4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"progressionbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Vraag 5\"), React.createElement(ProgressionBar, {\n    progression: averageProgression5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"progressionbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Vraag 6\"), React.createElement(ProgressionBar, {\n    progression: averageProgression6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"progressionbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Vraag 7\"), React.createElement(ProgressionBar, {\n    progression: averageProgression7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"progressionbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Vraag 8\"), React.createElement(ProgressionBar, {\n    progression: averageProgression8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"progressionbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Vraag 9\"), React.createElement(ProgressionBar, {\n    progression: averageProgression9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }))));\n}\n\nfunction ProgressionBar(props) {\n  var progression = props.progression || [];\n  var options = {\n    maintainAspectRatio: false,\n    tooltips: {\n      enabled: false,\n      custom: CustomTooltips\n    }\n  };\n  var bar = {\n    labels: progression.map(function (i) {\n      return i.percentage;\n    }),\n    datasets: [{\n      label: 'Aantal Deelnemers',\n      backgroundColor: '#00aee8',\n      borderColor: 'rgb(0,0,0)',\n      borderWidth: 1,\n      height: '100px',\n      hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n      hoverBorderColor: 'rgba(255,99,132,1)',\n      data: progression.map(function (i) {\n        return i.count;\n      })\n    }]\n  };\n  return React.createElement(\"div\", {\n    className: \"chart-wrapper progression-chart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(Bar, {\n    data: bar,\n    options: options,\n    height: 300,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }));\n}\n\nfunction SetProgressionArray() {\n  return [{\n    percentage: '-100%',\n    count: 0\n  }, {\n    percentage: '-75%',\n    count: 0\n  }, {\n    percentage: '-50%',\n    count: 0\n  }, {\n    percentage: '-25%',\n    count: 0\n  }, {\n    percentage: '0%',\n    count: 0\n  }, {\n    percentage: '25%',\n    count: 0\n  }, {\n    percentage: '50%',\n    count: 0\n  }, {\n    percentage: '75%',\n    count: 0\n  }, {\n    percentage: '100%',\n    count: 0\n  }];\n}\n\nvar GroupStatistics =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GroupStatistics, _Component);\n\n  function GroupStatistics() {\n    _classCallCheck(this, GroupStatistics);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GroupStatistics).apply(this, arguments));\n  }\n\n  _createClass(GroupStatistics, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          results = _this$props.results,\n          selectedLocations = _this$props.selectedLocations;\n      return React.createElement(\"div\", {\n        className: \"group-statistics\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(LocationsChart, {\n        selectedLocations: selectedLocations,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(LocationsChart, {\n        selectedLocations: selectedLocations,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }))), React.createElement(Progression, {\n        results: results,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return GroupStatistics;\n}(Component);\n\nexport default GroupStatistics;","map":{"version":3,"sources":["/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/src/components/Report/GroupStatistics.js"],"names":["React","Component","Button","Card","CardHeader","CardBody","Label","Row","Col","Bar","Pie","CustomTooltips","LocationsChart","props","locations","selectedLocations","pie","labels","map","i","label","datasets","data","count","backgroundColor","hoverBackgroundColor","getPercentage","first","second","difference","Progression","results","averageProgression1","SetProgressionArray","averageProgression2","averageProgression3","averageProgression4","averageProgression5","averageProgression6","averageProgression7","averageProgression8","averageProgression9","length","Module_has_DeelnemerID","vragenlijstmoment","answers0","answers1","vraag1","vraag2","vraag3","vraag4","vraag5","vraag6","vraag7","vraag8","vraag9","ProgressionBar","progression","options","maintainAspectRatio","tooltips","enabled","custom","bar","percentage","borderColor","borderWidth","height","hoverBorderColor","GroupStatistics"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Card, CardHeader, CardBody, Label, Row, Col } from 'reactstrap'\nimport { Bar, Pie } from 'react-chartjs-2'\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips'\n\nfunction LocationsChart(props) {\n    const locations = props.selectedLocations\n    const pie = {\n        labels: locations.map(i => i.label),\n        datasets: [{\n            data: locations.map(i => i.count),\n            backgroundColor: [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56',\n                '#7CFC00',\n                '#FF0000',\n                '#FFFF00'\n            ],\n            hoverBackgroundColor: [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56',\n                '#7CFC00',\n                '#FF0000',\n                '#FFFF00'\n            ],\n        }]\n    }\n    return (\n        <Card>\n            <CardHeader>\n                Aantal deelnemers per locatie\n            </CardHeader>\n            <CardBody>\n                <div className=\"chart-wrapper\">\n                    <Pie data={pie} />\n                </div>\n            </CardBody>\n        </Card>\n    )\n}\n\nfunction getPercentage(first, second) {\n    const difference = second - first\n    switch (difference) {\n        case 0:\n            return 4\n        case 1:\n            return 5\n        case 2:\n            return 6\n        case 3:\n            return 7\n        case 4:\n            return 8\n        default:\n            return 0\n    }\n}\n\nfunction Progression(props) {\n\n    const results = props.results\n    let averageProgression1 = SetProgressionArray()\n    let averageProgression2 = SetProgressionArray()\n    let averageProgression3 = SetProgressionArray()\n    let averageProgression4 = SetProgressionArray()\n    let averageProgression5 = SetProgressionArray()\n    let averageProgression6 = SetProgressionArray()\n    let averageProgression7 = SetProgressionArray()\n    let averageProgression8 = SetProgressionArray()\n    let averageProgression9 = SetProgressionArray()\n\n    for (let i = 0; i < results.length - 1; i++) {\n        if (results[i].Module_has_DeelnemerID === results[i + 1].Module_has_DeelnemerID && results[i].vragenlijstmoment === 0 && results[i + 1].vragenlijstmoment === 1) {\n            let answers0 = results[i]\n            let answers1 = results[i + 1]\n\n            averageProgression1[getPercentage(answers0.vraag1, answers1.vraag1)].count += 1\n            averageProgression2[getPercentage(answers0.vraag2, answers1.vraag2)].count += 1\n            averageProgression3[getPercentage(answers0.vraag3, answers1.vraag3)].count += 1\n            averageProgression4[getPercentage(answers0.vraag4, answers1.vraag4)].count += 1\n            averageProgression5[getPercentage(answers0.vraag5, answers1.vraag5)].count += 1\n            averageProgression6[getPercentage(answers0.vraag6, answers1.vraag6)].count += 1\n            averageProgression7[getPercentage(answers0.vraag7, answers1.vraag7)].count += 1\n            averageProgression8[getPercentage(answers0.vraag8, answers1.vraag8)].count += 1\n            averageProgression9[getPercentage(answers0.vraag9, answers1.vraag9)].count += 1\n        }\n    }\n\n    return (\n        <Card>\n            <CardHeader>\n                Vooruitgang(%) per vraag\n            </CardHeader>\n            <CardBody>\n                <div className=\"progressionbar\">\n                    <h5>Vraag 1</h5>\n                    <ProgressionBar progression={averageProgression1} />\n                </div>\n                <div className=\"progressionbar\">\n                    <h5>Vraag 2</h5>\n                    <ProgressionBar progression={averageProgression2} />\n                </div>\n                <div className=\"progressionbar\">\n                    <h5>Vraag 3</h5>\n                    <ProgressionBar progression={averageProgression3} />\n                </div>\n                <div className=\"progressionbar\">\n                    <h5>Vraag 4</h5>\n                    <ProgressionBar progression={averageProgression4} />\n                </div>\n                <div className=\"progressionbar\">\n                    <h5>Vraag 5</h5>\n                    <ProgressionBar progression={averageProgression5} />\n                </div>\n                <div className=\"progressionbar\">\n                    <h5>Vraag 6</h5>\n                    <ProgressionBar progression={averageProgression6} />\n                </div>\n                <div className=\"progressionbar\">\n                    <h5>Vraag 7</h5>\n                    <ProgressionBar progression={averageProgression7} />\n                </div>\n                <div className=\"progressionbar\">\n                    <h5>Vraag 8</h5>\n                    <ProgressionBar progression={averageProgression8} />\n                </div>\n                <div className=\"progressionbar\">\n                    <h5>Vraag 9</h5>\n                    <ProgressionBar progression={averageProgression9} />\n                </div>\n            </CardBody>\n        </Card>\n    )\n}\n\nfunction ProgressionBar(props) {\n    const progression = props.progression || []\n\n    const options = {\n        maintainAspectRatio: false,\n        tooltips: {\n            enabled: false,\n            custom: CustomTooltips\n        }\n    }\n\n    const bar = {\n        labels: progression.map(i => i.percentage),\n        datasets: [\n            {\n                label: 'Aantal Deelnemers',\n                backgroundColor: '#00aee8',\n                borderColor: 'rgb(0,0,0)',\n                borderWidth: 1,\n                height: '100px',\n                hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n                hoverBorderColor: 'rgba(255,99,132,1)',\n                data: progression.map(i => i.count),\n            },\n        ],\n    }\n\n    return (\n        <div className=\"chart-wrapper progression-chart\">\n            <Bar data={bar} options={options} height={300} />\n        </div>\n    )\n}\n\nfunction SetProgressionArray() {\n    return [\n        { percentage: '-100%', count: 0 },\n        { percentage: '-75%', count: 0 },\n        { percentage: '-50%', count: 0 },\n        { percentage: '-25%', count: 0 },\n        { percentage: '0%', count: 0 },\n        { percentage: '25%', count: 0 },\n        { percentage: '50%', count: 0 },\n        { percentage: '75%', count: 0 },\n        { percentage: '100%', count: 0 }\n    ]\n}\n\nclass GroupStatistics extends Component {\n    render() {\n        let { results, selectedLocations } = this.props\n        return (\n            <div className=\"group-statistics\">\n                <Row>\n                    <Col sm=\"6\">\n                        <LocationsChart selectedLocations={selectedLocations} />\n                    </Col>\n                    <Col sm=\"6\">\n                        <LocationsChart selectedLocations={selectedLocations} />\n                    </Col>\n                </Row>\n                <Progression results={results} />\n            </div>\n        )\n    }\n}\n\nexport default GroupStatistics\n"]},"metadata":{},"sourceType":"module"}