{"ast":null,"code":"// Generated by CoffeeScript 1.9.1\n(function () {\n  var XMLBuilder, XMLDeclaration, XMLDocType, XMLElement, XMLStringifier;\n  XMLStringifier = require('./XMLStringifier');\n  XMLDeclaration = require('./XMLDeclaration');\n  XMLDocType = require('./XMLDocType');\n  XMLElement = require('./XMLElement');\n\n  module.exports = XMLBuilder = function () {\n    function XMLBuilder(name, options) {\n      var root, temp;\n\n      if (name == null) {\n        throw new Error(\"Root element needs a name\");\n      }\n\n      if (options == null) {\n        options = {};\n      }\n\n      this.options = options;\n      this.stringify = new XMLStringifier(options);\n      temp = new XMLElement(this, 'doc');\n      root = temp.element(name);\n      root.isRoot = true;\n      root.documentObject = this;\n      this.rootObject = root;\n\n      if (!options.headless) {\n        root.declaration(options);\n\n        if (options.pubID != null || options.sysID != null) {\n          root.doctype(options);\n        }\n      }\n    }\n\n    XMLBuilder.prototype.root = function () {\n      return this.rootObject;\n    };\n\n    XMLBuilder.prototype.end = function (options) {\n      return this.toString(options);\n    };\n\n    XMLBuilder.prototype.toString = function (options) {\n      var indent, newline, offset, pretty, r, ref, ref1, ref2;\n      pretty = (options != null ? options.pretty : void 0) || false;\n      indent = (ref = options != null ? options.indent : void 0) != null ? ref : '  ';\n      offset = (ref1 = options != null ? options.offset : void 0) != null ? ref1 : 0;\n      newline = (ref2 = options != null ? options.newline : void 0) != null ? ref2 : '\\n';\n      r = '';\n\n      if (this.xmldec != null) {\n        r += this.xmldec.toString(options);\n      }\n\n      if (this.doctype != null) {\n        r += this.doctype.toString(options);\n      }\n\n      r += this.rootObject.toString(options);\n\n      if (pretty && r.slice(-newline.length) === newline) {\n        r = r.slice(0, -newline.length);\n      }\n\n      return r;\n    };\n\n    return XMLBuilder;\n  }();\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}