{"ast":null,"code":"import _classCallCheck from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/src/components/Report/IndividualStatistics.js\";\nimport React, { Component } from 'react';\nimport { Button, Card, CardHeader, CardBody, Label, Row, Col } from 'reactstrap';\nimport { Bar } from 'react-chartjs-2';\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\n\nfunction Progression(props) {\n  var results = props.results;\n  var test = [];\n\n  for (var i = 0; i < results.length - 1; i++) {\n    if (results[i].Module_has_DeelnemerID === results[i + 1].Module_has_DeelnemerID && results[i].vragenlijstmoment === 0 && results[i + 1].vragenlijstmoment === 1) {\n      var answers0 = results[i];\n      var answers1 = results[i + 1];\n      var progression = [];\n      progression.push({\n        percentage: getPercentage(answers0.vraag1, answers1.vraag1),\n        vraag: 1\n      });\n      progression.push({\n        percentage: getPercentage(answers0.vraag2, answers1.vraag2),\n        vraag: 2\n      });\n      progression.push({\n        percentage: getPercentage(answers0.vraag3, answers1.vraag3),\n        vraag: 3\n      });\n      progression.push({\n        percentage: getPercentage(answers0.vraag4, answers1.vraag4),\n        vraag: 4\n      });\n      progression.push({\n        percentage: getPercentage(answers0.vraag5, answers1.vraag5),\n        vraag: 5\n      });\n      progression.push({\n        percentage: getPercentage(answers0.vraag6, answers1.vraag6),\n        vraag: 6\n      });\n      progression.push({\n        percentage: getPercentage(answers0.vraag7, answers1.vraag7),\n        vraag: 7\n      });\n      progression.push({\n        percentage: getPercentage(answers0.vraag8, answers1.vraag8),\n        vraag: 8\n      });\n      progression.push({\n        percentage: getPercentage(answers0.vraag9, answers1.vraag9),\n        vraag: 9\n      });\n      test.push(React.createElement(ProgressionBar, {\n        progression: progression,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    }\n  }\n\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Vooruitgang(%) per vraag van deelnemer: \", results.Module_has_DeelnemerID), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, allprogression));\n}\n\nfunction getPercentage(first, second) {\n  var difference = second - first;\n\n  switch (difference) {\n    case -4:\n      return -100;\n\n    case -3:\n      return -75;\n\n    case -2:\n      return -50;\n\n    case -1:\n      return -25;\n\n    case 0:\n      return 0;\n\n    case 1:\n      return 25;\n\n    case 2:\n      return 50;\n\n    case 3:\n      return 75;\n\n    case 4:\n      return 100;\n\n    default:\n      return 0;\n  }\n}\n\nfunction ProgressionBar(props) {\n  // const progression = props.progression || []\n  var progression = props.progression || [];\n  var options = {\n    maintainAspectRatio: false,\n    tooltips: {\n      enabled: false,\n      custom: CustomTooltips\n    }\n  };\n  var bar = {\n    labels: progression.map(function (i) {\n      return i.vraag;\n    }),\n    datasets: [{\n      label: 'Vooruitgang(%)',\n      backgroundColor: '#00aee8',\n      borderColor: '#00aee8',\n      hoverBackgroundColor: '#00aee8',\n      hoverBorderColor: '#00aee8',\n      data: progression.map(function (i) {\n        return i.percentage;\n      })\n    }]\n  };\n  return React.createElement(\"div\", {\n    className: \"chart-wrapper progression-chart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Bar, {\n    data: bar,\n    options: options,\n    height: 300,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }));\n}\n\nvar IndividualStatistics =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(IndividualStatistics, _Component);\n\n  function IndividualStatistics() {\n    _classCallCheck(this, IndividualStatistics);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(IndividualStatistics).apply(this, arguments));\n  }\n\n  _createClass(IndividualStatistics, [{\n    key: \"render\",\n    value: function render() {\n      var results = this.props.results;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Progression, {\n        results: results,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return IndividualStatistics;\n}(Component);\n\nexport default IndividualStatistics;","map":{"version":3,"sources":["/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/src/components/Report/IndividualStatistics.js"],"names":["React","Component","Button","Card","CardHeader","CardBody","Label","Row","Col","Bar","CustomTooltips","Progression","props","results","test","i","length","Module_has_DeelnemerID","vragenlijstmoment","answers0","answers1","progression","push","percentage","getPercentage","vraag1","vraag","vraag2","vraag3","vraag4","vraag5","vraag6","vraag7","vraag8","vraag9","allprogression","first","second","difference","ProgressionBar","options","maintainAspectRatio","tooltips","enabled","custom","bar","labels","map","datasets","label","backgroundColor","borderColor","hoverBackgroundColor","hoverBorderColor","data","IndividualStatistics"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Card, CardHeader, CardBody, Label, Row, Col } from 'reactstrap'\nimport { Bar } from 'react-chartjs-2'\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips'\n\nfunction Progression(props) {\n    const results = props.results\n    let test = []\n\n    for (let i = 0; i < results.length - 1; i++) {\n        if (results[i].Module_has_DeelnemerID === results[i + 1].Module_has_DeelnemerID && results[i].vragenlijstmoment === 0 && results[i + 1].vragenlijstmoment === 1) {\n            let answers0 = results[i]\n            let answers1 = results[i + 1]\n\n            let progression = []\n\n            progression.push({ percentage: getPercentage(answers0.vraag1, answers1.vraag1), vraag: 1 })\n            progression.push({ percentage: getPercentage(answers0.vraag2, answers1.vraag2), vraag: 2 })\n            progression.push({ percentage: getPercentage(answers0.vraag3, answers1.vraag3), vraag: 3 })\n            progression.push({ percentage: getPercentage(answers0.vraag4, answers1.vraag4), vraag: 4 })\n            progression.push({ percentage: getPercentage(answers0.vraag5, answers1.vraag5), vraag: 5 })\n            progression.push({ percentage: getPercentage(answers0.vraag6, answers1.vraag6), vraag: 6 })\n            progression.push({ percentage: getPercentage(answers0.vraag7, answers1.vraag7), vraag: 7 })\n            progression.push({ percentage: getPercentage(answers0.vraag8, answers1.vraag8), vraag: 8 })\n            progression.push({ percentage: getPercentage(answers0.vraag9, answers1.vraag9), vraag: 9 })\n\n            test.push(\n                <ProgressionBar progression={progression} />\n            )\n        }\n    }\n    return (\n        <Card>\n            <CardHeader>\n                Vooruitgang(%) per vraag van deelnemer: {results.Module_has_DeelnemerID}\n            </CardHeader>\n            <CardBody>\n                {allprogression}\n            </CardBody>\n        </Card>\n    )\n}\n\nfunction getPercentage(first, second) {\n    const difference = second - first\n    switch (difference) {\n        case -4:\n            return -100\n        case -3:\n            return -75\n        case -2:\n            return -50\n        case -1:\n            return -25\n        case 0:\n            return 0\n        case 1:\n            return 25\n        case 2:\n            return 50\n        case 3:\n            return 75\n        case 4:\n            return 100\n        default:\n            return 0\n    }\n}\n\nfunction ProgressionBar(props) {\n    // const progression = props.progression || []\n    const progression = props.progression || []\n\n    const options = {\n        maintainAspectRatio: false,\n        tooltips: {\n            enabled: false,\n            custom: CustomTooltips\n        }\n    }\n\n    const bar = {\n        labels: progression.map(i => i.vraag),\n        datasets: [\n            {\n                label: 'Vooruitgang(%)',\n                backgroundColor: '#00aee8',\n                borderColor: '#00aee8',\n                hoverBackgroundColor: '#00aee8',\n                hoverBorderColor: '#00aee8',\n                data: progression.map(i => i.percentage),\n            },\n        ],\n    }\n\n    return (\n        <div className=\"chart-wrapper progression-chart\">\n            <Bar data={bar} options={options} height={300} />\n        </div>\n    )\n}\n\nclass IndividualStatistics extends Component {\n    render() {\n        let { results } = this.props\n        return (\n            <div>\n                <Progression results={results} />\n            </div>\n        )\n    }\n}\n\nexport default IndividualStatistics\n"]},"metadata":{},"sourceType":"module"}