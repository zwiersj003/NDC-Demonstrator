{"ast":null,"code":"//\n// officegen: Header and footer support for docx documents.\n//\n// Please refer to README.md for this module's documentations.\n//\n// NOTE:\n// - Before changing this code please refer to the hacking the code section on README.md.\n//\n// Copyright (c) 2017 Ziv Barber;\n//\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// 'Software'), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\nvar docxP = require('./docx-p.js');\n/**\r\n * Create the API object for either the header or the footer.\r\n * @param {object} headFootPlug Access to our plugin.\r\n * @param {string} mainElement The name of the main element of this resource type.\r\n * @param {string} pStyleDef The default style for the paragraph.\r\n * @constructor\r\n * @name MakeHeadFootObj\r\n */\n\n\nfunction MakeHeadFootObj(headFootPlug, mainElement, pStyleDef) {\n  this.headFootPlug = headFootPlug;\n  this.docType = mainElement;\n  this.docStartExtra = '';\n  this.docEndExtra = '';\n  this.pStyleDef = pStyleDef;\n  this.data = [];\n  return this;\n}\n/**\r\n * Create a new paragraph.\r\n *\r\n * @param {string} options Default options for all the objects inside this paragraph.\r\n */\n\n\nMakeHeadFootObj.prototype.createP = function (options) {\n  // Create a new instance of the paragraph object:\n  return new docxP(this.headFootPlug.pluginsman.genobj, this.headFootPlug.pluginsman.genPrivate, 'docx', this.data, {}, options);\n};\n/**\r\n * This function creating the docx header-footer plugin object.\r\n * @summary Create a new docx plugin.\r\n * @param {object} pluginsman Access to the plugins manager for docx documents.\r\n * @constructor\r\n * @name MakeHeadfootPlugin\r\n */\n\n\nfunction MakeHeadfootPlugin(pluginsman) {\n  var funcThis = this; // You can change it if you want to support more types, since that the Word and Excel document generators also supporting very similar plugins:\n\n  if (pluginsman.docType !== 'docx') {\n    throw \"[docx-headfoot] This plugin supporting only Word based documents.\";\n  } // Endif.\n\n\n  this.ogPluginsApi = pluginsman.ogPluginsApi; // Generic officegen API for plugins.\n\n  this.msPluginsApi = pluginsman.genPrivate.plugs.type.msoffice; // msoffice plugins API.\n\n  this.pluginsman = pluginsman; // Document type specific plugins API.\n\n  this.docxData = pluginsman.getDataStorage(); // Here you can store any temporary data needed for generating the document and depending on the data filled by the user.\n\n  this.mainPath = pluginsman.genPrivate.features.type.msoffice.main_path; // The \"folder\" name inside the document zip that all the specific resources of this document type are stored.\n\n  this.mainPathFile = pluginsman.genPrivate.features.type.msoffice.main_path_file; // The name of the main real xml resource of this document.\n\n  this.relsMain = pluginsman.genPrivate.type.msoffice.rels_main; // Main rels file.\n\n  this.relsApp = pluginsman.genPrivate.type.msoffice.rels_app; // Main rels file inside the specific document type \"folder\".\n\n  this.filesList = pluginsman.genPrivate.type.msoffice.files_list; // Resources list xml.\n\n  this.srcFilesList = pluginsman.genPrivate.type.msoffice.src_files_list; // For storing extra files inside the document zip.\n  //\n  // Catch events inside the document so we can extent it:\n  //\n  // We want to extend the main API of the docx document object:\n\n  pluginsman.registerCallback('makeDocApi', function (docObj) {\n    funcThis.extenddocxApi(docObj);\n  }); // This event tell us that the generator is about to start working:\n\n  pluginsman.registerCallback('beforeGen', function (docObj) {\n    funcThis.beforeGen(docObj);\n  });\n  return this;\n} //\n// Events implementations:\n//\n\n/**\r\n * This function extending the main document object with new API methods.\r\n * @param {object} docObj Document object.\r\n */\n\n\nMakeHeadfootPlugin.prototype.extenddocxApi = function (docObj) {\n  var funcThis = this;\n\n  docObj.getHeader = function (objSubType) {\n    if (objSubType) {\n      if (objSubType !== 'even' && objSubType !== 'first') {\n        throw 'objSubType can be either \"even\", \"first\" or false value';\n      } // Endif.\n\n    } // Endif.\n\n\n    objSubType = 'docHeader' + (objSubType || '');\n\n    if (funcThis.docxData[objSubType]) {\n      return funcThis.docxData[objSubType];\n    } // Endif.\n\n\n    funcThis.docxData[objSubType] = new MakeHeadFootObj(funcThis, 'hdr', 'Header');\n    return funcThis.docxData[objSubType];\n  };\n\n  docObj.getFooter = function (objSubType) {\n    if (objSubType) {\n      if (objSubType !== 'even' && objSubType !== 'first') {\n        throw 'objSubType can be either \"even\", \"first\" or false value';\n      } // Endif.\n\n    } // Endif.\n\n\n    objSubType = 'docFooter' + (objSubType || '');\n\n    if (funcThis.docxData[objSubType]) {\n      return funcThis.docxData[objSubType];\n    } // Endif.\n\n\n    funcThis.docxData[objSubType] = new MakeHeadFootObj(funcThis, 'ftr', 'Footer');\n    return funcThis.docxData[objSubType];\n  };\n};\n/**\r\n * This function been called just before starting to generate the output document zip.\r\n * @param {object} docObj Document object.\r\n */\n\n\nMakeHeadfootPlugin.prototype.beforeGen = function (docObj) {\n  var funcThis = this;\n  var isNeedHeadFoot = false;\n\n  if (funcThis.docxData.docHeader || funcThis.docxData.docHeadereven || funcThis.docxData.docHeaderfirst || funcThis.docxData.docFooter || funcThis.docxData.docFootereven || funcThis.docxData.docFooterfirst) {\n    isNeedHeadFoot = true;\n  } // Endif.\n\n\n  if (isNeedHeadFoot) {\n    // Create the endnotes resource:\n    this.ogPluginsApi.intAddAnyResourceToParse(this.mainPath + '\\\\endnotes.xml', 'buffer', null, function (data) {\n      return funcThis.cbEndNotes(data);\n    }, false); // Create the footnotes resource:\n\n    this.ogPluginsApi.intAddAnyResourceToParse(this.mainPath + '\\\\footnotes.xml', 'buffer', null, function (data) {\n      return funcThis.cbFootNotes(data);\n    }, false); // Create header1.xml:\n\n    this.ogPluginsApi.intAddAnyResourceToParse(this.mainPath + '\\\\header1.xml', 'buffer', funcThis.pluginsman.genobj.getHeader('even'), funcThis.pluginsman.genobj.cbMakeDocxDocument, false); // Create header2.xml:\n\n    this.ogPluginsApi.intAddAnyResourceToParse(this.mainPath + '\\\\header2.xml', 'buffer', funcThis.pluginsman.genobj.getHeader(), funcThis.pluginsman.genobj.cbMakeDocxDocument, false); // Create header3.xml:\n\n    this.ogPluginsApi.intAddAnyResourceToParse(this.mainPath + '\\\\header3.xml', 'buffer', funcThis.pluginsman.genobj.getHeader('first'), funcThis.pluginsman.genobj.cbMakeDocxDocument, false); // Create footer1.xml:\n\n    this.ogPluginsApi.intAddAnyResourceToParse(this.mainPath + '\\\\footer1.xml', 'buffer', funcThis.pluginsman.genobj.getFooter('even'), funcThis.pluginsman.genobj.cbMakeDocxDocument, false); // Create footer2.xml:\n\n    this.ogPluginsApi.intAddAnyResourceToParse(this.mainPath + '\\\\footer2.xml', 'buffer', funcThis.pluginsman.genobj.getFooter(), funcThis.pluginsman.genobj.cbMakeDocxDocument, false); // Create footer3.xml:\n\n    this.ogPluginsApi.intAddAnyResourceToParse(this.mainPath + '\\\\footer3.xml', 'buffer', funcThis.pluginsman.genobj.getFooter('first'), funcThis.pluginsman.genobj.cbMakeDocxDocument, false); // Add a rel entry to the main docx rels:\n\n    this.relsApp.push({\n      target: 'header1.xml',\n      type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/header',\n      clear: 'generate' // Placing 'generate' here means that officegen will destroy this entry in the files list after finishing to generate the document.\n\n    });\n    this.docxData.header1RelId = this.relsApp.length;\n    this.relsApp.push({\n      target: 'header2.xml',\n      type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/header',\n      clear: 'generate' // Placing 'generate' here means that officegen will destroy this entry in the files list after finishing to generate the document.\n\n    });\n    this.docxData.header2RelId = this.relsApp.length;\n    this.relsApp.push({\n      target: 'header3.xml',\n      type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/header',\n      clear: 'generate' // Placing 'generate' here means that officegen will destroy this entry in the files list after finishing to generate the document.\n\n    });\n    this.docxData.header3RelId = this.relsApp.length;\n    this.relsApp.push({\n      target: 'footer1.xml',\n      type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer',\n      clear: 'generate' // Placing 'generate' here means that officegen will destroy this entry in the files list after finishing to generate the document.\n\n    });\n    this.docxData.footer1RelId = this.relsApp.length;\n    this.relsApp.push({\n      target: 'footer2.xml',\n      type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer',\n      clear: 'generate' // Placing 'generate' here means that officegen will destroy this entry in the files list after finishing to generate the document.\n\n    });\n    this.docxData.footer2RelId = this.relsApp.length;\n    this.relsApp.push({\n      target: 'footer3.xml',\n      type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer',\n      clear: 'generate' // Placing 'generate' here means that officegen will destroy this entry in the files list after finishing to generate the document.\n\n    });\n    this.docxData.footer3RelId = this.relsApp.length;\n    this.relsApp.push({\n      target: 'endnotes.xml',\n      type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/endnotes',\n      clear: 'generate' // Placing 'generate' here means that officegen will destroy this entry in the files list after finishing to generate the document.\n\n    });\n    this.relsApp.push({\n      target: 'footnotes.xml',\n      type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/footernotes',\n      clear: 'generate' // Placing 'generate' here means that officegen will destroy this entry in the files list after finishing to generate the document.\n\n    }); // Filling secPrExtra with data will connect the header and footer to the Word document:\n\n    funcThis.docxData.secPrExtra = '<w:headerReference w:type=\"default\" r:id=\"rId' + this.docxData.header2RelId + '\"/>';\n    funcThis.docxData.secPrExtra += '<w:footerReference w:type=\"default\" r:id=\"rId' + this.docxData.footer2RelId + '\"/>';\n    funcThis.docxData.secPrExtra += '<w:headerReference w:type=\"first\" r:id=\"rId' + this.docxData.header3RelId + '\"/>';\n    funcThis.docxData.secPrExtra += '<w:footerReference w:type=\"first\" r:id=\"rId' + this.docxData.footer3RelId + '\"/>';\n    funcThis.docxData.secPrExtra += '<w:headerReference w:type=\"even\" r:id=\"rId' + this.docxData.header1RelId + '\"/>';\n    funcThis.docxData.secPrExtra += '<w:footerReference w:type=\"even\" r:id=\"rId' + this.docxData.footer1RelId + '\"/>'; // Add the notes master to the list of files in the document:\n\n    this.filesList.push({\n      name: '/' + this.mainPath + '/footnotes.xml',\n      type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml',\n      clear: 'generate' // Placing 'generate' here means that officegen will destroy this entry in the files list after finishing to generate the document.\n\n    }, {\n      name: '/' + this.mainPath + '/endnotes.xml',\n      type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml',\n      clear: 'generate' // Placing 'generate' here means that officegen will destroy this entry in the files list after finishing to generate the document.\n\n    }, {\n      name: '/' + this.mainPath + '/footer1.xml',\n      type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml',\n      clear: 'generate' // Placing 'generate' here means that officegen will destroy this entry in the files list after finishing to generate the document.\n\n    }, {\n      name: '/' + this.mainPath + '/footer2.xml',\n      type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml',\n      clear: 'generate' // Placing 'generate' here means that officegen will destroy this entry in the files list after finishing to generate the document.\n\n    }, {\n      name: '/' + this.mainPath + '/footer3.xml',\n      type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml',\n      clear: 'generate' // Placing 'generate' here means that officegen will destroy this entry in the files list after finishing to generate the document.\n\n    }, {\n      name: '/' + this.mainPath + '/header1.xml',\n      type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.header+xml',\n      clear: 'generate' // Placing 'generate' here means that officegen will destroy this entry in the files list after finishing to generate the document.\n\n    }, {\n      name: '/' + this.mainPath + '/header2.xml',\n      type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.header+xml',\n      clear: 'generate' // Placing 'generate' here means that officegen will destroy this entry in the files list after finishing to generate the document.\n\n    }, {\n      name: '/' + this.mainPath + '/header3.xml',\n      type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.header+xml',\n      clear: 'generate' // Placing 'generate' here means that officegen will destroy this entry in the files list after finishing to generate the document.\n\n    });\n  } // Endif.\n\n}; //\n// Resource generating callbacks:\n//\n\n/**\r\n * Create the endnotes resource.\r\n *\r\n * @param {object} data Data needed to generate this resource.\r\n * @return Text string.\r\n */\n\n\nMakeHeadfootPlugin.prototype.cbEndNotes = function (data) {\n  return this.msPluginsApi.cbMakeMsOfficeBasicXml(data) + '<w:endnotes xmlns:ve=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\" xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:wp=\"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing\" xmlns:w10=\"urn:schemas-microsoft-com:office:word\" xmlns:w=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\" xmlns:wne=\"http://schemas.microsoft.com/office/word/2006/wordml\"><w:endnote w:type=\"separator\" w:id=\"-1\"><w:p w:rsidR=\"002E67D7\" w:rsidRDefault=\"002E67D7\" w:rsidP=\"009F2180\"><w:pPr><w:spacing w:after=\"0\" w:line=\"240\" w:lineRule=\"auto\"/></w:pPr><w:r><w:separator/></w:r></w:p></w:endnote><w:endnote w:type=\"continuationSeparator\" w:id=\"0\"><w:p w:rsidR=\"002E67D7\" w:rsidRDefault=\"002E67D7\" w:rsidP=\"009F2180\"><w:pPr><w:spacing w:after=\"0\" w:line=\"240\" w:lineRule=\"auto\"/></w:pPr><w:r><w:continuationSeparator/></w:r></w:p></w:endnote></w:endnotes>';\n};\n/**\r\n * Create the footnotes resource.\r\n *\r\n * @param {object} data Data needed to generate this resource.\r\n * @return Text string.\r\n */\n\n\nMakeHeadfootPlugin.prototype.cbFootNotes = function (data) {\n  return this.msPluginsApi.cbMakeMsOfficeBasicXml(data) + '<w:footnotes xmlns:ve=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\" xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:wp=\"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing\" xmlns:w10=\"urn:schemas-microsoft-com:office:word\" xmlns:w=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\" xmlns:wne=\"http://schemas.microsoft.com/office/word/2006/wordml\"><w:footnote w:type=\"separator\" w:id=\"-1\"><w:p w:rsidR=\"002E67D7\" w:rsidRDefault=\"002E67D7\" w:rsidP=\"009F2180\"><w:pPr><w:spacing w:after=\"0\" w:line=\"240\" w:lineRule=\"auto\"/></w:pPr><w:r><w:separator/></w:r></w:p></w:footnote><w:footnote w:type=\"continuationSeparator\" w:id=\"0\"><w:p w:rsidR=\"002E67D7\" w:rsidRDefault=\"002E67D7\" w:rsidP=\"009F2180\"><w:pPr><w:spacing w:after=\"0\" w:line=\"240\" w:lineRule=\"auto\"/></w:pPr><w:r><w:continuationSeparator/></w:r></w:p></w:footnote></w:footnotes>';\n};\n\nmodule.exports = MakeHeadfootPlugin;","map":null,"metadata":{},"sourceType":"script"}