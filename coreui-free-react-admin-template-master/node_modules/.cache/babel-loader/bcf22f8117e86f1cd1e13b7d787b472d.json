{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _styles = require('../styles/styles');\n\nvar _nodes = require('../utils/nodes');\n\nvar _Root2 = require('./Root');\n\nvar _Root3 = _interopRequireDefault(_Root2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new Promise(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return Promise.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * We need the parent class because it keeps the track of the parent node and the -\n * Image component and calls the render method depending upon where the component -\n * lies. For example - If Image component is children of Text component -\n * then its parent is Text component not the main Document component so we avoid -\n * calling render method on it twice\n */\n\n\nvar Image = function (_Root) {\n  _inherits(Image, _Root);\n\n  function Image(root, props) {\n    _classCallCheck(this, Image);\n\n    var _this = _possibleConstructorReturn(this, (Image.__proto__ || Object.getPrototypeOf(Image)).call(this, root, props));\n\n    _this.root = root;\n    _this.props = props;\n    _this.name = 'Image';\n    return _this;\n  }\n\n  _createClass(Image, [{\n    key: 'renderImage',\n    value: function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(align) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.adder = this.root.doc.createP(); // Align the image with context by Document or through component prop 'align'\n\n                (0, _nodes.alignChildren)(this.adder, align, this.props.align);\n                _context.next = 4;\n                return this.adder.addImage(_path2.default.resolve(this.props.src), (0, _styles.applyImageProps)(this.props));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function renderImage(_x) {\n        return _ref.apply(this, arguments);\n      }\n\n      return renderImage;\n    }()\n  }, {\n    key: 'render',\n    value: function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(align) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.parent === null ? this.renderImage(align) : null;\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function render(_x2) {\n        return _ref2.apply(this, arguments);\n      }\n\n      return render;\n    }()\n  }]);\n\n  return Image;\n}(_Root3.default);\n\nexports.default = Image;","map":null,"metadata":{},"sourceType":"script"}