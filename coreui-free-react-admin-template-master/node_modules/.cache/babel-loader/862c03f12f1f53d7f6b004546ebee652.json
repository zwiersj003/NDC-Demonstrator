{"ast":null,"code":"import _classCallCheck from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/src/components/Report/Demo.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody } from 'reactstrap';\nimport PDF, { Text, AddPage, Line, Table, Html } from 'jspdf-react';\n\nvar Example =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Example, _Component);\n\n  function Example(props) {\n    _classCallCheck(this, Example);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Example).call(this, props));\n  }\n\n  _createClass(Example, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('Component did mount');\n      console.log(this.props.location.state.message);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var properties = {\n        title: 'Acme'\n      };\n      var columns = [\"ID\", \"Name\", \"Country\"];\n      var rows = [[1, \"Shaw\", \"Tanzania\"], [2, \"Nelson\", \"Kazakhstan\"], [3, \"Garcia\", \"Madagascar\"]];\n      return React.createElement(\"div\", {\n        className: \"report-pdf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.props.location.state)), React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(PDF, {\n        properties: properties,\n        preview: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Text, {\n        x: 35,\n        y: 25,\n        size: 40,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Octonyan loves jsPDF\"), React.createElement(AddPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(Table, {\n        columns: columns,\n        rows: rows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(AddPage, {\n        format: \"a6\",\n        orientation: \"l\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(Text, {\n        x: 10,\n        y: 10,\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Sample\"), React.createElement(Line, {\n        lines: 30,\n        x: 11,\n        y: 11,\n        scale: 11,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(AddPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Html, {\n        sourceById: \"page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"page\",\n        style: {\n          visibility: \"hidden\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Source Html\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"lorem ipsumLorem \"), \"Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"))))));\n    }\n  }]);\n\n  return Example;\n}(Component);\n\nexport { Example as default };","map":{"version":3,"sources":["/Users/jasper/Documents/Documents/Zorgtechnologie/Programming/Demonstrator/NDC-Demonstrator/coreui-free-react-admin-template-master/src/components/Report/Demo.js"],"names":["React","Component","Card","CardBody","PDF","Text","AddPage","Line","Table","Html","Example","props","console","log","location","state","message","properties","title","columns","rows","visibility"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, CardBody } from 'reactstrap'\nimport PDF, { Text, AddPage, Line, Table, Html } from 'jspdf-react'\n\nexport default class Example extends Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n        console.log('Component did mount')\n        console.log(this.props.location.state.message)\n    }\n\n    render() {\n        const properties = { title: 'Acme' }\n        const columns = [\"ID\", \"Name\", \"Country\"]\n        const rows = [\n            [1, \"Shaw\", \"Tanzania\"],\n            [2, \"Nelson\", \"Kazakhstan\"],\n            [3, \"Garcia\", \"Madagascar\"],\n        ]\n        return (\n            <div className=\"report-pdf\">\n                <Card>\n                    <CardBody>\n                        <div>\n                            <p>{this.props.location.state}</p>\n                        </div>\n                        <React.Fragment>\n                            <PDF properties={properties} preview={true}>\n                                <Text x={35} y={25} size={40}>Octonyan loves jsPDF</Text>\n                                <AddPage />\n                                <Table columns={columns} rows={rows} />\n                                <AddPage format='a6' orientation='l' />\n                                <Text x={10} y={10} color='red'>Sample</Text>\n                                <Line lines={30} x={11} y={11} scale={11} />\n                                <AddPage />\n                                <Html sourceById='page' />\n                            </PDF>\n                            <div id=\"page\" style={{\n                                visibility: \"hidden\"\n                            }}>\n                                <h1>Source Html</h1>\n                                <p>\n                                    <strong>lorem ipsumLorem </strong>Ipsum is simply dummy text of the printing and\n                                    typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever\n                                    since the 1500s, when an unknown printer took a galley of type and scrambled it to\n                                    make a type specimen book. It has survived not only five centuries, but also the\n                                    leap into electronic typesetting, remaining essentially unchanged. It was popularised\n                                    in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages,\n                                    and more recently with desktop publishing software like Aldus PageMaker including\n                                    versions of Lorem Ipsum.\n                            </p>\n                            </div>\n                        </React.Fragment>\n                    </CardBody>\n                </Card>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}