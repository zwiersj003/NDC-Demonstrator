{"ast":null,"code":"'use strict';\n\nvar fs = require('fs');\n\nvar LRU = require('lru-cache');\n\nvar shebangCommand = require('shebang-command');\n\nvar shebangCache = new LRU({\n  max: 50,\n  maxAge: 30 * 1000\n}); // Cache just for 30sec\n\nfunction readShebang(command) {\n  var buffer;\n  var fd;\n  var shebang; // Check if it is in the cache first\n\n  if (shebangCache.has(command)) {\n    return shebangCache.get(command);\n  } // Read the first 150 bytes from the file\n\n\n  buffer = new Buffer(150);\n\n  try {\n    fd = fs.openSync(command, 'r');\n    fs.readSync(fd, buffer, 0, 150, 0);\n    fs.closeSync(fd);\n  } catch (e) {}\n  /* empty */\n  // Attempt to extract shebang (null is returned if not a shebang)\n\n\n  shebang = shebangCommand(buffer.toString()); // Store the shebang in the cache\n\n  shebangCache.set(command, shebang);\n  return shebang;\n}\n\nmodule.exports = readShebang;","map":null,"metadata":{},"sourceType":"script"}